syntax = "proto3";

package scalekit.v1.auth.passwordless;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "scalekit/v1/commons/commons.proto";
import "scalekit/v1/options/options.proto";

option go_package = "github.com/scalekit-inc/scalekit/pkg/grpc/auth/passwordless";

service PasswordlessService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    name: "Passwordless Auth"
    description: "Endpoints for sending and verifying passwordless authentication emails. These APIs allow users to authenticate without passwords by receiving a verification code or magic link in their email."
  };

  rpc SendPasswordlessEmail(SendPasswordlessRequest) returns (SendPasswordlessResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: CLIENT};
    option (google.api.http) = {
      post: "/api/v1/passwordless/email/send"
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Passwordless Auth"
      summary: "Send passwordless email"
      description: "Send a verification email containing either a verification code (OTP), magic link, or both to a user's email address"

      responses: {
        key: "200"
        value: {
          description: "Successfully sent passwordless authentication email. Returns the authentication request details including expiration time and auth request ID"
          schema: {
            json_schema: {ref: "#/definitions/passwordlessSendPasswordlessResponse"}
          }
        }
      }
    };
  }

  rpc VerifyPasswordlessEmail(VerifyPasswordLessRequest) returns (VerifyPasswordLessResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: CLIENT};
    option (google.api.http) = {
      post: "/api/v1/passwordless/email/verify"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Passwordless Auth"
      summary: "Verify passwordless email"
      description: "Verify a user's identity using either a verification code or magic link token"
      responses: {
        key: "200"
        value: {
          description: "Successfully verified the passwordless authentication. Returns user email"
          schema: {
            json_schema: {ref: ".scalekit.v1.auth.passwordless.VerifyPasswordLessResponse"}
          }
        }
      }
    };
  }

  rpc ResendPasswordlessEmail(ResendPasswordlessRequest) returns (SendPasswordlessResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: CLIENT};
    option (google.api.http) = {
      post: "/api/v1/passwordless/email/resend"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Passwordless Auth"
      summary: "Resend passwordless email"
      description: "Resend a verification email if the user didn't receive it or if the previous code/link has expired"
      responses: {
        key: "200"
        value: {
          description: "Successfully resent the passwordless authentication email. Returns updated authentication request details with new expiration time."
          schema: {
            json_schema: {ref: ".scalekit.v1.auth.passwordless.SendPasswordlessResponse"}
          }
        }
      }
    };
  }
}

message SendPasswordlessRequest {
  string email = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 320
      email: true
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Email address where the passwordless authentication credentials will be sent. Must be a valid email format."
      example: "\"john.doe@example.com\""
    }
  ];
  optional TemplateType template = 2 [
    (buf.validate.field).enum.defined_only = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Specifies the authentication intent for the passwordless request. Use SIGNIN for existing users or SIGNUP for new user registration. This affects the email template and user experience flow."
      example: "\"SIGNIN\""
    }
  ];

  optional string magiclink_auth_uri = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 1000
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Your application's callback URL where users will be redirected after clicking the magic link in their email. The link token will be appended as a query parameter as link_token"
      example: "\"https://yourapp.com/auth/passwordless/callback\""
    }
  ];

  optional string state = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 1000
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Custom state parameter that will be returned unchanged in the verification response. Use this to maintain application state between the authentication request and callback, such as the intended destination after login"
      example: "\"d62ivasry29lso\""
    }
  ];

  optional uint32 expires_in = 5 [
    (google.api.field_behavior) = OPTIONAL,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Time in seconds until the passwordless authentication expires. If not specified, defaults to 300 seconds (5 minutes)"
      example: "300"
    }
  ];

  map<string, string> template_variables = 6 [
    (google.api.field_behavior) = OPTIONAL,
    (buf.validate.field).map = {max_pairs: 30},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "A set of key-value pairs to personalize the email template.\n\n* You may include up to 30 key-value pairs.\n* The following variable names are reserved by the system and cannot be supplied: `otp`, `expiry_time_relative`, `link`, `expire_time`, `expiry_time`.\n* Every variable referenced in your email template must be included as a key-value pair.\n\nUse these variables to insert custom information, such as a team name, URL or the user's employee ID. All variables are interpolated before the email is sent, regardless of the email provider."
      example: '{"custom_variable_key": "custom_variable_value"}'
    }
  ];
}

message SendPasswordlessResponse {
  string auth_request_id = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Unique identifier for this passwordless authentication request. Use this ID to resend emails."
      example: "\"h5Y8kT5RVwaea5WEgW4n-6C-aO_-fuTUW7Vb9-Rh3AcY9qxZqQ\""
    }
  ];
  int64 expires_at = 2 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Unix timestamp (seconds since epoch) when the passwordless authentication will expire. After this time, the OTP or magic link will no longer be valid."
      example: "1748696575"
    }
  ];

  uint32 expires_in = 3 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Number of seconds from now until the passwordless authentication expires. This is a convenience field calculated from the expires_at timestamp."
      example: "300"
    }
  ];

  PasswordlessType passwordless_type = 4 [
    (buf.validate.field).enum.defined_only = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Type of passwordless authentication that was sent via email. OTP sends a numeric code, LINK sends a clickable magic link, and LINK_OTP provides both options for user convenience."
      example: "\"OTP\""
    }
  ];
}

message VerifyPasswordLessRequest {
  oneof auth_credential {
    string code = 1 [
      (buf.validate.field).string = {
        min_len: 1
        max_len: 20
      },
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "The Verification Code (OTP) received via email. This is typically a 6-digit numeric code that users enter manually to verify their identity."
        example: "\"123456\""
      }
    ];

    string link_token = 2 [
      (buf.validate.field).string = {
        min_len: 1
        max_len: 100
      },
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "The unique token from the magic link URL received via email. Extract this token when users click the magic link and are redirected to your application to later verify the user."
        example: "\"afe9d61c-d80d-4020-a8ee-61765ab71cb3\""
      }
    ];
  }

  optional string auth_request_id = 3 [
    (buf.validate.field).string = {max_len: 200},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The authentication request identifier returned from the send passwordless email endpoint. Required when verifying OTP codes to link the verification with the original request."
      example: "\"h5Y8kT5RVwaea5WEgW4n-6C-aO_-fuTUW7Vb9-Rh3AcY9qxZqQ\""
    }
  ];
}

message ResendPasswordlessRequest {
  string auth_request_id = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 200
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The authentication request identifier from the original send passwordless email request. Use this to resend the Verification Code (OTP) or Magic Link to the same email address."
      example: "\"h5Y8kT5RVwaea5WEgW4n-6C-aO_-fuTUW7Vb9-Rh3AcY9qxZqQ\""
    }
  ];
}

message VerifyPasswordLessResponse {
  string email = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Email address of the successfully authenticated user. This confirms which email account was verified through the passwordless flow."
      example: "\"john.doe@example.com\""
    }
  ];
  optional string state = 2 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The custom state parameter that was provided in the original authentication request, returned unchanged. Use this to restore your application's context after authentication."
      example: "\"kdt7yiag28t341fr1\""
    }
  ];

  optional TemplateType template = 3 [
    (buf.validate.field).enum.defined_only = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Specifies which email template to choose. For User Signin choose SIGNIN and for User Signup use SIGNUP"
      example: "\"SIGNIN\""
    }
  ];

  PasswordlessType passwordless_type = 4 [
    (buf.validate.field).enum.defined_only = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The type of passwordless authentication that was successfully verified, confirming which method the user completed."
      example: "\"OTP\""
    }
  ];
}

enum TemplateType {
  UNSPECIFIED = 0;
  SIGNIN = 1;
  SIGNUP = 2;
}

enum PasswordlessType {
  PASSWORDLESS_TYPE_UNSPECIFIED = 0;
  OTP = 1;
  LINK = 2;
  LINK_OTP = 3;
}
