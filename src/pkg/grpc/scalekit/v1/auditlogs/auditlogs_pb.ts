// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file scalekit/v1/auditlogs/auditlogs.proto (package scalekit.v1.auditlogs, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from message scalekit.v1.auditlogs.ListAuthLogRequest
 */
export class ListAuthLogRequest extends Message<ListAuthLogRequest> {
  /**
   * @generated from field: uint32 page_size = 1;
   */
  pageSize = 0;

  /**
   * @generated from field: string page_token = 2;
   */
  pageToken = "";

  /**
   * @generated from field: string email = 3;
   */
  email = "";

  /**
   * @generated from field: string status = 4;
   */
  status = "";

  /**
   * @generated from field: google.protobuf.Timestamp start_time = 5;
   */
  startTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp end_time = 6;
   */
  endTime?: Timestamp;

  constructor(data?: PartialMessage<ListAuthLogRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.auditlogs.ListAuthLogRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "page_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "start_time", kind: "message", T: Timestamp },
    { no: 6, name: "end_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAuthLogRequest {
    return new ListAuthLogRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAuthLogRequest {
    return new ListAuthLogRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAuthLogRequest {
    return new ListAuthLogRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListAuthLogRequest | PlainMessage<ListAuthLogRequest> | undefined, b: ListAuthLogRequest | PlainMessage<ListAuthLogRequest> | undefined): boolean {
    return proto3.util.equals(ListAuthLogRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.auditlogs.ListAuthLogResponse
 */
export class ListAuthLogResponse extends Message<ListAuthLogResponse> {
  /**
   * @generated from field: string next_page_token = 1;
   */
  nextPageToken = "";

  /**
   * @generated from field: string prev_page_token = 2;
   */
  prevPageToken = "";

  /**
   * @generated from field: uint32 total_size = 3;
   */
  totalSize = 0;

  /**
   * @generated from field: repeated scalekit.v1.auditlogs.AuthLogRequest authRequests = 4;
   */
  authRequests: AuthLogRequest[] = [];

  constructor(data?: PartialMessage<ListAuthLogResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.auditlogs.ListAuthLogResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "prev_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "total_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "authRequests", kind: "message", T: AuthLogRequest, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListAuthLogResponse {
    return new ListAuthLogResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListAuthLogResponse {
    return new ListAuthLogResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListAuthLogResponse {
    return new ListAuthLogResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListAuthLogResponse | PlainMessage<ListAuthLogResponse> | undefined, b: ListAuthLogResponse | PlainMessage<ListAuthLogResponse> | undefined): boolean {
    return proto3.util.equals(ListAuthLogResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.auditlogs.AuthLogRequest
 */
export class AuthLogRequest extends Message<AuthLogRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  /**
   * @generated from field: string environment_id = 2;
   */
  environmentId = "";

  /**
   * @generated from field: string connection_id = 3;
   */
  connectionId = "";

  /**
   * @generated from field: string auth_request_id = 4;
   */
  authRequestId = "";

  /**
   * @generated from field: string email = 5;
   */
  email = "";

  /**
   * @generated from field: string connection_type = 6;
   */
  connectionType = "";

  /**
   * @generated from field: string connection_provider = 7;
   */
  connectionProvider = "";

  /**
   * @generated from field: string status = 8;
   */
  status = "";

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 9;
   */
  timestamp?: Timestamp;

  /**
   * @generated from field: repeated scalekit.v1.auditlogs.ConnectionDetails connection_details = 10;
   */
  connectionDetails: ConnectionDetails[] = [];

  /**
   * @generated from field: string workflow = 11;
   */
  workflow = "";

  constructor(data?: PartialMessage<AuthLogRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.auditlogs.AuthLogRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "environment_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "auth_request_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "connection_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "connection_provider", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "timestamp", kind: "message", T: Timestamp },
    { no: 10, name: "connection_details", kind: "message", T: ConnectionDetails, repeated: true },
    { no: 11, name: "workflow", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthLogRequest {
    return new AuthLogRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthLogRequest {
    return new AuthLogRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthLogRequest {
    return new AuthLogRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AuthLogRequest | PlainMessage<AuthLogRequest> | undefined, b: AuthLogRequest | PlainMessage<AuthLogRequest> | undefined): boolean {
    return proto3.util.equals(AuthLogRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.auditlogs.ConnectionDetails
 */
export class ConnectionDetails extends Message<ConnectionDetails> {
  /**
   * @generated from field: string connection_id = 1;
   */
  connectionId = "";

  /**
   * @generated from field: string organization_id = 2;
   */
  organizationId = "";

  /**
   * @generated from field: string connection_type = 3;
   */
  connectionType = "";

  /**
   * @generated from field: string connection_provider = 4;
   */
  connectionProvider = "";

  constructor(data?: PartialMessage<ConnectionDetails>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.auditlogs.ConnectionDetails";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "connection_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "connection_provider", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConnectionDetails {
    return new ConnectionDetails().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConnectionDetails {
    return new ConnectionDetails().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConnectionDetails {
    return new ConnectionDetails().fromJsonString(jsonString, options);
  }

  static equals(a: ConnectionDetails | PlainMessage<ConnectionDetails> | undefined, b: ConnectionDetails | PlainMessage<ConnectionDetails> | undefined): boolean {
    return proto3.util.equals(ConnectionDetails, a, b);
  }
}

