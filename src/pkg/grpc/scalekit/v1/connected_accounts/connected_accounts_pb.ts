// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file scalekit/v1/connected_accounts/connected_accounts.proto (package scalekit.v1.connected_accounts, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Struct, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from enum scalekit.v1.connected_accounts.ConnectorStatus
 */
export enum ConnectorStatus {
  /**
   * @generated from enum value: CONNECTION_STATUS_UNSPECIFIED = 0;
   */
  CONNECTION_STATUS_UNSPECIFIED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: EXPIRED = 2;
   */
  EXPIRED = 2,

  /**
   * @generated from enum value: PENDING_AUTH = 3;
   */
  PENDING_AUTH = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ConnectorStatus)
proto3.util.setEnumType(ConnectorStatus, "scalekit.v1.connected_accounts.ConnectorStatus", [
  { no: 0, name: "CONNECTION_STATUS_UNSPECIFIED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "EXPIRED" },
  { no: 3, name: "PENDING_AUTH" },
]);

/**
 * @generated from enum scalekit.v1.connected_accounts.ConnectorType
 */
export enum ConnectorType {
  /**
   * @generated from enum value: CONNECTION_TYPE_UNSPECIFIED = 0;
   */
  CONNECTION_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: OAUTH = 1;
   */
  OAUTH = 1,

  /**
   * @generated from enum value: API_KEY = 2;
   */
  API_KEY = 2,

  /**
   * @generated from enum value: BASIC_AUTH = 3;
   */
  BASIC_AUTH = 3,

  /**
   * @generated from enum value: BEARER_TOKEN = 4;
   */
  BEARER_TOKEN = 4,

  /**
   * @generated from enum value: CUSTOM = 5;
   */
  CUSTOM = 5,

  /**
   * @generated from enum value: BASIC = 6;
   */
  BASIC = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(ConnectorType)
proto3.util.setEnumType(ConnectorType, "scalekit.v1.connected_accounts.ConnectorType", [
  { no: 0, name: "CONNECTION_TYPE_UNSPECIFIED" },
  { no: 1, name: "OAUTH" },
  { no: 2, name: "API_KEY" },
  { no: 3, name: "BASIC_AUTH" },
  { no: 4, name: "BEARER_TOKEN" },
  { no: 5, name: "CUSTOM" },
  { no: 6, name: "BASIC" },
]);

/**
 * @generated from message scalekit.v1.connected_accounts.ListConnectedAccountsRequest
 */
export class ListConnectedAccountsRequest extends Message<ListConnectedAccountsRequest> {
  /**
   * @generated from field: optional string organization_id = 1;
   */
  organizationId?: string;

  /**
   * @generated from field: optional string user_id = 2;
   */
  userId?: string;

  /**
   * @generated from field: optional string connector = 3;
   */
  connector?: string;

  /**
   * @generated from field: optional string identifier = 4;
   */
  identifier?: string;

  /**
   * @generated from field: string provider = 5;
   */
  provider = "";

  /**
   * @generated from field: uint32 page_size = 6;
   */
  pageSize = 0;

  /**
   * @generated from field: string page_token = 7;
   */
  pageToken = "";

  /**
   * @generated from field: string query = 8;
   */
  query = "";

  constructor(data?: PartialMessage<ListConnectedAccountsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connected_accounts.ListConnectedAccountsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "connector", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "identifier", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "provider", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "page_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 7, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "query", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListConnectedAccountsRequest {
    return new ListConnectedAccountsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListConnectedAccountsRequest {
    return new ListConnectedAccountsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListConnectedAccountsRequest {
    return new ListConnectedAccountsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListConnectedAccountsRequest | PlainMessage<ListConnectedAccountsRequest> | undefined, b: ListConnectedAccountsRequest | PlainMessage<ListConnectedAccountsRequest> | undefined): boolean {
    return proto3.util.equals(ListConnectedAccountsRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connected_accounts.ListConnectedAccountsResponse
 */
export class ListConnectedAccountsResponse extends Message<ListConnectedAccountsResponse> {
  /**
   * @generated from field: repeated scalekit.v1.connected_accounts.ConnectedAccountForList connected_accounts = 1;
   */
  connectedAccounts: ConnectedAccountForList[] = [];

  /**
   * @generated from field: uint32 total_size = 2;
   */
  totalSize = 0;

  /**
   * @generated from field: string next_page_token = 3;
   */
  nextPageToken = "";

  /**
   * @generated from field: string prev_page_token = 4;
   */
  prevPageToken = "";

  constructor(data?: PartialMessage<ListConnectedAccountsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connected_accounts.ListConnectedAccountsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "connected_accounts", kind: "message", T: ConnectedAccountForList, repeated: true },
    { no: 2, name: "total_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "prev_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListConnectedAccountsResponse {
    return new ListConnectedAccountsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListConnectedAccountsResponse {
    return new ListConnectedAccountsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListConnectedAccountsResponse {
    return new ListConnectedAccountsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListConnectedAccountsResponse | PlainMessage<ListConnectedAccountsResponse> | undefined, b: ListConnectedAccountsResponse | PlainMessage<ListConnectedAccountsResponse> | undefined): boolean {
    return proto3.util.equals(ListConnectedAccountsResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connected_accounts.SearchConnectedAccountsRequest
 */
export class SearchConnectedAccountsRequest extends Message<SearchConnectedAccountsRequest> {
  /**
   * @generated from field: string query = 1;
   */
  query = "";

  /**
   * @generated from field: uint32 page_size = 2;
   */
  pageSize = 0;

  /**
   * @generated from field: string page_token = 3;
   */
  pageToken = "";

  /**
   * @generated from field: string connection_id = 4;
   */
  connectionId = "";

  constructor(data?: PartialMessage<SearchConnectedAccountsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connected_accounts.SearchConnectedAccountsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchConnectedAccountsRequest {
    return new SearchConnectedAccountsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchConnectedAccountsRequest {
    return new SearchConnectedAccountsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchConnectedAccountsRequest {
    return new SearchConnectedAccountsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SearchConnectedAccountsRequest | PlainMessage<SearchConnectedAccountsRequest> | undefined, b: SearchConnectedAccountsRequest | PlainMessage<SearchConnectedAccountsRequest> | undefined): boolean {
    return proto3.util.equals(SearchConnectedAccountsRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connected_accounts.SearchConnectedAccountsResponse
 */
export class SearchConnectedAccountsResponse extends Message<SearchConnectedAccountsResponse> {
  /**
   * @generated from field: repeated scalekit.v1.connected_accounts.ConnectedAccountForList connected_accounts = 1;
   */
  connectedAccounts: ConnectedAccountForList[] = [];

  /**
   * @generated from field: uint32 total_size = 2;
   */
  totalSize = 0;

  /**
   * @generated from field: string next_page_token = 3;
   */
  nextPageToken = "";

  /**
   * @generated from field: string prev_page_token = 4;
   */
  prevPageToken = "";

  constructor(data?: PartialMessage<SearchConnectedAccountsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connected_accounts.SearchConnectedAccountsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "connected_accounts", kind: "message", T: ConnectedAccountForList, repeated: true },
    { no: 2, name: "total_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "prev_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchConnectedAccountsResponse {
    return new SearchConnectedAccountsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchConnectedAccountsResponse {
    return new SearchConnectedAccountsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchConnectedAccountsResponse {
    return new SearchConnectedAccountsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SearchConnectedAccountsResponse | PlainMessage<SearchConnectedAccountsResponse> | undefined, b: SearchConnectedAccountsResponse | PlainMessage<SearchConnectedAccountsResponse> | undefined): boolean {
    return proto3.util.equals(SearchConnectedAccountsResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connected_accounts.CreateConnectedAccountRequest
 */
export class CreateConnectedAccountRequest extends Message<CreateConnectedAccountRequest> {
  /**
   * @generated from field: optional string organization_id = 1;
   */
  organizationId?: string;

  /**
   * @generated from field: optional string user_id = 2;
   */
  userId?: string;

  /**
   * @generated from field: optional string connector = 3;
   */
  connector?: string;

  /**
   * @generated from field: optional string identifier = 4;
   */
  identifier?: string;

  /**
   * @generated from field: scalekit.v1.connected_accounts.CreateConnectedAccount connected_account = 5;
   */
  connectedAccount?: CreateConnectedAccount;

  constructor(data?: PartialMessage<CreateConnectedAccountRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connected_accounts.CreateConnectedAccountRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "connector", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "identifier", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "connected_account", kind: "message", T: CreateConnectedAccount },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateConnectedAccountRequest {
    return new CreateConnectedAccountRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateConnectedAccountRequest {
    return new CreateConnectedAccountRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateConnectedAccountRequest {
    return new CreateConnectedAccountRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateConnectedAccountRequest | PlainMessage<CreateConnectedAccountRequest> | undefined, b: CreateConnectedAccountRequest | PlainMessage<CreateConnectedAccountRequest> | undefined): boolean {
    return proto3.util.equals(CreateConnectedAccountRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connected_accounts.CreateConnectedAccountResponse
 */
export class CreateConnectedAccountResponse extends Message<CreateConnectedAccountResponse> {
  /**
   * @generated from field: scalekit.v1.connected_accounts.ConnectedAccount connected_account = 1;
   */
  connectedAccount?: ConnectedAccount;

  constructor(data?: PartialMessage<CreateConnectedAccountResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connected_accounts.CreateConnectedAccountResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "connected_account", kind: "message", T: ConnectedAccount },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateConnectedAccountResponse {
    return new CreateConnectedAccountResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateConnectedAccountResponse {
    return new CreateConnectedAccountResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateConnectedAccountResponse {
    return new CreateConnectedAccountResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateConnectedAccountResponse | PlainMessage<CreateConnectedAccountResponse> | undefined, b: CreateConnectedAccountResponse | PlainMessage<CreateConnectedAccountResponse> | undefined): boolean {
    return proto3.util.equals(CreateConnectedAccountResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connected_accounts.UpdateConnectedAccountRequest
 */
export class UpdateConnectedAccountRequest extends Message<UpdateConnectedAccountRequest> {
  /**
   * @generated from field: optional string organization_id = 1;
   */
  organizationId?: string;

  /**
   * @generated from field: optional string user_id = 2;
   */
  userId?: string;

  /**
   * @generated from field: optional string connector = 3;
   */
  connector?: string;

  /**
   * @generated from field: optional string identifier = 4;
   */
  identifier?: string;

  /**
   * @generated from field: optional string id = 6;
   */
  id?: string;

  /**
   * @generated from field: scalekit.v1.connected_accounts.UpdateConnectedAccount connected_account = 5;
   */
  connectedAccount?: UpdateConnectedAccount;

  constructor(data?: PartialMessage<UpdateConnectedAccountRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connected_accounts.UpdateConnectedAccountRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "connector", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "identifier", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "connected_account", kind: "message", T: UpdateConnectedAccount },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateConnectedAccountRequest {
    return new UpdateConnectedAccountRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateConnectedAccountRequest {
    return new UpdateConnectedAccountRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateConnectedAccountRequest {
    return new UpdateConnectedAccountRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateConnectedAccountRequest | PlainMessage<UpdateConnectedAccountRequest> | undefined, b: UpdateConnectedAccountRequest | PlainMessage<UpdateConnectedAccountRequest> | undefined): boolean {
    return proto3.util.equals(UpdateConnectedAccountRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connected_accounts.UpdateConnectedAccountResponse
 */
export class UpdateConnectedAccountResponse extends Message<UpdateConnectedAccountResponse> {
  /**
   * @generated from field: scalekit.v1.connected_accounts.ConnectedAccount connected_account = 1;
   */
  connectedAccount?: ConnectedAccount;

  constructor(data?: PartialMessage<UpdateConnectedAccountResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connected_accounts.UpdateConnectedAccountResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "connected_account", kind: "message", T: ConnectedAccount },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateConnectedAccountResponse {
    return new UpdateConnectedAccountResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateConnectedAccountResponse {
    return new UpdateConnectedAccountResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateConnectedAccountResponse {
    return new UpdateConnectedAccountResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateConnectedAccountResponse | PlainMessage<UpdateConnectedAccountResponse> | undefined, b: UpdateConnectedAccountResponse | PlainMessage<UpdateConnectedAccountResponse> | undefined): boolean {
    return proto3.util.equals(UpdateConnectedAccountResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connected_accounts.DeleteConnectedAccountRequest
 */
export class DeleteConnectedAccountRequest extends Message<DeleteConnectedAccountRequest> {
  /**
   * @generated from field: optional string organization_id = 1;
   */
  organizationId?: string;

  /**
   * @generated from field: optional string user_id = 2;
   */
  userId?: string;

  /**
   * @generated from field: optional string connector = 3;
   */
  connector?: string;

  /**
   * @generated from field: optional string identifier = 4;
   */
  identifier?: string;

  /**
   * @generated from field: optional string id = 5;
   */
  id?: string;

  constructor(data?: PartialMessage<DeleteConnectedAccountRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connected_accounts.DeleteConnectedAccountRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "connector", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "identifier", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteConnectedAccountRequest {
    return new DeleteConnectedAccountRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteConnectedAccountRequest {
    return new DeleteConnectedAccountRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteConnectedAccountRequest {
    return new DeleteConnectedAccountRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteConnectedAccountRequest | PlainMessage<DeleteConnectedAccountRequest> | undefined, b: DeleteConnectedAccountRequest | PlainMessage<DeleteConnectedAccountRequest> | undefined): boolean {
    return proto3.util.equals(DeleteConnectedAccountRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connected_accounts.DeleteConnectedAccountResponse
 */
export class DeleteConnectedAccountResponse extends Message<DeleteConnectedAccountResponse> {
  constructor(data?: PartialMessage<DeleteConnectedAccountResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connected_accounts.DeleteConnectedAccountResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteConnectedAccountResponse {
    return new DeleteConnectedAccountResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteConnectedAccountResponse {
    return new DeleteConnectedAccountResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteConnectedAccountResponse {
    return new DeleteConnectedAccountResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteConnectedAccountResponse | PlainMessage<DeleteConnectedAccountResponse> | undefined, b: DeleteConnectedAccountResponse | PlainMessage<DeleteConnectedAccountResponse> | undefined): boolean {
    return proto3.util.equals(DeleteConnectedAccountResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connected_accounts.GetMagicLinkForConnectedAccountRequest
 */
export class GetMagicLinkForConnectedAccountRequest extends Message<GetMagicLinkForConnectedAccountRequest> {
  /**
   * @generated from field: optional string organization_id = 1;
   */
  organizationId?: string;

  /**
   * @generated from field: optional string user_id = 2;
   */
  userId?: string;

  /**
   * @generated from field: optional string connector = 3;
   */
  connector?: string;

  /**
   * @generated from field: optional string identifier = 4;
   */
  identifier?: string;

  /**
   * @generated from field: optional string id = 5;
   */
  id?: string;

  constructor(data?: PartialMessage<GetMagicLinkForConnectedAccountRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connected_accounts.GetMagicLinkForConnectedAccountRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "connector", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "identifier", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMagicLinkForConnectedAccountRequest {
    return new GetMagicLinkForConnectedAccountRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMagicLinkForConnectedAccountRequest {
    return new GetMagicLinkForConnectedAccountRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMagicLinkForConnectedAccountRequest {
    return new GetMagicLinkForConnectedAccountRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetMagicLinkForConnectedAccountRequest | PlainMessage<GetMagicLinkForConnectedAccountRequest> | undefined, b: GetMagicLinkForConnectedAccountRequest | PlainMessage<GetMagicLinkForConnectedAccountRequest> | undefined): boolean {
    return proto3.util.equals(GetMagicLinkForConnectedAccountRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connected_accounts.GetMagicLinkForConnectedAccountRedirectRequest
 */
export class GetMagicLinkForConnectedAccountRedirectRequest extends Message<GetMagicLinkForConnectedAccountRedirectRequest> {
  /**
   * @generated from field: string redirect_to = 1;
   */
  redirectTo = "";

  constructor(data?: PartialMessage<GetMagicLinkForConnectedAccountRedirectRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connected_accounts.GetMagicLinkForConnectedAccountRedirectRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "redirect_to", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMagicLinkForConnectedAccountRedirectRequest {
    return new GetMagicLinkForConnectedAccountRedirectRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMagicLinkForConnectedAccountRedirectRequest {
    return new GetMagicLinkForConnectedAccountRedirectRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMagicLinkForConnectedAccountRedirectRequest {
    return new GetMagicLinkForConnectedAccountRedirectRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetMagicLinkForConnectedAccountRedirectRequest | PlainMessage<GetMagicLinkForConnectedAccountRedirectRequest> | undefined, b: GetMagicLinkForConnectedAccountRedirectRequest | PlainMessage<GetMagicLinkForConnectedAccountRedirectRequest> | undefined): boolean {
    return proto3.util.equals(GetMagicLinkForConnectedAccountRedirectRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connected_accounts.GetMagicLinkForConnectedAccountResponse
 */
export class GetMagicLinkForConnectedAccountResponse extends Message<GetMagicLinkForConnectedAccountResponse> {
  /**
   * @generated from field: string link = 1;
   */
  link = "";

  /**
   * @generated from field: google.protobuf.Timestamp expiry = 2;
   */
  expiry?: Timestamp;

  constructor(data?: PartialMessage<GetMagicLinkForConnectedAccountResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connected_accounts.GetMagicLinkForConnectedAccountResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "link", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "expiry", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMagicLinkForConnectedAccountResponse {
    return new GetMagicLinkForConnectedAccountResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMagicLinkForConnectedAccountResponse {
    return new GetMagicLinkForConnectedAccountResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMagicLinkForConnectedAccountResponse {
    return new GetMagicLinkForConnectedAccountResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetMagicLinkForConnectedAccountResponse | PlainMessage<GetMagicLinkForConnectedAccountResponse> | undefined, b: GetMagicLinkForConnectedAccountResponse | PlainMessage<GetMagicLinkForConnectedAccountResponse> | undefined): boolean {
    return proto3.util.equals(GetMagicLinkForConnectedAccountResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connected_accounts.GetMagicLinkForConnectedAccountRedirectResponse
 */
export class GetMagicLinkForConnectedAccountRedirectResponse extends Message<GetMagicLinkForConnectedAccountRedirectResponse> {
  /**
   * @generated from field: string redirect_to = 1;
   */
  redirectTo = "";

  /**
   * @generated from field: google.protobuf.Timestamp expiry = 2;
   */
  expiry?: Timestamp;

  constructor(data?: PartialMessage<GetMagicLinkForConnectedAccountRedirectResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connected_accounts.GetMagicLinkForConnectedAccountRedirectResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "redirect_to", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "expiry", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMagicLinkForConnectedAccountRedirectResponse {
    return new GetMagicLinkForConnectedAccountRedirectResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMagicLinkForConnectedAccountRedirectResponse {
    return new GetMagicLinkForConnectedAccountRedirectResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMagicLinkForConnectedAccountRedirectResponse {
    return new GetMagicLinkForConnectedAccountRedirectResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetMagicLinkForConnectedAccountRedirectResponse | PlainMessage<GetMagicLinkForConnectedAccountRedirectResponse> | undefined, b: GetMagicLinkForConnectedAccountRedirectResponse | PlainMessage<GetMagicLinkForConnectedAccountRedirectResponse> | undefined): boolean {
    return proto3.util.equals(GetMagicLinkForConnectedAccountRedirectResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connected_accounts.GetConnectedAccountByIdentifierRequest
 */
export class GetConnectedAccountByIdentifierRequest extends Message<GetConnectedAccountByIdentifierRequest> {
  /**
   * @generated from field: optional string organization_id = 1;
   */
  organizationId?: string;

  /**
   * @generated from field: optional string user_id = 2;
   */
  userId?: string;

  /**
   * @generated from field: optional string connector = 3;
   */
  connector?: string;

  /**
   * @generated from field: optional string identifier = 4;
   */
  identifier?: string;

  /**
   * @generated from field: optional string id = 5;
   */
  id?: string;

  constructor(data?: PartialMessage<GetConnectedAccountByIdentifierRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connected_accounts.GetConnectedAccountByIdentifierRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "connector", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "identifier", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConnectedAccountByIdentifierRequest {
    return new GetConnectedAccountByIdentifierRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConnectedAccountByIdentifierRequest {
    return new GetConnectedAccountByIdentifierRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConnectedAccountByIdentifierRequest {
    return new GetConnectedAccountByIdentifierRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetConnectedAccountByIdentifierRequest | PlainMessage<GetConnectedAccountByIdentifierRequest> | undefined, b: GetConnectedAccountByIdentifierRequest | PlainMessage<GetConnectedAccountByIdentifierRequest> | undefined): boolean {
    return proto3.util.equals(GetConnectedAccountByIdentifierRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connected_accounts.GetConnectedAccountByIdentifierResponse
 */
export class GetConnectedAccountByIdentifierResponse extends Message<GetConnectedAccountByIdentifierResponse> {
  /**
   * @generated from field: scalekit.v1.connected_accounts.ConnectedAccount connected_account = 1;
   */
  connectedAccount?: ConnectedAccount;

  constructor(data?: PartialMessage<GetConnectedAccountByIdentifierResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connected_accounts.GetConnectedAccountByIdentifierResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "connected_account", kind: "message", T: ConnectedAccount },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConnectedAccountByIdentifierResponse {
    return new GetConnectedAccountByIdentifierResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConnectedAccountByIdentifierResponse {
    return new GetConnectedAccountByIdentifierResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConnectedAccountByIdentifierResponse {
    return new GetConnectedAccountByIdentifierResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetConnectedAccountByIdentifierResponse | PlainMessage<GetConnectedAccountByIdentifierResponse> | undefined, b: GetConnectedAccountByIdentifierResponse | PlainMessage<GetConnectedAccountByIdentifierResponse> | undefined): boolean {
    return proto3.util.equals(GetConnectedAccountByIdentifierResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connected_accounts.ConnectedAccount
 */
export class ConnectedAccount extends Message<ConnectedAccount> {
  /**
   * @generated from field: string identifier = 1;
   */
  identifier = "";

  /**
   * @generated from field: string provider = 2;
   */
  provider = "";

  /**
   * @generated from field: scalekit.v1.connected_accounts.ConnectorStatus status = 3;
   */
  status = ConnectorStatus.CONNECTION_STATUS_UNSPECIFIED;

  /**
   * @generated from field: scalekit.v1.connected_accounts.ConnectorType authorization_type = 4;
   */
  authorizationType = ConnectorType.CONNECTION_TYPE_UNSPECIFIED;

  /**
   * @generated from field: scalekit.v1.connected_accounts.AuthorizationDetails authorization_details = 5;
   */
  authorizationDetails?: AuthorizationDetails;

  /**
   * @generated from field: google.protobuf.Timestamp token_expires_at = 6;
   */
  tokenExpiresAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 7;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: string connector = 8;
   */
  connector = "";

  /**
   * @generated from field: google.protobuf.Timestamp last_used_at = 9;
   */
  lastUsedAt?: Timestamp;

  /**
   * @generated from field: string id = 10;
   */
  id = "";

  /**
   * @generated from field: string connection_id = 11;
   */
  connectionId = "";

  /**
   * @generated from field: google.protobuf.Struct api_config = 12;
   */
  apiConfig?: Struct;

  constructor(data?: PartialMessage<ConnectedAccount>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connected_accounts.ConnectedAccount";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "identifier", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "provider", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "status", kind: "enum", T: proto3.getEnumType(ConnectorStatus) },
    { no: 4, name: "authorization_type", kind: "enum", T: proto3.getEnumType(ConnectorType) },
    { no: 5, name: "authorization_details", kind: "message", T: AuthorizationDetails },
    { no: 6, name: "token_expires_at", kind: "message", T: Timestamp },
    { no: 7, name: "updated_at", kind: "message", T: Timestamp },
    { no: 8, name: "connector", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "last_used_at", kind: "message", T: Timestamp },
    { no: 10, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "api_config", kind: "message", T: Struct },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConnectedAccount {
    return new ConnectedAccount().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConnectedAccount {
    return new ConnectedAccount().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConnectedAccount {
    return new ConnectedAccount().fromJsonString(jsonString, options);
  }

  static equals(a: ConnectedAccount | PlainMessage<ConnectedAccount> | undefined, b: ConnectedAccount | PlainMessage<ConnectedAccount> | undefined): boolean {
    return proto3.util.equals(ConnectedAccount, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connected_accounts.CreateConnectedAccount
 */
export class CreateConnectedAccount extends Message<CreateConnectedAccount> {
  /**
   * @generated from field: scalekit.v1.connected_accounts.AuthorizationDetails authorization_details = 5;
   */
  authorizationDetails?: AuthorizationDetails;

  /**
   * @generated from field: google.protobuf.Struct api_config = 11;
   */
  apiConfig?: Struct;

  constructor(data?: PartialMessage<CreateConnectedAccount>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connected_accounts.CreateConnectedAccount";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 5, name: "authorization_details", kind: "message", T: AuthorizationDetails },
    { no: 11, name: "api_config", kind: "message", T: Struct },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateConnectedAccount {
    return new CreateConnectedAccount().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateConnectedAccount {
    return new CreateConnectedAccount().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateConnectedAccount {
    return new CreateConnectedAccount().fromJsonString(jsonString, options);
  }

  static equals(a: CreateConnectedAccount | PlainMessage<CreateConnectedAccount> | undefined, b: CreateConnectedAccount | PlainMessage<CreateConnectedAccount> | undefined): boolean {
    return proto3.util.equals(CreateConnectedAccount, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connected_accounts.UpdateConnectedAccount
 */
export class UpdateConnectedAccount extends Message<UpdateConnectedAccount> {
  /**
   * @generated from field: scalekit.v1.connected_accounts.AuthorizationDetails authorization_details = 5;
   */
  authorizationDetails?: AuthorizationDetails;

  /**
   * @generated from field: google.protobuf.Struct api_config = 10;
   */
  apiConfig?: Struct;

  constructor(data?: PartialMessage<UpdateConnectedAccount>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connected_accounts.UpdateConnectedAccount";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 5, name: "authorization_details", kind: "message", T: AuthorizationDetails },
    { no: 10, name: "api_config", kind: "message", T: Struct },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateConnectedAccount {
    return new UpdateConnectedAccount().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateConnectedAccount {
    return new UpdateConnectedAccount().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateConnectedAccount {
    return new UpdateConnectedAccount().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateConnectedAccount | PlainMessage<UpdateConnectedAccount> | undefined, b: UpdateConnectedAccount | PlainMessage<UpdateConnectedAccount> | undefined): boolean {
    return proto3.util.equals(UpdateConnectedAccount, a, b);
  }
}

/**
 * dont send auth for list calls
 *
 * @generated from message scalekit.v1.connected_accounts.ConnectedAccountForList
 */
export class ConnectedAccountForList extends Message<ConnectedAccountForList> {
  /**
   * @generated from field: string identifier = 1;
   */
  identifier = "";

  /**
   * @generated from field: string provider = 2;
   */
  provider = "";

  /**
   * @generated from field: scalekit.v1.connected_accounts.ConnectorStatus status = 3;
   */
  status = ConnectorStatus.CONNECTION_STATUS_UNSPECIFIED;

  /**
   * @generated from field: scalekit.v1.connected_accounts.ConnectorType authorization_type = 4;
   */
  authorizationType = ConnectorType.CONNECTION_TYPE_UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.Timestamp token_expires_at = 6;
   */
  tokenExpiresAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 7;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: string connector = 8;
   */
  connector = "";

  /**
   * @generated from field: google.protobuf.Timestamp last_used_at = 9;
   */
  lastUsedAt?: Timestamp;

  /**
   * @generated from field: string id = 10;
   */
  id = "";

  /**
   * @generated from field: string connection_id = 11;
   */
  connectionId = "";

  constructor(data?: PartialMessage<ConnectedAccountForList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connected_accounts.ConnectedAccountForList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "identifier", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "provider", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "status", kind: "enum", T: proto3.getEnumType(ConnectorStatus) },
    { no: 4, name: "authorization_type", kind: "enum", T: proto3.getEnumType(ConnectorType) },
    { no: 6, name: "token_expires_at", kind: "message", T: Timestamp },
    { no: 7, name: "updated_at", kind: "message", T: Timestamp },
    { no: 8, name: "connector", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "last_used_at", kind: "message", T: Timestamp },
    { no: 10, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConnectedAccountForList {
    return new ConnectedAccountForList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConnectedAccountForList {
    return new ConnectedAccountForList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConnectedAccountForList {
    return new ConnectedAccountForList().fromJsonString(jsonString, options);
  }

  static equals(a: ConnectedAccountForList | PlainMessage<ConnectedAccountForList> | undefined, b: ConnectedAccountForList | PlainMessage<ConnectedAccountForList> | undefined): boolean {
    return proto3.util.equals(ConnectedAccountForList, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connected_accounts.AuthorizationDetails
 */
export class AuthorizationDetails extends Message<AuthorizationDetails> {
  /**
   * @generated from oneof scalekit.v1.connected_accounts.AuthorizationDetails.details
   */
  details: {
    /**
     * @generated from field: scalekit.v1.connected_accounts.OauthToken oauth_token = 1;
     */
    value: OauthToken;
    case: "oauthToken";
  } | {
    /**
     * @generated from field: scalekit.v1.connected_accounts.StaticAuth static_auth = 2;
     */
    value: StaticAuth;
    case: "staticAuth";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<AuthorizationDetails>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connected_accounts.AuthorizationDetails";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "oauth_token", kind: "message", T: OauthToken, oneof: "details" },
    { no: 2, name: "static_auth", kind: "message", T: StaticAuth, oneof: "details" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthorizationDetails {
    return new AuthorizationDetails().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthorizationDetails {
    return new AuthorizationDetails().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthorizationDetails {
    return new AuthorizationDetails().fromJsonString(jsonString, options);
  }

  static equals(a: AuthorizationDetails | PlainMessage<AuthorizationDetails> | undefined, b: AuthorizationDetails | PlainMessage<AuthorizationDetails> | undefined): boolean {
    return proto3.util.equals(AuthorizationDetails, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connected_accounts.OauthToken
 */
export class OauthToken extends Message<OauthToken> {
  /**
   * @generated from field: string access_token = 1;
   */
  accessToken = "";

  /**
   * @generated from field: string refresh_token = 2;
   */
  refreshToken = "";

  /**
   * @generated from field: repeated string scopes = 3;
   */
  scopes: string[] = [];

  /**
   * @generated from field: string domain = 4;
   */
  domain = "";

  constructor(data?: PartialMessage<OauthToken>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connected_accounts.OauthToken";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "access_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "refresh_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "domain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OauthToken {
    return new OauthToken().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OauthToken {
    return new OauthToken().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OauthToken {
    return new OauthToken().fromJsonString(jsonString, options);
  }

  static equals(a: OauthToken | PlainMessage<OauthToken> | undefined, b: OauthToken | PlainMessage<OauthToken> | undefined): boolean {
    return proto3.util.equals(OauthToken, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connected_accounts.StaticAuth
 */
export class StaticAuth extends Message<StaticAuth> {
  /**
   * @generated from field: google.protobuf.Struct details = 1;
   */
  details?: Struct;

  constructor(data?: PartialMessage<StaticAuth>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connected_accounts.StaticAuth";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Struct },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StaticAuth {
    return new StaticAuth().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StaticAuth {
    return new StaticAuth().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StaticAuth {
    return new StaticAuth().fromJsonString(jsonString, options);
  }

  static equals(a: StaticAuth | PlainMessage<StaticAuth> | undefined, b: StaticAuth | PlainMessage<StaticAuth> | undefined): boolean {
    return proto3.util.equals(StaticAuth, a, b);
  }
}

