// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file scalekit/v1/roles/roles.proto (package scalekit.v1.roles, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from message scalekit.v1.roles.Role
 */
export class Role extends Message<Role> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string display_name = 3;
   */
  displayName = "";

  /**
   * @generated from field: string description = 4;
   */
  description = "";

  /**
   * @generated from field: bool default_creator = 6;
   */
  defaultCreator = false;

  /**
   * @generated from field: bool default_member = 7;
   */
  defaultMember = false;

  /**
   * @generated from field: optional string extends = 8;
   */
  extends?: string;

  /**
   * @generated from field: repeated scalekit.v1.roles.RolePermission permissions = 9;
   */
  permissions: RolePermission[] = [];

  /**
   * @generated from field: int32 dependent_roles_count = 10;
   */
  dependentRolesCount = 0;

  /**
   * @generated from field: bool is_org_role = 11;
   */
  isOrgRole = false;

  constructor(data?: PartialMessage<Role>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.Role";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "default_creator", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "default_member", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "extends", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 9, name: "permissions", kind: "message", T: RolePermission, repeated: true },
    { no: 10, name: "dependent_roles_count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "is_org_role", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Role {
    return new Role().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Role {
    return new Role().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Role {
    return new Role().fromJsonString(jsonString, options);
  }

  static equals(a: Role | PlainMessage<Role> | undefined, b: Role | PlainMessage<Role> | undefined): boolean {
    return proto3.util.equals(Role, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.CreateRole
 */
export class CreateRole extends Message<CreateRole> {
  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string display_name = 3;
   */
  displayName = "";

  /**
   * @generated from field: optional string description = 4;
   */
  description?: string;

  /**
   * @generated from field: optional string extends = 8;
   */
  extends?: string;

  /**
   * @generated from field: repeated string permissions = 9;
   */
  permissions: string[] = [];

  constructor(data?: PartialMessage<CreateRole>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.CreateRole";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "extends", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 9, name: "permissions", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateRole {
    return new CreateRole().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateRole {
    return new CreateRole().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateRole {
    return new CreateRole().fromJsonString(jsonString, options);
  }

  static equals(a: CreateRole | PlainMessage<CreateRole> | undefined, b: CreateRole | PlainMessage<CreateRole> | undefined): boolean {
    return proto3.util.equals(CreateRole, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.CreateOrganizationRole
 */
export class CreateOrganizationRole extends Message<CreateOrganizationRole> {
  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string display_name = 3;
   */
  displayName = "";

  /**
   * @generated from field: optional string description = 4;
   */
  description?: string;

  /**
   * @generated from field: optional string extends = 8;
   */
  extends?: string;

  /**
   * @generated from field: repeated string permissions = 9;
   */
  permissions: string[] = [];

  constructor(data?: PartialMessage<CreateOrganizationRole>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.CreateOrganizationRole";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "extends", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 9, name: "permissions", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOrganizationRole {
    return new CreateOrganizationRole().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOrganizationRole {
    return new CreateOrganizationRole().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOrganizationRole {
    return new CreateOrganizationRole().fromJsonString(jsonString, options);
  }

  static equals(a: CreateOrganizationRole | PlainMessage<CreateOrganizationRole> | undefined, b: CreateOrganizationRole | PlainMessage<CreateOrganizationRole> | undefined): boolean {
    return proto3.util.equals(CreateOrganizationRole, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.CreateRoleRequest
 */
export class CreateRoleRequest extends Message<CreateRoleRequest> {
  /**
   * @generated from field: scalekit.v1.roles.CreateRole role = 2;
   */
  role?: CreateRole;

  constructor(data?: PartialMessage<CreateRoleRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.CreateRoleRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "role", kind: "message", T: CreateRole },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateRoleRequest {
    return new CreateRoleRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateRoleRequest {
    return new CreateRoleRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateRoleRequest {
    return new CreateRoleRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateRoleRequest | PlainMessage<CreateRoleRequest> | undefined, b: CreateRoleRequest | PlainMessage<CreateRoleRequest> | undefined): boolean {
    return proto3.util.equals(CreateRoleRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.CreateRoleResponse
 */
export class CreateRoleResponse extends Message<CreateRoleResponse> {
  /**
   * @generated from field: scalekit.v1.roles.Role role = 1;
   */
  role?: Role;

  constructor(data?: PartialMessage<CreateRoleResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.CreateRoleResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "role", kind: "message", T: Role },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateRoleResponse {
    return new CreateRoleResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateRoleResponse {
    return new CreateRoleResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateRoleResponse {
    return new CreateRoleResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateRoleResponse | PlainMessage<CreateRoleResponse> | undefined, b: CreateRoleResponse | PlainMessage<CreateRoleResponse> | undefined): boolean {
    return proto3.util.equals(CreateRoleResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.GetRoleRequest
 */
export class GetRoleRequest extends Message<GetRoleRequest> {
  /**
   * @generated from field: string role_name = 2;
   */
  roleName = "";

  /**
   * @generated from field: optional string include = 3;
   */
  include?: string;

  constructor(data?: PartialMessage<GetRoleRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.GetRoleRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "role_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "include", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRoleRequest {
    return new GetRoleRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRoleRequest {
    return new GetRoleRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRoleRequest {
    return new GetRoleRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetRoleRequest | PlainMessage<GetRoleRequest> | undefined, b: GetRoleRequest | PlainMessage<GetRoleRequest> | undefined): boolean {
    return proto3.util.equals(GetRoleRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.GetRoleResponse
 */
export class GetRoleResponse extends Message<GetRoleResponse> {
  /**
   * @generated from field: scalekit.v1.roles.Role role = 1;
   */
  role?: Role;

  constructor(data?: PartialMessage<GetRoleResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.GetRoleResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "role", kind: "message", T: Role },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRoleResponse {
    return new GetRoleResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRoleResponse {
    return new GetRoleResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRoleResponse {
    return new GetRoleResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetRoleResponse | PlainMessage<GetRoleResponse> | undefined, b: GetRoleResponse | PlainMessage<GetRoleResponse> | undefined): boolean {
    return proto3.util.equals(GetRoleResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.ListRolesRequest
 */
export class ListRolesRequest extends Message<ListRolesRequest> {
  /**
   * @generated from field: optional string include = 2;
   */
  include?: string;

  constructor(data?: PartialMessage<ListRolesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.ListRolesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "include", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRolesRequest {
    return new ListRolesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRolesRequest {
    return new ListRolesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRolesRequest {
    return new ListRolesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListRolesRequest | PlainMessage<ListRolesRequest> | undefined, b: ListRolesRequest | PlainMessage<ListRolesRequest> | undefined): boolean {
    return proto3.util.equals(ListRolesRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.ListRolesResponse
 */
export class ListRolesResponse extends Message<ListRolesResponse> {
  /**
   * @generated from field: repeated scalekit.v1.roles.Role roles = 1;
   */
  roles: Role[] = [];

  constructor(data?: PartialMessage<ListRolesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.ListRolesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "roles", kind: "message", T: Role, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRolesResponse {
    return new ListRolesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRolesResponse {
    return new ListRolesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRolesResponse {
    return new ListRolesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListRolesResponse | PlainMessage<ListRolesResponse> | undefined, b: ListRolesResponse | PlainMessage<ListRolesResponse> | undefined): boolean {
    return proto3.util.equals(ListRolesResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.UpdateRole
 */
export class UpdateRole extends Message<UpdateRole> {
  /**
   * @generated from field: optional string display_name = 1;
   */
  displayName?: string;

  /**
   * @generated from field: optional string description = 2;
   */
  description?: string;

  /**
   * @generated from field: optional string extends = 6;
   */
  extends?: string;

  /**
   * @generated from field: repeated string permissions = 7;
   */
  permissions: string[] = [];

  constructor(data?: PartialMessage<UpdateRole>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.UpdateRole";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "extends", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "permissions", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRole {
    return new UpdateRole().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRole {
    return new UpdateRole().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRole {
    return new UpdateRole().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateRole | PlainMessage<UpdateRole> | undefined, b: UpdateRole | PlainMessage<UpdateRole> | undefined): boolean {
    return proto3.util.equals(UpdateRole, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.UpdateRoleRequest
 */
export class UpdateRoleRequest extends Message<UpdateRoleRequest> {
  /**
   * @generated from field: string role_name = 2;
   */
  roleName = "";

  /**
   * @generated from field: scalekit.v1.roles.UpdateRole role = 3;
   */
  role?: UpdateRole;

  constructor(data?: PartialMessage<UpdateRoleRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.UpdateRoleRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "role_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "role", kind: "message", T: UpdateRole },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRoleRequest {
    return new UpdateRoleRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRoleRequest {
    return new UpdateRoleRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRoleRequest {
    return new UpdateRoleRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateRoleRequest | PlainMessage<UpdateRoleRequest> | undefined, b: UpdateRoleRequest | PlainMessage<UpdateRoleRequest> | undefined): boolean {
    return proto3.util.equals(UpdateRoleRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.UpdateRoleResponse
 */
export class UpdateRoleResponse extends Message<UpdateRoleResponse> {
  /**
   * @generated from field: scalekit.v1.roles.Role role = 1;
   */
  role?: Role;

  constructor(data?: PartialMessage<UpdateRoleResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.UpdateRoleResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "role", kind: "message", T: Role },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateRoleResponse {
    return new UpdateRoleResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateRoleResponse {
    return new UpdateRoleResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateRoleResponse {
    return new UpdateRoleResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateRoleResponse | PlainMessage<UpdateRoleResponse> | undefined, b: UpdateRoleResponse | PlainMessage<UpdateRoleResponse> | undefined): boolean {
    return proto3.util.equals(UpdateRoleResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.DeleteRoleRequest
 */
export class DeleteRoleRequest extends Message<DeleteRoleRequest> {
  /**
   * @generated from field: string role_name = 2;
   */
  roleName = "";

  /**
   * @generated from field: optional string reassign_role_id = 3 [deprecated = true];
   * @deprecated
   */
  reassignRoleId?: string;

  /**
   * @generated from field: optional string reassign_role_name = 4;
   */
  reassignRoleName?: string;

  constructor(data?: PartialMessage<DeleteRoleRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.DeleteRoleRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "role_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "reassign_role_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "reassign_role_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteRoleRequest {
    return new DeleteRoleRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteRoleRequest {
    return new DeleteRoleRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteRoleRequest {
    return new DeleteRoleRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteRoleRequest | PlainMessage<DeleteRoleRequest> | undefined, b: DeleteRoleRequest | PlainMessage<DeleteRoleRequest> | undefined): boolean {
    return proto3.util.equals(DeleteRoleRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.CreateOrganizationRoleRequest
 */
export class CreateOrganizationRoleRequest extends Message<CreateOrganizationRoleRequest> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  /**
   * @generated from field: scalekit.v1.roles.CreateOrganizationRole role = 2;
   */
  role?: CreateOrganizationRole;

  constructor(data?: PartialMessage<CreateOrganizationRoleRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.CreateOrganizationRoleRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "role", kind: "message", T: CreateOrganizationRole },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOrganizationRoleRequest {
    return new CreateOrganizationRoleRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOrganizationRoleRequest {
    return new CreateOrganizationRoleRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOrganizationRoleRequest {
    return new CreateOrganizationRoleRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateOrganizationRoleRequest | PlainMessage<CreateOrganizationRoleRequest> | undefined, b: CreateOrganizationRoleRequest | PlainMessage<CreateOrganizationRoleRequest> | undefined): boolean {
    return proto3.util.equals(CreateOrganizationRoleRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.CreateOrganizationRoleResponse
 */
export class CreateOrganizationRoleResponse extends Message<CreateOrganizationRoleResponse> {
  /**
   * @generated from field: scalekit.v1.roles.Role role = 1;
   */
  role?: Role;

  constructor(data?: PartialMessage<CreateOrganizationRoleResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.CreateOrganizationRoleResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "role", kind: "message", T: Role },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOrganizationRoleResponse {
    return new CreateOrganizationRoleResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOrganizationRoleResponse {
    return new CreateOrganizationRoleResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOrganizationRoleResponse {
    return new CreateOrganizationRoleResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateOrganizationRoleResponse | PlainMessage<CreateOrganizationRoleResponse> | undefined, b: CreateOrganizationRoleResponse | PlainMessage<CreateOrganizationRoleResponse> | undefined): boolean {
    return proto3.util.equals(CreateOrganizationRoleResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.GetOrganizationRoleRequest
 */
export class GetOrganizationRoleRequest extends Message<GetOrganizationRoleRequest> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  /**
   * @generated from field: string role_name = 2;
   */
  roleName = "";

  /**
   * @generated from field: optional string include = 3;
   */
  include?: string;

  constructor(data?: PartialMessage<GetOrganizationRoleRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.GetOrganizationRoleRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "role_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "include", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrganizationRoleRequest {
    return new GetOrganizationRoleRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrganizationRoleRequest {
    return new GetOrganizationRoleRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrganizationRoleRequest {
    return new GetOrganizationRoleRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrganizationRoleRequest | PlainMessage<GetOrganizationRoleRequest> | undefined, b: GetOrganizationRoleRequest | PlainMessage<GetOrganizationRoleRequest> | undefined): boolean {
    return proto3.util.equals(GetOrganizationRoleRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.GetOrganizationRoleResponse
 */
export class GetOrganizationRoleResponse extends Message<GetOrganizationRoleResponse> {
  /**
   * @generated from field: scalekit.v1.roles.Role role = 1;
   */
  role?: Role;

  constructor(data?: PartialMessage<GetOrganizationRoleResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.GetOrganizationRoleResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "role", kind: "message", T: Role },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrganizationRoleResponse {
    return new GetOrganizationRoleResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrganizationRoleResponse {
    return new GetOrganizationRoleResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrganizationRoleResponse {
    return new GetOrganizationRoleResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrganizationRoleResponse | PlainMessage<GetOrganizationRoleResponse> | undefined, b: GetOrganizationRoleResponse | PlainMessage<GetOrganizationRoleResponse> | undefined): boolean {
    return proto3.util.equals(GetOrganizationRoleResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.ListOrganizationRolesRequest
 */
export class ListOrganizationRolesRequest extends Message<ListOrganizationRolesRequest> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  /**
   * @generated from field: optional string include = 2;
   */
  include?: string;

  constructor(data?: PartialMessage<ListOrganizationRolesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.ListOrganizationRolesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "include", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrganizationRolesRequest {
    return new ListOrganizationRolesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrganizationRolesRequest {
    return new ListOrganizationRolesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrganizationRolesRequest {
    return new ListOrganizationRolesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrganizationRolesRequest | PlainMessage<ListOrganizationRolesRequest> | undefined, b: ListOrganizationRolesRequest | PlainMessage<ListOrganizationRolesRequest> | undefined): boolean {
    return proto3.util.equals(ListOrganizationRolesRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.ListOrganizationRolesResponse
 */
export class ListOrganizationRolesResponse extends Message<ListOrganizationRolesResponse> {
  /**
   * @generated from field: repeated scalekit.v1.roles.Role roles = 1;
   */
  roles: Role[] = [];

  constructor(data?: PartialMessage<ListOrganizationRolesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.ListOrganizationRolesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "roles", kind: "message", T: Role, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrganizationRolesResponse {
    return new ListOrganizationRolesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrganizationRolesResponse {
    return new ListOrganizationRolesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrganizationRolesResponse {
    return new ListOrganizationRolesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrganizationRolesResponse | PlainMessage<ListOrganizationRolesResponse> | undefined, b: ListOrganizationRolesResponse | PlainMessage<ListOrganizationRolesResponse> | undefined): boolean {
    return proto3.util.equals(ListOrganizationRolesResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.UpdateOrganizationRoleRequest
 */
export class UpdateOrganizationRoleRequest extends Message<UpdateOrganizationRoleRequest> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  /**
   * @generated from field: string role_name = 2;
   */
  roleName = "";

  /**
   * @generated from field: scalekit.v1.roles.UpdateRole role = 3;
   */
  role?: UpdateRole;

  constructor(data?: PartialMessage<UpdateOrganizationRoleRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.UpdateOrganizationRoleRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "role_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "role", kind: "message", T: UpdateRole },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrganizationRoleRequest {
    return new UpdateOrganizationRoleRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrganizationRoleRequest {
    return new UpdateOrganizationRoleRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrganizationRoleRequest {
    return new UpdateOrganizationRoleRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrganizationRoleRequest | PlainMessage<UpdateOrganizationRoleRequest> | undefined, b: UpdateOrganizationRoleRequest | PlainMessage<UpdateOrganizationRoleRequest> | undefined): boolean {
    return proto3.util.equals(UpdateOrganizationRoleRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.UpdateOrganizationRoleResponse
 */
export class UpdateOrganizationRoleResponse extends Message<UpdateOrganizationRoleResponse> {
  /**
   * @generated from field: scalekit.v1.roles.Role role = 1;
   */
  role?: Role;

  constructor(data?: PartialMessage<UpdateOrganizationRoleResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.UpdateOrganizationRoleResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "role", kind: "message", T: Role },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrganizationRoleResponse {
    return new UpdateOrganizationRoleResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrganizationRoleResponse {
    return new UpdateOrganizationRoleResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrganizationRoleResponse {
    return new UpdateOrganizationRoleResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrganizationRoleResponse | PlainMessage<UpdateOrganizationRoleResponse> | undefined, b: UpdateOrganizationRoleResponse | PlainMessage<UpdateOrganizationRoleResponse> | undefined): boolean {
    return proto3.util.equals(UpdateOrganizationRoleResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.DeleteOrganizationRoleRequest
 */
export class DeleteOrganizationRoleRequest extends Message<DeleteOrganizationRoleRequest> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  /**
   * @generated from field: string role_name = 2;
   */
  roleName = "";

  /**
   * @generated from field: optional string reassign_role_name = 3;
   */
  reassignRoleName?: string;

  constructor(data?: PartialMessage<DeleteOrganizationRoleRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.DeleteOrganizationRoleRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "role_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "reassign_role_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteOrganizationRoleRequest {
    return new DeleteOrganizationRoleRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteOrganizationRoleRequest {
    return new DeleteOrganizationRoleRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteOrganizationRoleRequest {
    return new DeleteOrganizationRoleRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteOrganizationRoleRequest | PlainMessage<DeleteOrganizationRoleRequest> | undefined, b: DeleteOrganizationRoleRequest | PlainMessage<DeleteOrganizationRoleRequest> | undefined): boolean {
    return proto3.util.equals(DeleteOrganizationRoleRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.GetRoleUsersCountRequest
 */
export class GetRoleUsersCountRequest extends Message<GetRoleUsersCountRequest> {
  /**
   * @generated from field: string role_name = 2;
   */
  roleName = "";

  constructor(data?: PartialMessage<GetRoleUsersCountRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.GetRoleUsersCountRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "role_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRoleUsersCountRequest {
    return new GetRoleUsersCountRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRoleUsersCountRequest {
    return new GetRoleUsersCountRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRoleUsersCountRequest {
    return new GetRoleUsersCountRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetRoleUsersCountRequest | PlainMessage<GetRoleUsersCountRequest> | undefined, b: GetRoleUsersCountRequest | PlainMessage<GetRoleUsersCountRequest> | undefined): boolean {
    return proto3.util.equals(GetRoleUsersCountRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.GetRoleUsersCountResponse
 */
export class GetRoleUsersCountResponse extends Message<GetRoleUsersCountResponse> {
  /**
   * @generated from field: int64 count = 1;
   */
  count = protoInt64.zero;

  constructor(data?: PartialMessage<GetRoleUsersCountResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.GetRoleUsersCountResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetRoleUsersCountResponse {
    return new GetRoleUsersCountResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetRoleUsersCountResponse {
    return new GetRoleUsersCountResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetRoleUsersCountResponse {
    return new GetRoleUsersCountResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetRoleUsersCountResponse | PlainMessage<GetRoleUsersCountResponse> | undefined, b: GetRoleUsersCountResponse | PlainMessage<GetRoleUsersCountResponse> | undefined): boolean {
    return proto3.util.equals(GetRoleUsersCountResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.GetOrganizationRoleUsersCountRequest
 */
export class GetOrganizationRoleUsersCountRequest extends Message<GetOrganizationRoleUsersCountRequest> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  /**
   * @generated from field: string role_name = 2;
   */
  roleName = "";

  constructor(data?: PartialMessage<GetOrganizationRoleUsersCountRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.GetOrganizationRoleUsersCountRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "role_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrganizationRoleUsersCountRequest {
    return new GetOrganizationRoleUsersCountRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrganizationRoleUsersCountRequest {
    return new GetOrganizationRoleUsersCountRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrganizationRoleUsersCountRequest {
    return new GetOrganizationRoleUsersCountRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrganizationRoleUsersCountRequest | PlainMessage<GetOrganizationRoleUsersCountRequest> | undefined, b: GetOrganizationRoleUsersCountRequest | PlainMessage<GetOrganizationRoleUsersCountRequest> | undefined): boolean {
    return proto3.util.equals(GetOrganizationRoleUsersCountRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.GetOrganizationRoleUsersCountResponse
 */
export class GetOrganizationRoleUsersCountResponse extends Message<GetOrganizationRoleUsersCountResponse> {
  /**
   * @generated from field: int64 count = 1;
   */
  count = protoInt64.zero;

  constructor(data?: PartialMessage<GetOrganizationRoleUsersCountResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.GetOrganizationRoleUsersCountResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "count", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrganizationRoleUsersCountResponse {
    return new GetOrganizationRoleUsersCountResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrganizationRoleUsersCountResponse {
    return new GetOrganizationRoleUsersCountResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrganizationRoleUsersCountResponse {
    return new GetOrganizationRoleUsersCountResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrganizationRoleUsersCountResponse | PlainMessage<GetOrganizationRoleUsersCountResponse> | undefined, b: GetOrganizationRoleUsersCountResponse | PlainMessage<GetOrganizationRoleUsersCountResponse> | undefined): boolean {
    return proto3.util.equals(GetOrganizationRoleUsersCountResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.UpdateDefaultRolesRequest
 */
export class UpdateDefaultRolesRequest extends Message<UpdateDefaultRolesRequest> {
  /**
   * @generated from field: scalekit.v1.roles.UpdateDefaultRole default_creator = 2 [deprecated = true];
   * @deprecated
   */
  defaultCreator?: UpdateDefaultRole;

  /**
   * @generated from field: scalekit.v1.roles.UpdateDefaultRole default_member = 3 [deprecated = true];
   * @deprecated
   */
  defaultMember?: UpdateDefaultRole;

  /**
   * @generated from field: optional string default_creator_role = 4;
   */
  defaultCreatorRole?: string;

  /**
   * @generated from field: optional string default_member_role = 5;
   */
  defaultMemberRole?: string;

  constructor(data?: PartialMessage<UpdateDefaultRolesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.UpdateDefaultRolesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "default_creator", kind: "message", T: UpdateDefaultRole },
    { no: 3, name: "default_member", kind: "message", T: UpdateDefaultRole },
    { no: 4, name: "default_creator_role", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "default_member_role", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateDefaultRolesRequest {
    return new UpdateDefaultRolesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateDefaultRolesRequest {
    return new UpdateDefaultRolesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateDefaultRolesRequest {
    return new UpdateDefaultRolesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateDefaultRolesRequest | PlainMessage<UpdateDefaultRolesRequest> | undefined, b: UpdateDefaultRolesRequest | PlainMessage<UpdateDefaultRolesRequest> | undefined): boolean {
    return proto3.util.equals(UpdateDefaultRolesRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.UpdateDefaultOrganizationRolesRequest
 */
export class UpdateDefaultOrganizationRolesRequest extends Message<UpdateDefaultOrganizationRolesRequest> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  /**
   * @generated from field: string default_member_role = 2;
   */
  defaultMemberRole = "";

  constructor(data?: PartialMessage<UpdateDefaultOrganizationRolesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.UpdateDefaultOrganizationRolesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "default_member_role", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateDefaultOrganizationRolesRequest {
    return new UpdateDefaultOrganizationRolesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateDefaultOrganizationRolesRequest {
    return new UpdateDefaultOrganizationRolesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateDefaultOrganizationRolesRequest {
    return new UpdateDefaultOrganizationRolesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateDefaultOrganizationRolesRequest | PlainMessage<UpdateDefaultOrganizationRolesRequest> | undefined, b: UpdateDefaultOrganizationRolesRequest | PlainMessage<UpdateDefaultOrganizationRolesRequest> | undefined): boolean {
    return proto3.util.equals(UpdateDefaultOrganizationRolesRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.UpdateDefaultRolesResponse
 */
export class UpdateDefaultRolesResponse extends Message<UpdateDefaultRolesResponse> {
  /**
   * @generated from field: scalekit.v1.roles.Role default_creator = 1;
   */
  defaultCreator?: Role;

  /**
   * @generated from field: scalekit.v1.roles.Role default_member = 2;
   */
  defaultMember?: Role;

  constructor(data?: PartialMessage<UpdateDefaultRolesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.UpdateDefaultRolesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "default_creator", kind: "message", T: Role },
    { no: 2, name: "default_member", kind: "message", T: Role },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateDefaultRolesResponse {
    return new UpdateDefaultRolesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateDefaultRolesResponse {
    return new UpdateDefaultRolesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateDefaultRolesResponse {
    return new UpdateDefaultRolesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateDefaultRolesResponse | PlainMessage<UpdateDefaultRolesResponse> | undefined, b: UpdateDefaultRolesResponse | PlainMessage<UpdateDefaultRolesResponse> | undefined): boolean {
    return proto3.util.equals(UpdateDefaultRolesResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.UpdateDefaultOrganizationRolesResponse
 */
export class UpdateDefaultOrganizationRolesResponse extends Message<UpdateDefaultOrganizationRolesResponse> {
  /**
   * @generated from field: scalekit.v1.roles.Role default_member = 2;
   */
  defaultMember?: Role;

  constructor(data?: PartialMessage<UpdateDefaultOrganizationRolesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.UpdateDefaultOrganizationRolesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "default_member", kind: "message", T: Role },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateDefaultOrganizationRolesResponse {
    return new UpdateDefaultOrganizationRolesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateDefaultOrganizationRolesResponse {
    return new UpdateDefaultOrganizationRolesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateDefaultOrganizationRolesResponse {
    return new UpdateDefaultOrganizationRolesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateDefaultOrganizationRolesResponse | PlainMessage<UpdateDefaultOrganizationRolesResponse> | undefined, b: UpdateDefaultOrganizationRolesResponse | PlainMessage<UpdateDefaultOrganizationRolesResponse> | undefined): boolean {
    return proto3.util.equals(UpdateDefaultOrganizationRolesResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.UpdateDefaultRole
 */
export class UpdateDefaultRole extends Message<UpdateDefaultRole> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  constructor(data?: PartialMessage<UpdateDefaultRole>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.UpdateDefaultRole";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateDefaultRole {
    return new UpdateDefaultRole().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateDefaultRole {
    return new UpdateDefaultRole().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateDefaultRole {
    return new UpdateDefaultRole().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateDefaultRole | PlainMessage<UpdateDefaultRole> | undefined, b: UpdateDefaultRole | PlainMessage<UpdateDefaultRole> | undefined): boolean {
    return proto3.util.equals(UpdateDefaultRole, a, b);
  }
}

/**
 * Permission Entity
 *
 * @generated from message scalekit.v1.roles.Permission
 */
export class Permission extends Message<Permission> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string description = 3;
   */
  description = "";

  /**
   * @generated from field: google.protobuf.Timestamp create_time = 4;
   */
  createTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp update_time = 5;
   */
  updateTime?: Timestamp;

  constructor(data?: PartialMessage<Permission>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.Permission";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "create_time", kind: "message", T: Timestamp },
    { no: 5, name: "update_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Permission {
    return new Permission().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Permission {
    return new Permission().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Permission {
    return new Permission().fromJsonString(jsonString, options);
  }

  static equals(a: Permission | PlainMessage<Permission> | undefined, b: Permission | PlainMessage<Permission> | undefined): boolean {
    return proto3.util.equals(Permission, a, b);
  }
}

/**
 * RolePermissions represents a permission with role source information
 *
 * @generated from message scalekit.v1.roles.RolePermission
 */
export class RolePermission extends Message<RolePermission> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string description = 3;
   */
  description = "";

  /**
   * @generated from field: google.protobuf.Timestamp create_time = 4;
   */
  createTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp update_time = 5;
   */
  updateTime?: Timestamp;

  /**
   * @generated from field: string role_name = 6;
   */
  roleName = "";

  constructor(data?: PartialMessage<RolePermission>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.RolePermission";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "create_time", kind: "message", T: Timestamp },
    { no: 5, name: "update_time", kind: "message", T: Timestamp },
    { no: 6, name: "role_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RolePermission {
    return new RolePermission().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RolePermission {
    return new RolePermission().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RolePermission {
    return new RolePermission().fromJsonString(jsonString, options);
  }

  static equals(a: RolePermission | PlainMessage<RolePermission> | undefined, b: RolePermission | PlainMessage<RolePermission> | undefined): boolean {
    return proto3.util.equals(RolePermission, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.CreatePermission
 */
export class CreatePermission extends Message<CreatePermission> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string description = 2;
   */
  description = "";

  constructor(data?: PartialMessage<CreatePermission>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.CreatePermission";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreatePermission {
    return new CreatePermission().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreatePermission {
    return new CreatePermission().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreatePermission {
    return new CreatePermission().fromJsonString(jsonString, options);
  }

  static equals(a: CreatePermission | PlainMessage<CreatePermission> | undefined, b: CreatePermission | PlainMessage<CreatePermission> | undefined): boolean {
    return proto3.util.equals(CreatePermission, a, b);
  }
}

/**
 * Permission Request/Response Messages
 *
 * @generated from message scalekit.v1.roles.CreatePermissionRequest
 */
export class CreatePermissionRequest extends Message<CreatePermissionRequest> {
  /**
   * @generated from field: scalekit.v1.roles.CreatePermission permission = 1;
   */
  permission?: CreatePermission;

  constructor(data?: PartialMessage<CreatePermissionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.CreatePermissionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "permission", kind: "message", T: CreatePermission },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreatePermissionRequest {
    return new CreatePermissionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreatePermissionRequest {
    return new CreatePermissionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreatePermissionRequest {
    return new CreatePermissionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreatePermissionRequest | PlainMessage<CreatePermissionRequest> | undefined, b: CreatePermissionRequest | PlainMessage<CreatePermissionRequest> | undefined): boolean {
    return proto3.util.equals(CreatePermissionRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.CreatePermissionResponse
 */
export class CreatePermissionResponse extends Message<CreatePermissionResponse> {
  /**
   * @generated from field: scalekit.v1.roles.Permission permission = 1;
   */
  permission?: Permission;

  constructor(data?: PartialMessage<CreatePermissionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.CreatePermissionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "permission", kind: "message", T: Permission },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreatePermissionResponse {
    return new CreatePermissionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreatePermissionResponse {
    return new CreatePermissionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreatePermissionResponse {
    return new CreatePermissionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreatePermissionResponse | PlainMessage<CreatePermissionResponse> | undefined, b: CreatePermissionResponse | PlainMessage<CreatePermissionResponse> | undefined): boolean {
    return proto3.util.equals(CreatePermissionResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.GetPermissionRequest
 */
export class GetPermissionRequest extends Message<GetPermissionRequest> {
  /**
   * @generated from field: string permission_name = 1;
   */
  permissionName = "";

  constructor(data?: PartialMessage<GetPermissionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.GetPermissionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "permission_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPermissionRequest {
    return new GetPermissionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPermissionRequest {
    return new GetPermissionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPermissionRequest {
    return new GetPermissionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetPermissionRequest | PlainMessage<GetPermissionRequest> | undefined, b: GetPermissionRequest | PlainMessage<GetPermissionRequest> | undefined): boolean {
    return proto3.util.equals(GetPermissionRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.GetPermissionResponse
 */
export class GetPermissionResponse extends Message<GetPermissionResponse> {
  /**
   * @generated from field: scalekit.v1.roles.Permission permission = 1;
   */
  permission?: Permission;

  constructor(data?: PartialMessage<GetPermissionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.GetPermissionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "permission", kind: "message", T: Permission },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPermissionResponse {
    return new GetPermissionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPermissionResponse {
    return new GetPermissionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPermissionResponse {
    return new GetPermissionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetPermissionResponse | PlainMessage<GetPermissionResponse> | undefined, b: GetPermissionResponse | PlainMessage<GetPermissionResponse> | undefined): boolean {
    return proto3.util.equals(GetPermissionResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.UpdatePermissionRequest
 */
export class UpdatePermissionRequest extends Message<UpdatePermissionRequest> {
  /**
   * @generated from field: string permission_name = 1;
   */
  permissionName = "";

  /**
   * @generated from field: scalekit.v1.roles.CreatePermission permission = 3;
   */
  permission?: CreatePermission;

  constructor(data?: PartialMessage<UpdatePermissionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.UpdatePermissionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "permission_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "permission", kind: "message", T: CreatePermission },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePermissionRequest {
    return new UpdatePermissionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePermissionRequest {
    return new UpdatePermissionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePermissionRequest {
    return new UpdatePermissionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdatePermissionRequest | PlainMessage<UpdatePermissionRequest> | undefined, b: UpdatePermissionRequest | PlainMessage<UpdatePermissionRequest> | undefined): boolean {
    return proto3.util.equals(UpdatePermissionRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.UpdatePermissionResponse
 */
export class UpdatePermissionResponse extends Message<UpdatePermissionResponse> {
  /**
   * @generated from field: scalekit.v1.roles.Permission permission = 1;
   */
  permission?: Permission;

  constructor(data?: PartialMessage<UpdatePermissionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.UpdatePermissionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "permission", kind: "message", T: Permission },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePermissionResponse {
    return new UpdatePermissionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePermissionResponse {
    return new UpdatePermissionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePermissionResponse {
    return new UpdatePermissionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdatePermissionResponse | PlainMessage<UpdatePermissionResponse> | undefined, b: UpdatePermissionResponse | PlainMessage<UpdatePermissionResponse> | undefined): boolean {
    return proto3.util.equals(UpdatePermissionResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.ListPermissionsRequest
 */
export class ListPermissionsRequest extends Message<ListPermissionsRequest> {
  /**
   * @generated from field: optional string page_token = 1;
   */
  pageToken?: string;

  /**
   * @generated from field: optional uint32 page_size = 2;
   */
  pageSize?: number;

  constructor(data?: PartialMessage<ListPermissionsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.ListPermissionsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "page_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPermissionsRequest {
    return new ListPermissionsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPermissionsRequest {
    return new ListPermissionsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPermissionsRequest {
    return new ListPermissionsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListPermissionsRequest | PlainMessage<ListPermissionsRequest> | undefined, b: ListPermissionsRequest | PlainMessage<ListPermissionsRequest> | undefined): boolean {
    return proto3.util.equals(ListPermissionsRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.ListPermissionsResponse
 */
export class ListPermissionsResponse extends Message<ListPermissionsResponse> {
  /**
   * @generated from field: repeated scalekit.v1.roles.Permission permissions = 1;
   */
  permissions: Permission[] = [];

  /**
   * @generated from field: string prev_page_token = 2;
   */
  prevPageToken = "";

  /**
   * @generated from field: string next_page_token = 3;
   */
  nextPageToken = "";

  /**
   * @generated from field: uint32 total_size = 4;
   */
  totalSize = 0;

  constructor(data?: PartialMessage<ListPermissionsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.ListPermissionsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "permissions", kind: "message", T: Permission, repeated: true },
    { no: 2, name: "prev_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "total_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPermissionsResponse {
    return new ListPermissionsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPermissionsResponse {
    return new ListPermissionsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPermissionsResponse {
    return new ListPermissionsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListPermissionsResponse | PlainMessage<ListPermissionsResponse> | undefined, b: ListPermissionsResponse | PlainMessage<ListPermissionsResponse> | undefined): boolean {
    return proto3.util.equals(ListPermissionsResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.DeletePermissionRequest
 */
export class DeletePermissionRequest extends Message<DeletePermissionRequest> {
  /**
   * @generated from field: string permission_name = 1;
   */
  permissionName = "";

  constructor(data?: PartialMessage<DeletePermissionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.DeletePermissionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "permission_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePermissionRequest {
    return new DeletePermissionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePermissionRequest {
    return new DeletePermissionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePermissionRequest {
    return new DeletePermissionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeletePermissionRequest | PlainMessage<DeletePermissionRequest> | undefined, b: DeletePermissionRequest | PlainMessage<DeletePermissionRequest> | undefined): boolean {
    return proto3.util.equals(DeletePermissionRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.ListRolePermissionsRequest
 */
export class ListRolePermissionsRequest extends Message<ListRolePermissionsRequest> {
  /**
   * @generated from field: string role_name = 1;
   */
  roleName = "";

  constructor(data?: PartialMessage<ListRolePermissionsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.ListRolePermissionsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "role_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRolePermissionsRequest {
    return new ListRolePermissionsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRolePermissionsRequest {
    return new ListRolePermissionsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRolePermissionsRequest {
    return new ListRolePermissionsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListRolePermissionsRequest | PlainMessage<ListRolePermissionsRequest> | undefined, b: ListRolePermissionsRequest | PlainMessage<ListRolePermissionsRequest> | undefined): boolean {
    return proto3.util.equals(ListRolePermissionsRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.ListRolePermissionsResponse
 */
export class ListRolePermissionsResponse extends Message<ListRolePermissionsResponse> {
  /**
   * @generated from field: repeated scalekit.v1.roles.Permission permissions = 1;
   */
  permissions: Permission[] = [];

  constructor(data?: PartialMessage<ListRolePermissionsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.ListRolePermissionsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "permissions", kind: "message", T: Permission, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRolePermissionsResponse {
    return new ListRolePermissionsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRolePermissionsResponse {
    return new ListRolePermissionsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRolePermissionsResponse {
    return new ListRolePermissionsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListRolePermissionsResponse | PlainMessage<ListRolePermissionsResponse> | undefined, b: ListRolePermissionsResponse | PlainMessage<ListRolePermissionsResponse> | undefined): boolean {
    return proto3.util.equals(ListRolePermissionsResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.AddPermissionsToRoleRequest
 */
export class AddPermissionsToRoleRequest extends Message<AddPermissionsToRoleRequest> {
  /**
   * @generated from field: string role_name = 1;
   */
  roleName = "";

  /**
   * @generated from field: repeated string permission_names = 2;
   */
  permissionNames: string[] = [];

  constructor(data?: PartialMessage<AddPermissionsToRoleRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.AddPermissionsToRoleRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "role_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "permission_names", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddPermissionsToRoleRequest {
    return new AddPermissionsToRoleRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddPermissionsToRoleRequest {
    return new AddPermissionsToRoleRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddPermissionsToRoleRequest {
    return new AddPermissionsToRoleRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddPermissionsToRoleRequest | PlainMessage<AddPermissionsToRoleRequest> | undefined, b: AddPermissionsToRoleRequest | PlainMessage<AddPermissionsToRoleRequest> | undefined): boolean {
    return proto3.util.equals(AddPermissionsToRoleRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.AddPermissionsToRoleResponse
 */
export class AddPermissionsToRoleResponse extends Message<AddPermissionsToRoleResponse> {
  /**
   * @generated from field: repeated scalekit.v1.roles.Permission permissions = 1;
   */
  permissions: Permission[] = [];

  constructor(data?: PartialMessage<AddPermissionsToRoleResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.AddPermissionsToRoleResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "permissions", kind: "message", T: Permission, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddPermissionsToRoleResponse {
    return new AddPermissionsToRoleResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddPermissionsToRoleResponse {
    return new AddPermissionsToRoleResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddPermissionsToRoleResponse {
    return new AddPermissionsToRoleResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddPermissionsToRoleResponse | PlainMessage<AddPermissionsToRoleResponse> | undefined, b: AddPermissionsToRoleResponse | PlainMessage<AddPermissionsToRoleResponse> | undefined): boolean {
    return proto3.util.equals(AddPermissionsToRoleResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.RemovePermissionFromRoleRequest
 */
export class RemovePermissionFromRoleRequest extends Message<RemovePermissionFromRoleRequest> {
  /**
   * @generated from field: string role_name = 1;
   */
  roleName = "";

  /**
   * @generated from field: string permission_name = 2;
   */
  permissionName = "";

  constructor(data?: PartialMessage<RemovePermissionFromRoleRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.RemovePermissionFromRoleRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "role_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "permission_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemovePermissionFromRoleRequest {
    return new RemovePermissionFromRoleRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemovePermissionFromRoleRequest {
    return new RemovePermissionFromRoleRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemovePermissionFromRoleRequest {
    return new RemovePermissionFromRoleRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemovePermissionFromRoleRequest | PlainMessage<RemovePermissionFromRoleRequest> | undefined, b: RemovePermissionFromRoleRequest | PlainMessage<RemovePermissionFromRoleRequest> | undefined): boolean {
    return proto3.util.equals(RemovePermissionFromRoleRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.ListEffectiveRolePermissionsRequest
 */
export class ListEffectiveRolePermissionsRequest extends Message<ListEffectiveRolePermissionsRequest> {
  /**
   * @generated from field: string role_name = 1;
   */
  roleName = "";

  constructor(data?: PartialMessage<ListEffectiveRolePermissionsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.ListEffectiveRolePermissionsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "role_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListEffectiveRolePermissionsRequest {
    return new ListEffectiveRolePermissionsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListEffectiveRolePermissionsRequest {
    return new ListEffectiveRolePermissionsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListEffectiveRolePermissionsRequest {
    return new ListEffectiveRolePermissionsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListEffectiveRolePermissionsRequest | PlainMessage<ListEffectiveRolePermissionsRequest> | undefined, b: ListEffectiveRolePermissionsRequest | PlainMessage<ListEffectiveRolePermissionsRequest> | undefined): boolean {
    return proto3.util.equals(ListEffectiveRolePermissionsRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.ListEffectiveRolePermissionsResponse
 */
export class ListEffectiveRolePermissionsResponse extends Message<ListEffectiveRolePermissionsResponse> {
  /**
   * @generated from field: repeated scalekit.v1.roles.Permission permissions = 1;
   */
  permissions: Permission[] = [];

  constructor(data?: PartialMessage<ListEffectiveRolePermissionsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.ListEffectiveRolePermissionsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "permissions", kind: "message", T: Permission, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListEffectiveRolePermissionsResponse {
    return new ListEffectiveRolePermissionsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListEffectiveRolePermissionsResponse {
    return new ListEffectiveRolePermissionsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListEffectiveRolePermissionsResponse {
    return new ListEffectiveRolePermissionsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListEffectiveRolePermissionsResponse | PlainMessage<ListEffectiveRolePermissionsResponse> | undefined, b: ListEffectiveRolePermissionsResponse | PlainMessage<ListEffectiveRolePermissionsResponse> | undefined): boolean {
    return proto3.util.equals(ListEffectiveRolePermissionsResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.ListDependentRolesRequest
 */
export class ListDependentRolesRequest extends Message<ListDependentRolesRequest> {
  /**
   * @generated from field: string role_name = 1;
   */
  roleName = "";

  constructor(data?: PartialMessage<ListDependentRolesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.ListDependentRolesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "role_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListDependentRolesRequest {
    return new ListDependentRolesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListDependentRolesRequest {
    return new ListDependentRolesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListDependentRolesRequest {
    return new ListDependentRolesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListDependentRolesRequest | PlainMessage<ListDependentRolesRequest> | undefined, b: ListDependentRolesRequest | PlainMessage<ListDependentRolesRequest> | undefined): boolean {
    return proto3.util.equals(ListDependentRolesRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.ListDependentRolesResponse
 */
export class ListDependentRolesResponse extends Message<ListDependentRolesResponse> {
  /**
   * @generated from field: repeated scalekit.v1.roles.Role roles = 1;
   */
  roles: Role[] = [];

  constructor(data?: PartialMessage<ListDependentRolesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.ListDependentRolesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "roles", kind: "message", T: Role, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListDependentRolesResponse {
    return new ListDependentRolesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListDependentRolesResponse {
    return new ListDependentRolesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListDependentRolesResponse {
    return new ListDependentRolesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListDependentRolesResponse | PlainMessage<ListDependentRolesResponse> | undefined, b: ListDependentRolesResponse | PlainMessage<ListDependentRolesResponse> | undefined): boolean {
    return proto3.util.equals(ListDependentRolesResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.DeleteRoleBaseRequest
 */
export class DeleteRoleBaseRequest extends Message<DeleteRoleBaseRequest> {
  /**
   * @generated from field: string role_name = 1;
   */
  roleName = "";

  constructor(data?: PartialMessage<DeleteRoleBaseRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.DeleteRoleBaseRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "role_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteRoleBaseRequest {
    return new DeleteRoleBaseRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteRoleBaseRequest {
    return new DeleteRoleBaseRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteRoleBaseRequest {
    return new DeleteRoleBaseRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteRoleBaseRequest | PlainMessage<DeleteRoleBaseRequest> | undefined, b: DeleteRoleBaseRequest | PlainMessage<DeleteRoleBaseRequest> | undefined): boolean {
    return proto3.util.equals(DeleteRoleBaseRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.roles.DeleteOrganizationRoleBaseRequest
 */
export class DeleteOrganizationRoleBaseRequest extends Message<DeleteOrganizationRoleBaseRequest> {
  /**
   * @generated from field: string org_id = 1;
   */
  orgId = "";

  /**
   * @generated from field: string role_name = 2;
   */
  roleName = "";

  constructor(data?: PartialMessage<DeleteOrganizationRoleBaseRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.roles.DeleteOrganizationRoleBaseRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "org_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "role_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteOrganizationRoleBaseRequest {
    return new DeleteOrganizationRoleBaseRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteOrganizationRoleBaseRequest {
    return new DeleteOrganizationRoleBaseRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteOrganizationRoleBaseRequest {
    return new DeleteOrganizationRoleBaseRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteOrganizationRoleBaseRequest | PlainMessage<DeleteOrganizationRoleBaseRequest> | undefined, b: DeleteOrganizationRoleBaseRequest | PlainMessage<DeleteOrganizationRoleBaseRequest> | undefined): boolean {
    return proto3.util.equals(DeleteOrganizationRoleBaseRequest, a, b);
  }
}

