// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file scalekit/v1/options/options.proto (package scalekit.v1.options, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, MethodOptions, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum scalekit.v1.options.AuthenticationType
 */
export enum AuthenticationType {
  /**
   * API is blocked / private  and default
   *
   * @generated from enum value: BLOCKED = 0;
   */
  BLOCKED = 0,

  /**
   * API is open
   *
   * @generated from enum value: NONE = 1;
   */
  NONE = 1,

  /**
   * workspace_id is in claims
   *
   * @generated from enum value: WORKSPACE = 64;
   */
  WORKSPACE = 64,

  /**
   * claims has organisation ID
   *
   * @generated from enum value: CUSTOMER_PORTAL = 32;
   */
  CUSTOMER_PORTAL = 32,

  /**
   * claims has UI in audience
   *
   * @generated from enum value: SESSION = 16;
   */
  SESSION = 16,

  /**
   * workspace_id is in claims and UI in audience
   *
   * @generated from enum value: WORKSPACE_SESSION = 80;
   */
  WORKSPACE_SESSION = 80,

  /**
   * workspace_id,organization_id is in claims and UI in audience
   *
   * @generated from enum value: WORKSPACE_SESSION_CUSTOMER_PORTAL = 112;
   */
  WORKSPACE_SESSION_CUSTOMER_PORTAL = 112,

  /**
   * user_id is in claims
   *
   * @generated from enum value: USER = 8;
   */
  USER = 8,

  /**
   * client Id is in subject
   *
   * @generated from enum value: CLIENT = 4;
   */
  CLIENT = 4,

  /**
   * UI in audience or client Id is in subject
   *
   * @generated from enum value: SESSION_CLIENT = 20;
   */
  SESSION_CLIENT = 20,

  /**
   * workspace_id is in claims, UI in audience and client Id is in subject
   *
   * @generated from enum value: WORKSPACE_SESSION_CLIENT = 84;
   */
  WORKSPACE_SESSION_CLIENT = 84,

  /**
   * claims has organisation ID, UI in audience and client Id is in subject
   *
   * @generated from enum value: CUSTOMER_PORTAL_SESSION_CLIENT = 52;
   */
  CUSTOMER_PORTAL_SESSION_CLIENT = 52,
}
// Retrieve enum metadata with: proto3.getEnumType(AuthenticationType)
proto3.util.setEnumType(AuthenticationType, "scalekit.v1.options.AuthenticationType", [
  { no: 0, name: "BLOCKED" },
  { no: 1, name: "NONE" },
  { no: 64, name: "WORKSPACE" },
  { no: 32, name: "CUSTOMER_PORTAL" },
  { no: 16, name: "SESSION" },
  { no: 80, name: "WORKSPACE_SESSION" },
  { no: 112, name: "WORKSPACE_SESSION_CUSTOMER_PORTAL" },
  { no: 8, name: "USER" },
  { no: 4, name: "CLIENT" },
  { no: 20, name: "SESSION_CLIENT" },
  { no: 84, name: "WORKSPACE_SESSION_CLIENT" },
  { no: 52, name: "CUSTOMER_PORTAL_SESSION_CLIENT" },
]);

/**
 * @generated from message scalekit.v1.options.AuthOption
 */
export class AuthOption extends Message<AuthOption> {
  /**
   * @generated from field: scalekit.v1.options.AuthenticationType authentication_type = 3;
   */
  authenticationType = AuthenticationType.BLOCKED;

  /**
   * @generated from field: string permission = 1;
   */
  permission = "";

  constructor(data?: PartialMessage<AuthOption>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.options.AuthOption";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 3, name: "authentication_type", kind: "enum", T: proto3.getEnumType(AuthenticationType) },
    { no: 1, name: "permission", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthOption {
    return new AuthOption().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthOption {
    return new AuthOption().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthOption {
    return new AuthOption().fromJsonString(jsonString, options);
  }

  static equals(a: AuthOption | PlainMessage<AuthOption> | undefined, b: AuthOption | PlainMessage<AuthOption> | undefined): boolean {
    return proto3.util.equals(AuthOption, a, b);
  }
}

/**
 * @generated from extension: scalekit.v1.options.AuthOption auth_option = 50000;
 */
export const auth_option = proto3.makeExtension<MethodOptions, AuthOption>(
  "scalekit.v1.options.auth_option", 
  MethodOptions, 
  () => ({ no: 50000, kind: "message", T: AuthOption }),
);

