// @generated by protoc-gen-es v2.5.1 with parameter "target=ts"
// @generated from file scalekit/v1/organizations/organizations.proto (package scalekit.v1.organizations, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../../buf/validate/validate_pb";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import { file_google_api_field_behavior } from "../../../google/api/field_behavior_pb";
import { file_google_api_visibility } from "../../../google/api/visibility_pb";
import type { EmptySchema, FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../protoc-gen-openapiv2/options/annotations_pb";
import type { RegionCode } from "../commons/commons_pb";
import { file_scalekit_v1_commons_commons } from "../commons/commons_pb";
import { file_scalekit_v1_options_options } from "../options/options_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file scalekit/v1/organizations/organizations.proto.
 */
export const file_scalekit_v1_organizations_organizations: GenFile = /*@__PURE__*/
  fileDesc("Ci1zY2FsZWtpdC92MS9vcmdhbml6YXRpb25zL29yZ2FuaXphdGlvbnMucHJvdG8SGXNjYWxla2l0LnYxLm9yZ2FuaXphdGlvbnMioQEKGUNyZWF0ZU9yZ2FuaXphdGlvblJlcXVlc3QSgwEKDG9yZ2FuaXphdGlvbhgBIAEoCzItLnNjYWxla2l0LnYxLm9yZ2FuaXphdGlvbnMuQ3JlYXRlT3JnYW5pemF0aW9uQj6SQTUyM1JlcXVpcmVkIHBhcmFtZXRlcnMgZm9yIGNyZWF0aW5nIGEgbmV3IG9yZ2FuaXphdGlvbrpIA8gBASKrAQoaQ3JlYXRlT3JnYW5pemF0aW9uUmVzcG9uc2USjAEKDG9yZ2FuaXphdGlvbhgBIAEoCzInLnNjYWxla2l0LnYxLm9yZ2FuaXphdGlvbnMuT3JnYW5pemF0aW9uQk2SQUoySFRoZSBuZXdseSBjcmVhdGVkIG9yZ2FuaXphdGlvbiBjb250YWluaW5nIGl0cyBJRCwgc2V0dGluZ3MsIGFuZCBtZXRhZGF0YSLhBAoSQ3JlYXRlT3JnYW5pemF0aW9uEnQKDGRpc3BsYXlfbmFtZRgEIAEoCUJekkFRMj9OYW1lIG9mIHRoZSBvcmdhbml6YXRpb24uIE11c3QgYmUgYmV0d2VlbiAxIGFuZCAyMDAgY2hhcmFjdGVycy5KDiJNZWdhc29mdCBJbmMiukgHcgUQARjIARKUAQoLcmVnaW9uX2NvZGUYBSABKA4yHy5zY2FsZWtpdC52MS5jb21tb25zLlJlZ2lvbkNvZGVCXpJBTDJER2VvZ3JhcGhpYyByZWdpb24gY29kZSBmb3IgdGhlIG9yZ2FuaXphdGlvbi4gQ3VycmVudGx5IGxpbWl0ZWQgdG8gVVNKBCJVUyL60uSTAgkSB1BSRVZJRVcSkgEKC2V4dGVybmFsX2lkGAYgASgJQniSQXUyY1lvdXIgYXBwbGljYXRpb24ncyB1bmlxdWUgaWRlbnRpZmllciBmb3IgdGhpcyBvcmdhbml6YXRpb24sIHVzZWQgdG8gbGluayBTY2FsZWtpdCB3aXRoIHlvdXIgc3lzdGVtLkoOIm15X3VuaXF1ZV9pZCJIAIgBARJoCghtZXRhZGF0YRgHIAMoCzI7LnNjYWxla2l0LnYxLm9yZ2FuaXphdGlvbnMuQ3JlYXRlT3JnYW5pemF0aW9uLk1ldGFkYXRhRW50cnlCGbpIFpoBExAKIgZyBBADGBkqB3IFEAEYgAIaLwoNTWV0YWRhdGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBQg4KDF9leHRlcm5hbF9pZCKGCAoMT3JnYW5pemF0aW9uEncKAmlkGAEgASgJQmuSQWgyTVVuaXF1ZSBzY2FsZWtpdC1nZW5lcmF0ZWQgaWRlbnRpZmllciB0aGF0IHVuaXF1ZWx5IHJlZmVyZW5jZXMgYW4gb3JnYW5pemF0aW9uShcib3JnXzU5NjE1MTkzOTA2MjgyNjM1IhKAAQoLY3JlYXRlX3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQk+SQUkyK1RpbWVzdGFtcCB3aGVuIHRoZSBvcmdhbml6YXRpb24gd2FzIGNyZWF0ZWRKGiIyMDI1LTAyLTE1VDA2OjIzOjQ0LjU2MFoi4EECEoIBCgt1cGRhdGVfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCUZJBTjIwVGltZXN0YW1wIHdoZW4gdGhlIG9yZ2FuaXphdGlvbiB3YXMgbGFzdCB1cGRhdGVkShoiMjAyNS0wMi0xNVQwNjoyMzo0NC41NjBaIhJvCgxkaXNwbGF5X25hbWUYBCABKAlCWZJBTDI+TmFtZSBvZiB0aGUgb3JnYW5pemF0aW9uLiBNdXN0IGJlIGJldHdlZW4gMSBhbmQgMjAwIGNoYXJhY3RlcnNKCiJNZWdhc29mdCK6SAdyBRABGMgBEoYBCgtyZWdpb25fY29kZRgFIAEoDjIfLnNjYWxla2l0LnYxLmNvbW1vbnMuUmVnaW9uQ29kZUJQkkFNMkVHZW9ncmFwaGljIHJlZ2lvbiBjb2RlIGZvciB0aGUgb3JnYW5pemF0aW9uLiBDdXJyZW50bHkgbGltaXRlZCB0byBVUy5KBCJVUyISkgEKC2V4dGVybmFsX2lkGAYgASgJQniSQXUyY1lvdXIgYXBwbGljYXRpb24ncyB1bmlxdWUgaWRlbnRpZmllciBmb3IgdGhpcyBvcmdhbml6YXRpb24sIHVzZWQgdG8gbGluayBTY2FsZWtpdCB3aXRoIHlvdXIgc3lzdGVtLkoOIm15X3VuaXF1ZV9pZCJIAIgBARJiCghtZXRhZGF0YRgHIAMoCzI1LnNjYWxla2l0LnYxLm9yZ2FuaXphdGlvbnMuT3JnYW5pemF0aW9uLk1ldGFkYXRhRW50cnlCGbpIFpoBExAKIgZyBBADGBkqB3IFEAEYgAISQQoIc2V0dGluZ3MYCCABKAsyLy5zY2FsZWtpdC52MS5vcmdhbml6YXRpb25zLk9yZ2FuaXphdGlvblNldHRpbmdzGi8KDU1ldGFkYXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4AUIOCgxfZXh0ZXJuYWxfaWQitAMKGVVwZGF0ZU9yZ2FuaXphdGlvblJlcXVlc3QSZgoCaWQYASABKAlCWJJBTDIzVW5pcXVlIGlkZW50aWZpZXIgb2YgdGhlIG9yZ2FuaXphdGlvbiB0byBiZSB1cGRhdGVkShUib3JnXzEyMTMxMjQzNDEyMzMxMiK6SAZyBBABGCBIABJ5CgtleHRlcm5hbF9pZBgCIAEoCUJikkFJMi1FeHRlcm5hbCBJRCBvZiB0aGUgb3JnYW5pemF0aW9uIHRvIGJlIHVwZGF0ZWRKGCJ0ZW5hbnRfMTIzMTIzMTIzMTIzMTIzIrpIBHICEAH60uSTAgkSB1BSRVZJRVdIABJ1Cgxvcmdhbml6YXRpb24YAyABKAsyLS5zY2FsZWtpdC52MS5vcmdhbml6YXRpb25zLlVwZGF0ZU9yZ2FuaXphdGlvbkIwkkEnMiVPcmdhbml6YXRpb24gUGFyYW1ldGVycyB0byBiZSB1cGRhdGVkukgDyAEBEi8KC3VwZGF0ZV9tYXNrGGMgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFza0IMCgppZGVudGl0aWVzIrIFChJVcGRhdGVPcmdhbml6YXRpb24SkQEKDGRpc3BsYXlfbmFtZRgEIAEoCUJ2kkFpMlNOYW1lIG9mIHRoZSBvcmdhbml6YXRpb24gdG8gZGlzcGxheSBpbiB0aGUgVUkuIE11c3QgYmUgYmV0d2VlbiAxIGFuZCAyMDAgY2hhcmFjdGVyc0oSIkFjbWUgQ29ycG9yYXRpb24iukgHcgUQARjIAUgAiAEBEpEBCgtleHRlcm5hbF9pZBgGIAEoCUJ3kkF0MmJZb3VyIGFwcGxpY2F0aW9uJ3MgdW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoaXMgb3JnYW5pemF0aW9uLCB1c2VkIHRvIGxpbmsgU2NhbGVraXQgd2l0aCB5b3VyIHN5c3RlbUoOInRlbmFudF8xMjM0NSJIAYgBARKbAgoIbWV0YWRhdGEYByADKAsyOy5zY2FsZWtpdC52MS5vcmdhbml6YXRpb25zLlVwZGF0ZU9yZ2FuaXphdGlvbi5NZXRhZGF0YUVudHJ5QssBkkGuATKPAUN1c3RvbSBrZXktdmFsdWUgcGFpcnMgdG8gc3RvcmUgd2l0aCB0aGUgb3JnYW5pemF0aW9uLiBLZXlzIG11c3QgYmUgMy0yNSBjaGFyYWN0ZXJzLCB2YWx1ZXMgbXVzdCBiZSAxLTI1NiBjaGFyYWN0ZXJzLiBNYXhpbXVtIDEwIHBhaXJzIGFsbG93ZWQuShp7ImluZHVzdHJ5IjogInRlY2hub2xvZ3kifbpIFpoBExAKIgZyBBADGBkqB3IFEAEYgAIaLwoNTWV0YWRhdGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBQg8KDV9kaXNwbGF5X25hbWVCDgoMX2V4dGVybmFsX2lkSgQIBRAGIn4KGlVwZGF0ZU9yZ2FuaXphdGlvblJlc3BvbnNlEmAKDG9yZ2FuaXphdGlvbhgBIAEoCzInLnNjYWxla2l0LnYxLm9yZ2FuaXphdGlvbnMuT3JnYW5pemF0aW9uQiGSQR4yHFVwZGF0ZWQgb3JnYW5pemF0aW9uIGRldGFpbHMi2wIKFkdldE9yZ2FuaXphdGlvblJlcXVlc3QSgAEKAmlkGAEgASgJQnKSQWYyTVVuaXF1ZSBzY2FsZWtpdC1nZW5lcmF0ZWQgaWRlbnRpZmllciB0aGF0IHVuaXF1ZWx5IHJlZmVyZW5jZXMgYW4gb3JnYW5pemF0aW9uShUib3JnXzEyMTMxMjQzNDEyMzMxMiK6SAZyBBABGCBIABKvAQoLZXh0ZXJuYWxfaWQYAiABKAlClwGSQX4yYlVuaXF1ZSBpZGVudGlmaWVyIHRoYXQgbGlua3MgYW4gT3JnYW5pemF0aW9uIE9iamVjdCB0byB5b3VyIGFwcCdzIHRlbmFudCwgc3RvcmVkIGFzIGFuIEV4dGVybmFsIElEShgidGVuYW50XzEyMzEyMzEyMzEyMzEyMyK6SARyAhAB+tLkkwIJEgdQUkVWSUVXSABCDAoKaWRlbnRpdGllcyJ9ChdHZXRPcmdhbml6YXRpb25SZXNwb25zZRJiCgxvcmdhbml6YXRpb24YASABKAsyJy5zY2FsZWtpdC52MS5vcmdhbml6YXRpb25zLk9yZ2FuaXphdGlvbkIjkkEgMh5UaGUgbmV3bHkgY3JlYXRlZCBvcmdhbml6YXRpb24ivwUKGExpc3RPcmdhbml6YXRpb25zUmVxdWVzdBJqCglwYWdlX3NpemUYASABKA1CV5JBVDJOTWF4aW11bSBudW1iZXIgb2Ygb3JnYW5pemF0aW9ucyB0byByZXR1cm4gcGVyIHBhZ2UuIE11c3QgYmUgYmV0d2VlbiAxMCBhbmQgMTAwSgIzMBKEAQoKcGFnZV90b2tlbhgCIAEoCUJwkkFtMltQYWdpbmF0aW9uIHRva2VuIGZyb20gdGhlIHByZXZpb3VzIHJlc3BvbnNlLiBVc2UgdG8gcmV0cmlldmUgdGhlIG5leHQgcGFnZSBvZiBvcmdhbml6YXRpb25zSg4iPHBhZ2VfdG9rZW4+IhKcAQoLZXh0ZXJuYWxfaWQYAyABKAlCgQGSQX4yYllvdXIgYXBwbGljYXRpb24ncyB1bmlxdWUgaWRlbnRpZmllciBmb3IgdGhpcyBvcmdhbml6YXRpb24sIHVzZWQgdG8gbGluayBTY2FsZWtpdCB3aXRoIHlvdXIgc3lzdGVtShgiPHlvdXJfYXBwX2Fzc2lnbmVkX2lkPiJIAIgBATqAApJB/AEKqwEqEkxpc3QgT3JnYW5pemF0aW9uczKUAVJldHJpZXZlcyBhIHBhZ2luYXRlZCBsaXN0IG9mIGFsbCBvcmdhbml6YXRpb25zIHdpdGhpbiB0aGUgZW52aXJvbm1lbnQuIFVzZSB0aGUgYHBhZ2VfdG9rZW5gIGZyb20gdGhlIHJlc3BvbnNlIHRvIGFjY2VzcyBzdWJzZXF1ZW50IHBhZ2VzIG9mIHJlc3VsdHMqTAoSTGlzdCBPcmdhbml6YXRpb25zEjZodHRwczovL2RvY3Muc2NhbGVraXQuY29tL3JlZmVyZW5jZS9saXN0LW9yZ2FuaXphdGlvbnNCDgoMX2V4dGVybmFsX2lkIuwDChlMaXN0T3JnYW5pemF0aW9uc1Jlc3BvbnNlEogBCg9uZXh0X3BhZ2VfdG9rZW4YASABKAlCb5JBbDJVUGFnaW5hdGlvbiB0b2tlbiBmb3IgdGhlIG5leHQgcGFnZSBvZiByZXN1bHRzLiBVc2UgdGhpcyB0b2tlbiB0byBmZXRjaCB0aGUgbmV4dCBwYWdlLkoTIjxuZXh0X3BhZ2VfdG9rZW4+IhJOCgp0b3RhbF9zaXplGAIgASgNQjqSQTcyMVRvdGFsIG51bWJlciBvZiBvcmdhbml6YXRpb25zIGluIHRoZSBlbnZpcm9ubWVudC5KAjMwEmEKDW9yZ2FuaXphdGlvbnMYAyADKAsyJy5zY2FsZWtpdC52MS5vcmdhbml6YXRpb25zLk9yZ2FuaXphdGlvbkIhkkEeMhxMaXN0IG9mIG9yZ2FuaXphdGlvbiBvYmplY3RzEpABCg9wcmV2X3BhZ2VfdG9rZW4YBCABKAlCd5JBdDJdUGFnaW5hdGlvbiB0b2tlbiBmb3IgdGhlIHByZXZpb3VzIHBhZ2Ugb2YgcmVzdWx0cy4gVXNlIHRoaXMgdG9rZW4gdG8gZmV0Y2ggdGhlIHByZXZpb3VzIHBhZ2UuShMiPHByZXZfcGFnZV90b2tlbj4iIooFChpTZWFyY2hPcmdhbml6YXRpb25zUmVxdWVzdBKeAQoFcXVlcnkYASABKAlCjgGSQX8yd1NlYXJjaCB0ZXJtIHRvIG1hdGNoIGFnYWluc3Qgb3JnYW5pemF0aW9uIG5hbWVzLCBJRHMsIG9yIGV4dGVybmFsIElEcy4gTXVzdCBiZSBhdCBsZWFzdCAzIGNoYXJhY3RlcnMuIENhc2UgaW5zZW5zaXRpdmUuSgRhY21lukgJyAEBcgQQAxhkEnYKCXBhZ2Vfc2l6ZRgCIAEoDUJjkkFZMlNNYXhpbXVtIG51bWJlciBvZiBvcmdhbml6YXRpb25zIHRvIHJldHVybiBwZXIgcGFnZS4gVmFsdWUgbXVzdCBiZSBiZXR3ZWVuIDEgYW5kIDMwLkoCMzC6SAQqAhgeEpoBCgpwYWdlX3Rva2VuGAMgASgJQoUBkkGBATJhVG9rZW4gZnJvbSBhIHByZXZpb3VzIHJlc3BvbnNlIGZvciBwYWdpbmF0aW9uLiBQcm92aWRlIHRoaXMgdG8gcmV0cmlldmUgdGhlIG5leHQgcGFnZSBvZiByZXN1bHRzLkocZXlKd1lXZGxJam95TENKc2FXMXBkQ0k2TXpCOTq1AZJBsQEKiAEqFFNlYXJjaCBPcmdhbml6YXRpb25zMnBTZWFyY2ggZm9yIG9yZ2FuaXphdGlvbnMgaW4geW91ciBlbnZpcm9ubWVudCB1c2luZyBhIHRleHQgcXVlcnkgdGhhdCBtYXRjaGVzIGFnYWluc3QgbmFtZXMsIElEcywgb3IgZXh0ZXJuYWwgSURzMiRxdWVyeT1hY21lJnBhZ2Vfc2l6ZT0zMCZwYWdlX3Rva2VuPTEiowEKG1NlYXJjaE9yZ2FuaXphdGlvbnNSZXNwb25zZRIXCg9uZXh0X3BhZ2VfdG9rZW4YASABKAkSEgoKdG90YWxfc2l6ZRgCIAEoDRI+Cg1vcmdhbml6YXRpb25zGAMgAygLMicuc2NhbGVraXQudjEub3JnYW5pemF0aW9ucy5Pcmdhbml6YXRpb24SFwoPcHJldl9wYWdlX3Rva2VuGAQgASgJIpwCChlEZWxldGVPcmdhbml6YXRpb25SZXF1ZXN0EnoKAmlkGAEgASgJQmySQWAyTVVuaXF1ZSBzY2FsZWtpdC1nZW5lcmF0ZWQgaWRlbnRpZmllciB0aGF0IHVuaXF1ZWx5IHJlZmVyZW5jZXMgYW4gb3JnYW5pemF0aW9uSg8ib3JnXzEyMzQ1Njc4OSK6SAZyBBABGCBIABJ1CgtleHRlcm5hbF9pZBgCIAEoCUJekkFFMilFeHRlcm5hbCBJRCBvZiB0aGUgb3JnYW5pemF0aW9uIHRvIGRlbGV0ZUoYInRlbmFudF8xMjMxMjMxMjMxMjMxMjMiukgEcgIQAfrS5JMCCRIHUFJFVklFV0gAQgwKCmlkZW50aXRpZXMirQQKGUdlbmVyYXRlUG9ydGFsTGlua1JlcXVlc3QSSgoCaWQYASABKAlCPpJBKTIPT3JnYW5pemF0aW9uIElEShYib3JnXzEyMzEyMzQyMzM0MjQzNDQiukgPyAEBcgoQARggOgRvcmdfEiMKA3NzbxgCIAEoCEIRGAH60uSTAgkSB1BSRVZJRVdIAIgBARIuCg5kaXJlY3Rvcnlfc3luYxgDIAEoCEIRGAH60uSTAgkSB1BSRVZJRVdIAYgBARLTAgoIZmVhdHVyZXMYBCADKA4yIi5zY2FsZWtpdC52MS5vcmdhbml6YXRpb25zLkZlYXR1cmVCnAKSQZgCMpUCRmVhdHVyZXMgdG8gZW5hYmxlIGluIHRoZSBhZG1pbiBwb3J0YWwgbGluay4gVG8gZW5hYmxlIGZlYXR1cmVzLCBhcHBlbmQgdGhlbSBhcyBVUkwgcGFyYW1ldGVyczoKCi0gU2luZ2xlIFNpZ24tT246ID9mZWF0dXJlcz1zc28KLSBEaXJlY3RvcnkgU3luYzogP2ZlYXR1cmVzPWRpcl9zeW5jCi0gQm90aCBmZWF0dXJlczogP2ZlYXR1cmVzPXNzbyZmZWF0dXJlcz1kaXJfc3luYwoKRXhhbXBsZSBVUkw6IGh0dHBzOi8vc2NhbGVraXQuY29tL3BvcnRhbC9sbmtfMTIzP2ZlYXR1cmVzPXNzb0IGCgRfc3NvQhEKD19kaXJlY3Rvcnlfc3luYyJiChRHZXRQb3J0YWxMaW5rUmVxdWVzdBJKCgJpZBgBIAEoCUI+kkEpMg9Pcmdhbml6YXRpb24gSURKFiJvcmdfMTIzMTIzNDIzMzQyNDM0NCK6SA/IAQFyChABGCA6BG9yZ18iZQoXRGVsZXRlUG9ydGFsTGlua1JlcXVlc3QSSgoCaWQYASABKAlCPpJBKTIPT3JnYW5pemF0aW9uIElEShYib3JnXzEyMzEyMzQyMzM0MjQzNDQiukgPyAEBcgoQARggOgRvcmdfIrIBChtEZWxldGVQb3J0YWxMaW5rQnlJZFJlcXVlc3QSSgoCaWQYASABKAlCPpJBKTIPT3JnYW5pemF0aW9uIElEShYib3JnXzEyMzEyMzQyMzM0MjQzNDQiukgPyAEBcgoQARggOgRvcmdfEkcKB2xpbmtfaWQYAiABKAlCNpJBITIHTGluayBJREoWImxua18xMjMxMjM0MjMzNDI0MzQ0IrpID8gBAXIKEAEYIDoEbG5rXyKYAwoETGluaxJGCgJpZBgBIAEoCUI6kkE3Mh5VbmlxdWUgSWRlbnRpZmllciBmb3IgdGhlIGxpbmtKFSJsbmtfMTIzMTIzMTIzMTIzMTIzIhK8AQoIbG9jYXRpb24YAiABKAlCqQGSQaUBMnBMb2NhdGlvbiBvZiB0aGUgbGluay4gVGhpcyBpcyB0aGUgVVJMIHRoYXQgY2FuIGJlIHVzZWQgdG8gYWNjZXNzIHRoZSBBZG1pbiBwb3J0YWwuIFRoZSBsaW5rIGlzIHZhbGlkIGZvciAxIHdlZWsuSjEiaHR0cHM6Ly9zY2FsZWtpdC5jb20vcG9ydGFsL2xua18xMjMxMjMxMjMxMjMxMjMiEogBCgtleHBpcmVfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCV5JBVDI2RXhwaXJ5IHRpbWUgb2YgdGhlIGxpbmsuIFRoZSBsaW5rIGlzIHZhbGlkIGZvciAxIHdlZWsuShoiMjAyNC0wMi0wNlQxNDo0ODowMC4wMDBaIiKQAgoaR2VuZXJhdGVQb3J0YWxMaW5rUmVzcG9uc2US8QEKBGxpbmsYASABKAsyHy5zY2FsZWtpdC52MS5vcmdhbml6YXRpb25zLkxpbmtCwQGSQb0BMroBQ29udGFpbnMgdGhlIGdlbmVyYXRlZCBhZG1pbiBwb3J0YWwgbGluayBkZXRhaWxzLiBUaGUgbGluayBVUkwgY2FuIGJlIHNoYXJlZCB3aXRoIG9yZ2FuaXphdGlvbiBhZG1pbmlzdHJhdG9ycyB0byBzZXQgdXA6IFNpbmdsZSBTaWduLU9uIChTU08pIGF1dGhlbnRpY2F0aW9uIGFuZCBkaXJlY3Rvcnkgc3luY2hyb25pemF0aW9uImEKFkdldFBvcnRhbExpbmtzUmVzcG9uc2USRwoFbGlua3MYASADKAsyHy5zY2FsZWtpdC52MS5vcmdhbml6YXRpb25zLkxpbmtCF5JBFDISQWRtaW4gUG9ydGFsIExpbmtzIoIECiFVcGRhdGVPcmdhbml6YXRpb25TZXR0aW5nc1JlcXVlc3QSkwEKAmlkGAEgASgJQoYBkkFxMldVbmlxdWUgaWRlbnRpZmllciBvZiB0aGUgb3JnYW5pemF0aW9uIHRvIHVwZGF0ZSBzZXR0aW5ncy4gTXVzdCBiZWdpbiB3aXRoICdvcmdfJyBwcmVmaXhKFiJvcmdfMTIzMTIzNDIzMzQyNDM0NCK6SA/IAQFyChABGCA6BG9yZ18SxgIKCHNldHRpbmdzGAIgASgLMi8uc2NhbGVraXQudjEub3JnYW5pemF0aW9ucy5Pcmdhbml6YXRpb25TZXR0aW5nc0KCApJB+AEylQFTZXR0aW5ncyBjb25maWd1cmF0aW9uIHRvIGFwcGx5IHRvIHRoZSBvcmdhbml6YXRpb24uIENvbnRhaW5zIGZlYXR1cmUgdG9nZ2xlcyBmb3IgU1NPLCBkaXJlY3Rvcnkgc3luY2hyb25pemF0aW9uLCBhbmQgb3RoZXIgb3JnYW5pemF0aW9uIGNhcGFiaWxpdGllc0peeyJmZWF0dXJlcyI6IFt7Im5hbWUiOiAic3NvIiwgImVuYWJsZWQiOiB0cnVlfSwgeyJuYW1lIjogImRpcmVjdG9yeV9zeW5jIiwgImVuYWJsZWQiOiBmYWxzZX1dfbpIA8gBASLIAQooVXBkYXRlT3JnYW5pemF0aW9uU2Vzc2lvblNldHRpbmdzUmVxdWVzdBIaCgJpZBgBIAEoCUIOukgLcgkQARggOgNvcmcSJgoOZW52aXJvbm1lbnRfaWQYAiABKAlCDrpIC3IJEAEYIDoDZW52ElgKEHNlc3Npb25fc2V0dGluZ3MYAyABKAsyNi5zY2FsZWtpdC52MS5vcmdhbml6YXRpb25zLk9yZ2FuaXphdGlvblNlc3Npb25TZXR0aW5nc0IGukgDyAEBIq4BCilVcGRhdGVPcmdhbml6YXRpb25TZXNzaW9uU2V0dGluZ3NSZXNwb25zZRIWCg5lbnZpcm9ubWVudF9pZBgBIAEoCRIXCg9vcmdhbml6YXRpb25faWQYAiABKAkSUAoQc2Vzc2lvbl9zZXR0aW5ncxgDIAEoCzI2LnNjYWxla2l0LnYxLm9yZ2FuaXphdGlvbnMuT3JnYW5pemF0aW9uU2Vzc2lvblNldHRpbmdzIpECChtPcmdhbml6YXRpb25TZXNzaW9uU2V0dGluZ3MSPQoYYWJzb2x1dGVfc2Vzc2lvbl90aW1lb3V0GAEgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSPgoac2Vzc2lvbl9tYW5hZ2VtZW50X2VuYWJsZWQYAiABKAsyGi5nb29nbGUucHJvdG9idWYuQm9vbFZhbHVlEjkKFGlkbGVfc2Vzc2lvbl90aW1lb3V0GAMgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSOAoUaWRsZV9zZXNzaW9uX2VuYWJsZWQYBCABKAsyGi5nb29nbGUucHJvdG9idWYuQm9vbFZhbHVlImsKJUdldE9yZ2FuaXphdGlvblNlc3Npb25TZXR0aW5nc1JlcXVlc3QSGgoCaWQYASABKAlCDrpIC3IJEAEYIDoDb3JnEiYKDmVudmlyb25tZW50X2lkGAIgASgJQg66SAtyCRABGCA6A2VudiJuCihDcmVhdGVPcmdhbml6YXRpb25TZXNzaW9uU2V0dGluZ3NSZXF1ZXN0EhoKAmlkGAEgASgJQg66SAtyCRABGCA6A29yZxImCg5lbnZpcm9ubWVudF9pZBgCIAEoCUIOukgLcgkQARggOgNlbnYirgEKKUNyZWF0ZU9yZ2FuaXphdGlvblNlc3Npb25TZXR0aW5nc1Jlc3BvbnNlEhYKDmVudmlyb25tZW50X2lkGAEgASgJEhcKD29yZ2FuaXphdGlvbl9pZBgCIAEoCRJQChBzZXNzaW9uX3NldHRpbmdzGAMgASgLMjYuc2NhbGVraXQudjEub3JnYW5pemF0aW9ucy5Pcmdhbml6YXRpb25TZXNzaW9uU2V0dGluZ3MiqwEKJkdldE9yZ2FuaXphdGlvblNlc3Npb25TZXR0aW5nc1Jlc3BvbnNlEhYKDmVudmlyb25tZW50X2lkGAEgASgJEhcKD29yZ2FuaXphdGlvbl9pZBgCIAEoCRJQChBzZXNzaW9uX3NldHRpbmdzGAMgASgLMjYuc2NhbGVraXQudjEub3JnYW5pemF0aW9ucy5Pcmdhbml6YXRpb25TZXNzaW9uU2V0dGluZ3MibgooRGVsZXRlT3JnYW5pemF0aW9uU2Vzc2lvblNldHRpbmdzUmVxdWVzdBIaCgJpZBgBIAEoCUIOukgLcgkQARggOgNvcmcSJgoOZW52aXJvbm1lbnRfaWQYAiABKAlCDrpIC3IJEAEYIDoDZW52IoQEChRPcmdhbml6YXRpb25TZXR0aW5ncxKaAgoIZmVhdHVyZXMYASADKAsyNi5zY2FsZWtpdC52MS5vcmdhbml6YXRpb25zLk9yZ2FuaXphdGlvblNldHRpbmdzRmVhdHVyZULPAZJBywEyd0xpc3Qgb2YgZmVhdHVyZSB0b2dnbGVzIHRoYXQgY29udHJvbCBvcmdhbml6YXRpb24gY2FwYWJpbGl0aWVzIHN1Y2ggYXMgU1NPIGF1dGhlbnRpY2F0aW9uIGFuZCBkaXJlY3Rvcnkgc3luY2hyb25pemF0aW9uSlBbeyJuYW1lIjogInNzbyIsICJlbmFibGVkIjogdHJ1ZX0sIHsibmFtZSI6ICJkaXJlY3Rvcnlfc3luYyIsICJlbmFibGVkIjogZmFsc2V9XTrOAZJBygEKaCoVT3JnYW5pemF0aW9uIFNldHRpbmdzMk9Db25maWd1cmF0aW9uIG9wdGlvbnMgdGhhdCBjb250cm9sIG9yZ2FuaXphdGlvbi1sZXZlbCBmZWF0dXJlcyBhbmQgY2FwYWJpbGl0aWVzMl57ImZlYXR1cmVzIjogW3sibmFtZSI6ICJzc28iLCAiZW5hYmxlZCI6IHRydWV9LCB7Im5hbWUiOiAiZGlyZWN0b3J5X3N5bmMiLCAiZW5hYmxlZCI6IGZhbHNlfV19IpADChtPcmdhbml6YXRpb25TZXR0aW5nc0ZlYXR1cmUSjAEKBG5hbWUYASABKAlCfpJBezJyRmVhdHVyZSBpZGVudGlmaWVyLiBTdXBwb3J0ZWQgdmFsdWVzIGluY2x1ZGU6ICJzc28iIChTaW5nbGUgU2lnbi1PbiksICJkaXJlY3Rvcnlfc3luYyIgKERpcmVjdG9yeSBTeW5jaHJvbml6YXRpb24pSgUic3NvIhJrCgdlbmFibGVkGAIgASgIQlqSQVcyT1doZXRoZXIgdGhlIGZlYXR1cmUgaXMgZW5hYmxlZCAodHJ1ZSkgb3IgZGlzYWJsZWQgKGZhbHNlKSBmb3IgdGhpcyBvcmdhbml6YXRpb25KBHRydWU6dZJBcgpwKhtPcmdhbml6YXRpb24gRmVhdHVyZSBUb2dnbGUyQENvbnRyb2xzIHRoZSBhY3RpdmF0aW9uIHN0YXRlIG9mIGEgc3BlY2lmaWMgb3JnYW5pemF0aW9uIGZlYXR1cmXSAQRuYW1l0gEHZW5hYmxlZCoxCgdGZWF0dXJlEg8KC1VOU1BFQ0lGSUVEEAASDAoIZGlyX3N5bmMQARIHCgNzc28QAjL1NAoTT3JnYW5pemF0aW9uU2VydmljZRKIBAoSQ3JlYXRlT3JnYW5pemF0aW9uEjQuc2NhbGVraXQudjEub3JnYW5pemF0aW9ucy5DcmVhdGVPcmdhbml6YXRpb25SZXF1ZXN0GjUuc2NhbGVraXQudjEub3JnYW5pemF0aW9ucy5DcmVhdGVPcmdhbml6YXRpb25SZXNwb25zZSKEA5JBzwIKDU9yZ2FuaXphdGlvbnMSFkNyZWF0ZSBhbiBPcmdhbml6YXRpb24ajwFDcmVhdGVzIGEgbmV3IG9yZ2FuaXphdGlvbiBpbiB5b3VyIGVudmlyb25tZW50LiBVc2UgdGhpcyBlbmRwb2ludCB0byBhZGQgYSBuZXcgdGVuYW50IHRoYXQgY2FuIGJlIGNvbmZpZ3VyZWQgd2l0aCB2YXJpb3VzIHNldHRpbmdzIGFuZCBtZXRhZGF0YUqTAQoDMjAxEosBCk5SZXR1cm5zIHRoZSBuZXdseSBjcmVhdGVkIG9yZ2FuaXphdGlvbiB3aXRoIGl0cyB1bmlxdWUgaWRlbnRpZmllciBhbmQgc2V0dGluZ3MSOQo3GjUuc2NhbGVraXQudjEub3JnYW5pemF0aW9ucy5DcmVhdGVPcmdhbml6YXRpb25SZXNwb25zZYK1GAIYVILT5JMCJToMb3JnYW5pemF0aW9uIhUvYXBpL3YxL29yZ2FuaXphdGlvbnMSqgQKElVwZGF0ZU9yZ2FuaXphdGlvbhI0LnNjYWxla2l0LnYxLm9yZ2FuaXphdGlvbnMuVXBkYXRlT3JnYW5pemF0aW9uUmVxdWVzdBo1LnNjYWxla2l0LnYxLm9yZ2FuaXphdGlvbnMuVXBkYXRlT3JnYW5pemF0aW9uUmVzcG9uc2UipgOSQewCCg1Pcmdhbml6YXRpb25zEhtVcGRhdGUgT3JnYW5pemF0aW9uIGRldGFpbHMaoQFVcGRhdGVzIGFuIG9yZ2FuaXphdGlvbidzIGRpc3BsYXkgbmFtZSwgZXh0ZXJuYWwgSUQsIG9yIG1ldGFkYXRhLiBSZXF1aXJlcyBhIHZhbGlkIG9yZ2FuaXphdGlvbiBpZGVudGlmaWVyLiBSZWdpb24gY29kZSBjYW5ub3QgYmUgbW9kaWZpZWQgdGhyb3VnaCB0aGlzIGVuZHBvaW50LkqZAQoDMjAwEpEBClRSZXR1cm5zIHRoZSB1cGRhdGVkIG9yZ2FuaXphdGlvbiB3aXRoIGFsbCBjdXJyZW50IGRldGFpbHMgcmVmbGVjdGVkIGluIHRoZSByZXNwb25zZS4SOQo3GjUuc2NhbGVraXQudjEub3JnYW5pemF0aW9ucy5VcGRhdGVPcmdhbml6YXRpb25SZXNwb25zZYK1GAIYVILT5JMCKjoMb3JnYW5pemF0aW9uMhovYXBpL3YxL29yZ2FuaXphdGlvbnMve2lkfRLKAwoPR2V0T3JnYW5pemF0aW9uEjEuc2NhbGVraXQudjEub3JnYW5pemF0aW9ucy5HZXRPcmdhbml6YXRpb25SZXF1ZXN0GjIuc2NhbGVraXQudjEub3JnYW5pemF0aW9ucy5HZXRPcmdhbml6YXRpb25SZXNwb25zZSLPApJBowIKDU9yZ2FuaXphdGlvbnMSGEdldCBPcmdhbml6YXRpb24gZGV0YWlscxpdUmV0cmlldmVzIG9yZ2FuaXphdGlvbiBkZXRhaWxzIGJ5IFNjYWxla2l0IElELCBpbmNsdWRpbmcgbmFtZSwgcmVnaW9uLCBtZXRhZGF0YSwgYW5kIHNldHRpbmdzSpgBCgMyMDASkAEKVlJldHVybnMgdGhlIGNvbXBsZXRlIG9yZ2FuaXphdGlvbiBvYmplY3Qgd2l0aCBJRCwgZGlzcGxheSBuYW1lLCBzZXR0aW5ncywgYW5kIG1ldGFkYXRhEjYKNBoyLnNjYWxla2l0LnYxLm9yZ2FuaXphdGlvbnMuR2V0T3JnYW5pemF0aW9uUmVzcG9uc2WCtRgCGDSC0+STAhwSGi9hcGkvdjEvb3JnYW5pemF0aW9ucy97aWR9EsQEChBMaXN0T3JnYW5pemF0aW9uEjMuc2NhbGVraXQudjEub3JnYW5pemF0aW9ucy5MaXN0T3JnYW5pemF0aW9uc1JlcXVlc3QaNC5zY2FsZWtpdC52MS5vcmdhbml6YXRpb25zLkxpc3RPcmdhbml6YXRpb25zUmVzcG9uc2UixAOSQZ0DCg1Pcmdhbml6YXRpb25zEhJMaXN0IE9yZ2FuaXphdGlvbnMaoAFSZXRyaWV2ZSBhIHBhZ2luYXRlZCBsaXN0IG9mIG9yZ2FuaXphdGlvbnMgd2l0aGluIHlvdXIgZW52aXJvbm1lbnQuIFRoZSByZXNwb25zZSBpbmNsdWRlcyBhIGBwYWdlX3Rva2VuYCB0aGF0IGNhbiBiZSB1c2VkIHRvIGFjY2VzcyBzdWJzZXF1ZW50IHBhZ2VzIG9mIHJlc3VsdHMuIkMKJUxlYXJuIG1vcmUgYWJvdXQgb3JnYW5pemF0aW9uIGxpc3RpbmcSGmh0dHBzOi8vZG9jcy5zY2FsZWtpdC5jb20vSnMKAzIwMBJsCjBTdWNjZXNzZnVsbHkgcmV0cmlldmVkIHRoZSBsaXN0IG9mIG9yZ2FuaXphdGlvbnMSOAo2GjQuc2NhbGVraXQudjEub3JnYW5pemF0aW9ucy5MaXN0T3JnYW5pemF0aW9uc1Jlc3BvbnNlShsKAzQwMBIUChJJbnZhbGlkIHBhZ2UgdG9rZW6CtRgCGFSC0+STAhcSFS9hcGkvdjEvb3JnYW5pemF0aW9ucxLiBAoSU2VhcmNoT3JnYW5pemF0aW9uEjUuc2NhbGVraXQudjEub3JnYW5pemF0aW9ucy5TZWFyY2hPcmdhbml6YXRpb25zUmVxdWVzdBo2LnNjYWxla2l0LnYxLm9yZ2FuaXphdGlvbnMuU2VhcmNoT3JnYW5pemF0aW9uc1Jlc3BvbnNlItwDkkGuAwoNT3JnYW5pemF0aW9ucxIUU2VhcmNoIE9yZ2FuaXphdGlvbnMa1AFTZWFyY2hlcyBmb3Igb3JnYW5pemF0aW9ucyBpbiB5b3VyIGVudmlyb25tZW50IHVzaW5nIGEgcXVlcnkgc3RyaW5nLiBUaGUgcXVlcnkgbWF0Y2hlcyBhZ2FpbnN0IG9yZ2FuaXphdGlvbiBuYW1lLCBJRCwgb3IgZXh0ZXJuYWwgSUQuIFJldHVybnMgbXVsdGlwbGUgcmVzdWx0cyB3aGVuIG1vcmUgdGhhbiBvbmUgb3JnYW5pemF0aW9uIG1hdGNoZXMgdGhlIGNyaXRlcmlhLkqvAQoDMjAwEqcBCmlSZXR1cm5zIGEgbGlzdCBvZiBtYXRjaGluZyBvcmdhbml6YXRpb25zIGFuZCBhIHBhZ2UgdG9rZW4gZm9yIHBhZ2luYXRpb24gaWYgdGhlcmUgYXJlIGFkZGl0aW9uYWwgcmVzdWx0cy4SOgo4GjYuc2NhbGVraXQudjEub3JnYW5pemF0aW9ucy5TZWFyY2hPcmdhbml6YXRpb25zUmVzcG9uc2WCtRgCGFSC0+STAh4SHC9hcGkvdjEvb3JnYW5pemF0aW9uczpzZWFyY2gSzwIKEkRlbGV0ZU9yZ2FuaXphdGlvbhI0LnNjYWxla2l0LnYxLm9yZ2FuaXphdGlvbnMuRGVsZXRlT3JnYW5pemF0aW9uUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSLqAZJBvgEKDU9yZ2FuaXphdGlvbnMSFkRlbGV0ZSBhbiBPcmdhbml6YXRpb24aUFJlbW92ZSBhbiBleGlzdGluZyBvcmdhbml6YXRpb24gZnJvbSB0aGUgZW52aXJvbm1lbnQgdXNpbmcgaXRzIHVuaXF1ZSBpZGVudGlmaWVySkMKAzIwMBI8CjpPcmdhbml6YXRpb24gc3VjY2Vzc2Z1bGx5IGRlbGV0ZWQgYW5kIG5vIGxvbmdlciBhY2Nlc3NpYmxlgrUYAhhUgtPkkwIcKhovYXBpL3YxL29yZ2FuaXphdGlvbnMve2lkfRLPBAoSR2VuZXJhdGVQb3J0YWxMaW5rEjQuc2NhbGVraXQudjEub3JnYW5pemF0aW9ucy5HZW5lcmF0ZVBvcnRhbExpbmtSZXF1ZXN0GjUuc2NhbGVraXQudjEub3JnYW5pemF0aW9ucy5HZW5lcmF0ZVBvcnRhbExpbmtSZXNwb25zZSLLA5JBkgMKDU9yZ2FuaXphdGlvbnMSGkdlbmVyYXRlIEFkbWluIFBvcnRhbCBMaW5rGsIBQ3JlYXRlcyBhIHRpbWUtbGltaXRlZCBBZG1pbiBQb3J0YWwgVVJMIGZvciBJVCBhZG1pbmlzdHJhdG9ycyB0byBjb25maWd1cmUgYW5kIG1hbmFnZSBTaW5nbGUgU2lnbi1PbiAoU1NPKSBjb25uZWN0aW9ucyB3aXRoaW4gdGhlaXIgb3JnYW5pemF0aW9uLiBHZW5lcmF0ZWQgbGlua3MgZXhwaXJlIGFmdGVyIDcgZGF5cyAoMTY4IGhvdXJzKS5KnwEKAzIwMBKXAQpaQWRtaW4gUG9ydGFsIGxpbmsgZ2VuZXJhdGVkIHN1Y2Nlc3NmdWxseS4gUmV0dXJucyB0aGUgcG9ydGFsIFVSTCBhbmQgZXhwaXJhdGlvbiB0aW1lc3RhbXAuEjkKNxo1LnNjYWxla2l0LnYxLm9yZ2FuaXphdGlvbnMuR2VuZXJhdGVQb3J0YWxMaW5rUmVzcG9uc2WCtRgCGFSC0+STAikaJy9hcGkvdjEvb3JnYW5pemF0aW9ucy97aWR9L3BvcnRhbF9saW5rcxKgAgoQRGVsZXRlUG9ydGFsTGluaxIyLnNjYWxla2l0LnYxLm9yZ2FuaXphdGlvbnMuRGVsZXRlUG9ydGFsTGlua1JlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkivwGSQXgKDEFkbWluIFBvcnRhbBISRGVsZXRlIFBvcnRhbCBMaW5rGilSZXZva2VzIGFuZCBkZWxldGVzIGFuIEFkbWluIHBvcnRhbCBsaW5rLkopCgMyMDASIgogUG9ydGFsIGxpbmsgZGVsZXRlZCBzdWNjZXNzZnVsbHmCtRgCGFD60uSTAgkSB1BSRVZJRVeC0+STAikqJy9hcGkvdjEvb3JnYW5pemF0aW9ucy97aWR9L3BvcnRhbF9saW5rcxKfAgoURGVsZXRlUG9ydGFsTGlua0J5SUQSNi5zY2FsZWtpdC52MS5vcmdhbml6YXRpb25zLkRlbGV0ZVBvcnRhbExpbmtCeUlkUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSK2AZJBZQoMQWRtaW4gUG9ydGFsEhhEZWxldGUgQWRtaW4gUG9ydGFsIGxpbmsaKVJldm9rZXMgYW5kIGRlbGV0ZXMgYW4gQWRtaW4gcG9ydGFsIGxpbmsuShAKAzIwMBIJCgdTdWNjZXNzgrUYAhhU+tLkkwIJEgdQUkVWSUVXgtPkkwIzKjEvYXBpL3YxL29yZ2FuaXphdGlvbnMve2lkfS9wb3J0YWxfbGlua3Mve2xpbmtfaWR9EogDCg5HZXRQb3J0YWxMaW5rcxIvLnNjYWxla2l0LnYxLm9yZ2FuaXphdGlvbnMuR2V0UG9ydGFsTGlua1JlcXVlc3QaMS5zY2FsZWtpdC52MS5vcmdhbml6YXRpb25zLkdldFBvcnRhbExpbmtzUmVzcG9uc2UikQKSQckBCgxBZG1pbiBQb3J0YWwSD0dldCBQb3J0YWwgbGluaxpfUmV0dXJucyB0aGUgQWRtaW4gcG9ydGFsIGxpbmsgaWYgaXQgZXhpc3RzLiBVc2UgR2VuZXJhdGUgUG9ydGFsIGxpbmsgdG8gY3JlYXRlIGFuZCBmZXRjaCBhIGxpbmtKRwoDMjAwEkAKB1N1Y2Nlc3MSNQozGjEuc2NhbGVraXQudjEub3JnYW5pemF0aW9ucy5HZXRQb3J0YWxMaW5rc1Jlc3BvbnNlgrUYAhhQ+tLkkwIJEgdQUkVWSUVXgtPkkwIpEicvYXBpL3YxL29yZ2FuaXphdGlvbnMve2lkfS9wb3J0YWxfbGlua3MS+gYKGlVwZGF0ZU9yZ2FuaXphdGlvblNldHRpbmdzEjwuc2NhbGVraXQudjEub3JnYW5pemF0aW9ucy5VcGRhdGVPcmdhbml6YXRpb25TZXR0aW5nc1JlcXVlc3QaMi5zY2FsZWtpdC52MS5vcmdhbml6YXRpb25zLkdldE9yZ2FuaXphdGlvblJlc3BvbnNlIukFkkGqBQoNT3JnYW5pemF0aW9ucxIcVG9nZ2xlIE9yZ2FuaXphdGlvbiBzZXR0aW5ncxrTAVVwZGF0ZXMgY29uZmlndXJhdGlvbiBzZXR0aW5ncyBmb3IgYW4gb3JnYW5pemF0aW9uLiBTdXBwb3J0cyBtb2RpZnlpbmcgU1NPIGNvbmZpZ3VyYXRpb24sIGRpcmVjdG9yeSBzeW5jaHJvbml6YXRpb24gc2V0dGluZ3MsIGFuZCBzZXNzaW9uIHBhcmFtZXRlcnMuIFJlcXVpcmVzIG9yZ2FuaXphdGlvbiBJRCBhbmQgdGhlIHNwZWNpZmljIHNldHRpbmdzIHRvIHVwZGF0ZS5K4wEKAzIwMBLbAQqgAVJldHVybnMgdGhlIGNvbXBsZXRlIG9yZ2FuaXphdGlvbiBvYmplY3Qgd2l0aCB1cGRhdGVkIHNldHRpbmdzIGFwcGxpZWQuIENvbnRhaW5zIGFsbCBvcmdhbml6YXRpb24gZGV0YWlscyBpbmNsdWRpbmcgSUQsIGRpc3BsYXkgbmFtZSwgYW5kIHRoZSBtb2RpZmllZCBzZXR0aW5ncy4SNgo0GjIuc2NhbGVraXQudjEub3JnYW5pemF0aW9ucy5HZXRPcmdhbml6YXRpb25SZXNwb25zZUpwCgM0MDASaQpnSW52YWxpZCByZXF1ZXN0IC0gb2NjdXJzIHdoZW4gdGhlIHNldHRpbmdzIHBheWxvYWQgY29udGFpbnMgaW52YWxpZCB2YWx1ZXMgb3IgdW5zdXBwb3J0ZWQgY29uZmlndXJhdGlvbkpNCgM0MDQSRgpET3JnYW5pemF0aW9uIG5vdCBmb3VuZCAtIHRoZSBzcGVjaWZpZWQgb3JnYW5pemF0aW9uIElEIGRvZXNuJ3QgZXhpc3SCtRgCGFSC0+STAi86CHNldHRpbmdzMiMvYXBpL3YxL29yZ2FuaXphdGlvbnMve2lkfS9zZXR0aW5ncxL4AQohQ3JlYXRlT3JnYW5pemF0aW9uU2Vzc2lvblNldHRpbmdzEkMuc2NhbGVraXQudjEub3JnYW5pemF0aW9ucy5DcmVhdGVPcmdhbml6YXRpb25TZXNzaW9uU2V0dGluZ3NSZXF1ZXN0GkQuc2NhbGVraXQudjEub3JnYW5pemF0aW9ucy5DcmVhdGVPcmdhbml6YXRpb25TZXNzaW9uU2V0dGluZ3NSZXNwb25zZSJIgrUYAhhU+tLkkwIJEgdQUkVWSUVXgtPkkwItIisvYXBpL3YxL29yZ2FuaXphdGlvbnMve2lkfS9zZXNzaW9uLXNldHRpbmdzEowDCh5HZXRPcmdhbml6YXRpb25TZXNzaW9uU2V0dGluZ3MSQC5zY2FsZWtpdC52MS5vcmdhbml6YXRpb25zLkdldE9yZ2FuaXphdGlvblNlc3Npb25TZXR0aW5nc1JlcXVlc3QaQS5zY2FsZWtpdC52MS5vcmdhbml6YXRpb25zLkdldE9yZ2FuaXphdGlvblNlc3Npb25TZXR0aW5nc1Jlc3BvbnNlIuQBkkGYAQoNT3JnYW5pemF0aW9ucxIhR2V0IE9yZ2FuaXphdGlvbiBTZXNzaW9uIFNldHRpbmdzSmQKAzIwMBJdChRVcGRhdGVkIFN1Y2Nlc3NmdWxseRJFCkMaQS5zY2FsZWtpdC52MS5vcmdhbml6YXRpb25zLkdldE9yZ2FuaXphdGlvblNlc3Npb25TZXR0aW5nc1Jlc3BvbnNlgrUYAhhU+tLkkwIJEgdQUkVWSUVXgtPkkwItEisvYXBpL3YxL29yZ2FuaXphdGlvbnMve2lkfS9zZXNzaW9uLXNldHRpbmdzEooCCiFVcGRhdGVPcmdhbml6YXRpb25TZXNzaW9uU2V0dGluZ3MSQy5zY2FsZWtpdC52MS5vcmdhbml6YXRpb25zLlVwZGF0ZU9yZ2FuaXphdGlvblNlc3Npb25TZXR0aW5nc1JlcXVlc3QaRC5zY2FsZWtpdC52MS5vcmdhbml6YXRpb25zLlVwZGF0ZU9yZ2FuaXphdGlvblNlc3Npb25TZXR0aW5nc1Jlc3BvbnNlIlqCtRgCGFT60uSTAgkSB1BSRVZJRVeC0+STAj86EHNlc3Npb25fc2V0dGluZ3MyKy9hcGkvdjEvb3JnYW5pemF0aW9ucy97aWR9L3Nlc3Npb24tc2V0dGluZ3MSygEKIURlbGV0ZU9yZ2FuaXphdGlvblNlc3Npb25TZXR0aW5ncxJDLnNjYWxla2l0LnYxLm9yZ2FuaXphdGlvbnMuRGVsZXRlT3JnYW5pemF0aW9uU2Vzc2lvblNldHRpbmdzUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSJIgrUYAhhU+tLkkwIJEgdQUkVWSUVXgtPkkwItKisvYXBpL3YxL29yZ2FuaXphdGlvbnMve2lkfS9zZXNzaW9uLXNldHRpbmdzGliSQVUKDU9yZ2FuaXphdGlvbnMSRHt7aW1wb3J0ICJwcm90by9zY2FsZWtpdC92MS9vcmdhbml6YXRpb25zL29yZ2FuaXphdGlvbl9kZXRhaWxzLm1kIn19QoAgWjdnaXRodWIuY29tL3NjYWxla2l0LWluYy9zY2FsZWtpdC9wa2cvZ3JwYy9vcmdhbml6YXRpb25zkkHDHxKxFQoNU2NhbGVraXQgQVBJcxKiFCMgSW50cm9kdWN0aW9uCgpTY2FsZWtpdCBBUEkgaXMgKG1vc3RseSkgUkVTVGZ1bCBBUEkuIFNvIHlvdSBjYW4gdXNlIGFueSBIVFRQIGNsaWVudCB0byBtYWtlIHJlcXVlc3RzIHRvIHRoZSBBUEkuCgpUbyBnYWluIGFjY2VzcyB0byB0aGUgU2NhbGVraXQgQVBJLCBjcmVhdGUgYW4gYWNjb3VudCBvbiB0aGUgW1NjYWxla2l0IERhc2hib2FyZF0oaHR0cHM6Ly9hcHAuc2NhbGVraXQuY29tKS4gT25jZSB5b3UndmUgY29tcGxldGVkIHRoZSBzaWdudXAgcHJvY2VzcyBhbmQgYWNrbm93bGVkZ2VkIG91ciB0ZXJtcywgZ2V0IGEgX2Vudmlyb25tZW50XywgX2NsaWVudF9pZF8gYW5kIF9jbGllbnRfc2VjcmV0XyBmcm9tIHRoZSBbRGFzaGJvYXJkXShodHRwczovL2FwcC5zY2FsZWtpdC5jb20pLgoKLSBUaGUgU2NhbGVraXQgQVBJIGlzIHNlcnZlZCBvdmVyIEhUVFBTIFRMUyB2MS4yKyB0byBlbnN1cmUgZGF0YSBwcml2YWN5LgotIFNlZSB0aGUgW0Vycm9yIHJlZmVyZW5jZV0oL3JlZmVyZW5jZS9lcnJvcnMpIGluIGNhc2Ugb2YgZXJyb3JzLgoKIyMjIyBBUEkgaG9zdAoKYGBgCmh0dHBzOi8ve2Vudmlyb25tZW50fS5zY2FsZWtpdC5kZXYgKERldmVsb3BtZW50KQpodHRwczovL3tlbnZpcm9ubWVudH0uc2NhbGVraXQuY29tIChQcm9kdWN0aW9uKQpgYGAKClNjYWxla2l0IGhhcyB0d28gZW52aXJvbm1lbnRzOiBTYW5kYm94IGFuZCBQcm9kdWN0aW9uLiBJdGVtcyBjYW5ub3QgYmUgbW92ZWQgYmV0d2VlbiBlbnZpcm9ubWVudHMuCgojIyMjIEFQSSBBY2Nlc3MKClNjYWxla2l0IEFQSSB1c2VzIFtPQXV0aCAyLjAgQ2xpZW50IENyZWRlbnRpYWxzXShodHRwczovL3d3dy5vYXV0aC5jb20vb2F1dGgyLXNlcnZlcnMvYWNjZXNzLXRva2Vucy9jbGllbnQtY3JlZGVudGlhbHMpIGJhc2VkIGF1dGhlbnRpY2F0aW9uLgoKWW91IGNhbiBvYnRhaW4gYSBzZWN1cmUgdG9rZW4gYnkgbWFraW5nIFBPU1QgY2FsbCB0byB0aGUgYGh0dHBzOi8ve0VOVl9VUkx9L29hdXRoL3Rva2VuYCBlbmRwb2ludCBhbmQgc2VuZGluZyBjbGllbnRfaWQgYW5kIGNsaWVudF9zZWNyZXQgYXMgcGFydCBvZiB0aGUgcmVxdWVzdCBib2R5LgoKYGBgc2hlbGwKY3VybCBodHRwczovL3tFTlZfVVJMfS9vYXV0aC90b2tlbiBcCiAtWCBQT1NUIFwKIC1IICdDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcgXAogLWQgJ2NsaWVudF9pZD17Y2xpZW50X2lkfScgXAogLWQgJ2NsaWVudF9zZWNyZXQ9e2NsaWVudF9zZWNyZXR9JyBcCiAtZCAnZ3JhbnRfdHlwZT1jbGllbnRfY3JlZGVudGlhbHMnXApgYGAKCk9uIHN1Y2Nlc3MsIHlvdSdsbCByZWNlaXZlIGEgcmVzcG9uc2Ugd2l0aCBhbiBgYWNjZXNzX3Rva2VuYCBhbmQgYHJlZnJlc2hfdG9rZW5gLgoKYGBganNvbgp7CgkiYWNjZXNzX3Rva2VuIjogIkRDUkQxMC1lN2M1YzgxMzkxNjUyMjhhODJlNDQyNDQ1ZmUwMWMxNiIsCgkidG9rZW5fdHlwZSI6ICJiZWFyZXIiLAoJImV4cGlyZXNfaW4iOiAxNzk5Cn0KYGBgCgpUaGUgYWNjZXNzX3Rva2VuIGlzIHRoZSBPQXV0aCBhY2Nlc3MgdG9rZW4geW91IG5lZWQgdG8gdXNlIGZvciBhbGwgc3Vic2VxdWVudCBBUEkgY2FsbHMgdG8gU2NhbGVraXQuCgpUbyBtYWtlIGEgcmVxdWVzdCB0byBvbmUgb2Ygb3VyIEFQSXMsIHlvdSBuZWVkIHRvIGluY2x1ZGUgdGhlIGFjY2VzcyB0b2tlbiBpbiB0aGUgQXV0aG9yaXphdGlvbiBoZWFkZXIgb2YgdGhlIHJlcXVlc3QgYXMgQmVhcmVyICdhY2Nlc3NfdG9rZW4nIGxpa2UgdGhlIGZvbGxvd2luZyBleGFtcGxlIHNob3dzOgoKYGBgc2hlbGwKJCBjdXJsIC0tcmVxdWVzdCBHRVQgImh0dHBzOi8ve0VOVl9VUkx9L2FwaS92MS9vcmdhbml6YXRpb25zIiBcCi1IICJDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24iIFwKLUggIkF1dGhvcml6YXRpb246IEJlYXJlciB7YWNjZXNzX3Rva2VufSIKYGBgCgpPdXIgU0RLcyB3aWxsIGF1dG9tYXRpY2FsbHkgaGFuZGxlIHRoZSBBUEkgYXV0aGVudGljYXRpb24gYW5kIGVycm9yIGhhbmRsaW5nIHRvIG1ha2UgdGhlIGpvYiBvZiB1c2luZyBvdXIgQVBJcyBtdWNoIGVhc2llciBmb3IgeW91LiBTZWUgdGhlIFtTREtzXSgvZG9jcy9zZGtzKSBzZWN0aW9uIGZvciBtb3JlIGluZm9ybWF0aW9uLgoKIyBFcnJvciBIYW5kbGluZwoKT3VyIEFQSXMgdXNlIHN0YW5kYXJkIEhUVFAgc3RhdHVzIGNvZGVzOgoKLSAyMDAvMjAxOiBTdWNjZXNzCi0gNDAwOiBJbnZhbGlkIHJlcXVlc3QKLSA0MDE6IEF1dGhlbnRpY2F0aW9uIGVycm9yCi0gNDA0OiBSZXNvdXJjZSBub3QgZm91bmQKLSA0Mjk6IFJhdGUgbGltaXQgZXhjZWVkZWQKLSA1MDAvNTAxLzUwNDogU2VydmVyIGVycm9yCgpFcnJvciByZXNwb25zZXMgaW5jbHVkZSBkZXRhaWxlZCBtZXNzYWdlcywgZm9yIGV4YW1wbGU6CgpgYGBqc29uCnsKCSJjb2RlIjogMTYsCgkibWVzc2FnZSI6ICJUb2tlbiBlbXB0eSIsCgkiZGV0YWlscyI6IFsKCQl7CgkJCSJAdHlwZSI6ICJ0eXBlLmdvb2dsZWFwaXMuY29tL3NjYWxla2l0LnYxLmVycmRldGFpbHMuRXJyb3JJbmZvIiwKCQkJImVycm9yX2NvZGUiOiAiVU5BVVRIRU5USUNBVEVEIgoJCX0KCV0KfQpgYGAKIjoKDFNjYWxla2l0IEluYxIUaHR0cHM6Ly9zY2FsZWtpdC5jb20aFHN1cHBvcnRAc2NhbGVraXQuY29tKjgKCkFwYWNoZSAyLjASKmh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMDIFMS4wLjAaCCRFTlZfVVJMKgECMhBhcHBsaWNhdGlvbi9qc29uOhBhcHBsaWNhdGlvbi9qc29uWqIBCg8KCUJhc2ljQXV0aBICCAEKjgEKBk9BdXRoMhKDAQgDKAQyH2h0dHA6Ly8kRU5WX1VSTC9vYXV0aC9hdXRob3JpemU6G2h0dHA6Ly8kRU5WX1VSTC9vYXV0aC90b2tlbkI/Cj0KDm9mZmxpbmVfYWNjZXNzEitHcmFudHMgYSByZWZyZXNoIHRva2VuIHdpdGggYWJzb2x1dGUgZXhwaXJ5ag8KDU9yZ2FuaXphdGlvbnNq/gEKBVVzZXJzEvQBVXNlciBtYW5hZ2VtZW50IGVuZHBvaW50cyBmb3IgaW5kaXZpZHVhbCBhY2NvdW50cyB3aXRoaW4gdGhlIG9yZ2FuaXphdGlvbi4gVGhlc2UgZW5kcG9pbnRzIGFsbG93IGZvciBjcmVhdGluZywgcmVhZGluZywgdXBkYXRpbmcsIGFuZCBkZWxldGluZyB1c2VyIGFjY291bnRzLCBhcyB3ZWxsIGFzIG1hbmFnaW5nIHVzZXIgcm9sZXMgYW5kIHBlcm1pc3Npb25zIGZvciBhY2Nlc3Npbmcgb3JnYW5pemF0aW9uYWwgcmVzb3VyY2VzLmrDAgoJRGlyZWN0b3J5ErUCVGhlIERpcmVjdG9yeSBBUEkgbGV0cyB5b3UgY29ubmVjdCBleHRlcm5hbCBpZGVudGl0eSBwcm92aWRlcnMgdG8geW91ciBvcmdhbml6YXRpb25zLiBVc2UgdGhlc2UgZW5kcG9pbnRzIHRvIHZpZXcgdXNlcnMgYW5kIGdyb3VwcywgZW5hYmxlIG9yIGRpc2FibGUgZGlyZWN0b3J5IGNvbm5lY3Rpb25zLCBhbmQgY29uZmlndXJlIGFjY2VzcyBzZXR0aW5ncy4gU3VwcG9ydHMgaWRlbnRpdHkgc3lzdGVtcyBsaWtlIE9rdGEsIE1pY3Jvc29mdCBFbnRyYSBJRCwgYW5kIEdvb2dsZSBXb3Jrc3BhY2UgdGhyb3VnaCBzdGFuZGFyZCBwcm90b2NvbHMuak8KC0Nvbm5lY3Rpb25zEkB7e2ltcG9ydCAicHJvdG8vc2NhbGVraXQvdjEvY29ubmVjdGlvbnMvY29ubmVjdGlvbl9kZXRhaWxzLm1kIn19avYBCg5DbGllbnQgQ29uZmlncxLjAUVuZHBvaW50cyBmb3IgbWFuYWdpbmcgY2xpZW50IGFwcGxpY2F0aW9uIGNvbmZpZ3VyYXRpb25zLiBSZWdpc3RlcmVkIGNsaWVudCBhcHBsaWNhdGlvbnMgY2FuIHVzZSB0aGVzZSBlbmRwb2ludHMgdG8gcmV0cmlldmUgYW5kIG1vZGlmeSB0aGVpciBjb25maWd1cmF0aW9uIHNldHRpbmdzLCBpbmNsdWRpbmcgcmVkaXJlY3QgVVJJcyBhbmQgb3RoZXIgY2xpZW50LXNwZWNpZmljIHBhcmFtZXRlcnMuamgKBVJvbGVzEl9FbmRwb2ludHMgZm9yIG1hbmFnaW5nIHJvbGVzIGFuZCBwZXJtaXNzaW9ucyBmb3IgdXNlcnMgYW5kIG9yZ2FuaXphdGlvbnMuIE1vcmUgQVBJcyBjb21pbmcgc29vbnIrCg1TY2FsZWtpdCBEb2NzEhpodHRwczovL2RvY3Muc2NhbGVraXQuY29tL2IGcHJvdG8z", [file_buf_validate_validate, file_google_api_annotations, file_google_api_field_behavior, file_google_api_visibility, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_protobuf_wrappers, file_protoc_gen_openapiv2_options_annotations, file_scalekit_v1_commons_commons, file_scalekit_v1_options_options]);

/**
 * @generated from message scalekit.v1.organizations.CreateOrganizationRequest
 */
export type CreateOrganizationRequest = Message<"scalekit.v1.organizations.CreateOrganizationRequest"> & {
  /**
   * Organization details
   *
   * @generated from field: scalekit.v1.organizations.CreateOrganization organization = 1;
   */
  organization?: CreateOrganization;
};

/**
 * Describes the message scalekit.v1.organizations.CreateOrganizationRequest.
 * Use `create(CreateOrganizationRequestSchema)` to create a new message.
 */
export const CreateOrganizationRequestSchema: GenMessage<CreateOrganizationRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 0);

/**
 * @generated from message scalekit.v1.organizations.CreateOrganizationResponse
 */
export type CreateOrganizationResponse = Message<"scalekit.v1.organizations.CreateOrganizationResponse"> & {
  /**
   * @generated from field: scalekit.v1.organizations.Organization organization = 1;
   */
  organization?: Organization;
};

/**
 * Describes the message scalekit.v1.organizations.CreateOrganizationResponse.
 * Use `create(CreateOrganizationResponseSchema)` to create a new message.
 */
export const CreateOrganizationResponseSchema: GenMessage<CreateOrganizationResponse> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 1);

/**
 * @generated from message scalekit.v1.organizations.CreateOrganization
 */
export type CreateOrganization = Message<"scalekit.v1.organizations.CreateOrganization"> & {
  /**
   * @generated from field: string display_name = 4;
   */
  displayName: string;

  /**
   * @generated from field: scalekit.v1.commons.RegionCode region_code = 5;
   */
  regionCode: RegionCode;

  /**
   * @generated from field: optional string external_id = 6;
   */
  externalId?: string;

  /**
   * @generated from field: map<string, string> metadata = 7;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message scalekit.v1.organizations.CreateOrganization.
 * Use `create(CreateOrganizationSchema)` to create a new message.
 */
export const CreateOrganizationSchema: GenMessage<CreateOrganization> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 2);

/**
 * @generated from message scalekit.v1.organizations.Organization
 */
export type Organization = Message<"scalekit.v1.organizations.Organization"> & {
  /**
   * Id
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Created Time
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Updated time
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Name of the org to be used in display
   *
   * @generated from field: string display_name = 4;
   */
  displayName: string;

  /**
   * Optional regioncode
   *
   * @generated from field: scalekit.v1.commons.RegionCode region_code = 5;
   */
  regionCode: RegionCode;

  /**
   * External Id is useful to store a unique identifier for a given Org that. The unique Identifier can be the id of your tenant / org in your SaaSApp
   *
   * @generated from field: optional string external_id = 6;
   */
  externalId?: string;

  /**
   * Key value pairs extension attributes.
   *
   * @generated from field: map<string, string> metadata = 7;
   */
  metadata: { [key: string]: string };

  /**
   * Organization Settings
   *
   * @generated from field: scalekit.v1.organizations.OrganizationSettings settings = 8;
   */
  settings?: OrganizationSettings;
};

/**
 * Describes the message scalekit.v1.organizations.Organization.
 * Use `create(OrganizationSchema)` to create a new message.
 */
export const OrganizationSchema: GenMessage<Organization> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 3);

/**
 * @generated from message scalekit.v1.organizations.UpdateOrganizationRequest
 */
export type UpdateOrganizationRequest = Message<"scalekit.v1.organizations.UpdateOrganizationRequest"> & {
  /**
   * @generated from oneof scalekit.v1.organizations.UpdateOrganizationRequest.identities
   */
  identities: {
    /**
     * @generated from field: string id = 1;
     */
    value: string;
    case: "id";
  } | {
    /**
     * @generated from field: string external_id = 2;
     */
    value: string;
    case: "externalId";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: scalekit.v1.organizations.UpdateOrganization organization = 3;
   */
  organization?: UpdateOrganization;

  /**
   * @generated from field: google.protobuf.FieldMask update_mask = 99;
   */
  updateMask?: FieldMask;
};

/**
 * Describes the message scalekit.v1.organizations.UpdateOrganizationRequest.
 * Use `create(UpdateOrganizationRequestSchema)` to create a new message.
 */
export const UpdateOrganizationRequestSchema: GenMessage<UpdateOrganizationRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 4);

/**
 * For update messages ensure the indexes are same as the base model itself.
 *
 * @generated from message scalekit.v1.organizations.UpdateOrganization
 */
export type UpdateOrganization = Message<"scalekit.v1.organizations.UpdateOrganization"> & {
  /**
   * @generated from field: optional string display_name = 4;
   */
  displayName?: string;

  /**
   * @generated from field: optional string external_id = 6;
   */
  externalId?: string;

  /**
   * @generated from field: map<string, string> metadata = 7;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message scalekit.v1.organizations.UpdateOrganization.
 * Use `create(UpdateOrganizationSchema)` to create a new message.
 */
export const UpdateOrganizationSchema: GenMessage<UpdateOrganization> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 5);

/**
 * @generated from message scalekit.v1.organizations.UpdateOrganizationResponse
 */
export type UpdateOrganizationResponse = Message<"scalekit.v1.organizations.UpdateOrganizationResponse"> & {
  /**
   * @generated from field: scalekit.v1.organizations.Organization organization = 1;
   */
  organization?: Organization;
};

/**
 * Describes the message scalekit.v1.organizations.UpdateOrganizationResponse.
 * Use `create(UpdateOrganizationResponseSchema)` to create a new message.
 */
export const UpdateOrganizationResponseSchema: GenMessage<UpdateOrganizationResponse> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 6);

/**
 * @generated from message scalekit.v1.organizations.GetOrganizationRequest
 */
export type GetOrganizationRequest = Message<"scalekit.v1.organizations.GetOrganizationRequest"> & {
  /**
   * @generated from oneof scalekit.v1.organizations.GetOrganizationRequest.identities
   */
  identities: {
    /**
     * @generated from field: string id = 1;
     */
    value: string;
    case: "id";
  } | {
    /**
     * @generated from field: string external_id = 2;
     */
    value: string;
    case: "externalId";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message scalekit.v1.organizations.GetOrganizationRequest.
 * Use `create(GetOrganizationRequestSchema)` to create a new message.
 */
export const GetOrganizationRequestSchema: GenMessage<GetOrganizationRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 7);

/**
 * @generated from message scalekit.v1.organizations.GetOrganizationResponse
 */
export type GetOrganizationResponse = Message<"scalekit.v1.organizations.GetOrganizationResponse"> & {
  /**
   * @generated from field: scalekit.v1.organizations.Organization organization = 1;
   */
  organization?: Organization;
};

/**
 * Describes the message scalekit.v1.organizations.GetOrganizationResponse.
 * Use `create(GetOrganizationResponseSchema)` to create a new message.
 */
export const GetOrganizationResponseSchema: GenMessage<GetOrganizationResponse> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 8);

/**
 * @generated from message scalekit.v1.organizations.ListOrganizationsRequest
 */
export type ListOrganizationsRequest = Message<"scalekit.v1.organizations.ListOrganizationsRequest"> & {
  /**
   * @generated from field: uint32 page_size = 1;
   */
  pageSize: number;

  /**
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * @generated from field: optional string external_id = 3;
   */
  externalId?: string;
};

/**
 * Describes the message scalekit.v1.organizations.ListOrganizationsRequest.
 * Use `create(ListOrganizationsRequestSchema)` to create a new message.
 */
export const ListOrganizationsRequestSchema: GenMessage<ListOrganizationsRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 9);

/**
 * @generated from message scalekit.v1.organizations.ListOrganizationsResponse
 */
export type ListOrganizationsResponse = Message<"scalekit.v1.organizations.ListOrganizationsResponse"> & {
  /**
   * @generated from field: string next_page_token = 1;
   */
  nextPageToken: string;

  /**
   * @generated from field: uint32 total_size = 2;
   */
  totalSize: number;

  /**
   * @generated from field: repeated scalekit.v1.organizations.Organization organizations = 3;
   */
  organizations: Organization[];

  /**
   * @generated from field: string prev_page_token = 4;
   */
  prevPageToken: string;
};

/**
 * Describes the message scalekit.v1.organizations.ListOrganizationsResponse.
 * Use `create(ListOrganizationsResponseSchema)` to create a new message.
 */
export const ListOrganizationsResponseSchema: GenMessage<ListOrganizationsResponse> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 10);

/**
 * @generated from message scalekit.v1.organizations.SearchOrganizationsRequest
 */
export type SearchOrganizationsRequest = Message<"scalekit.v1.organizations.SearchOrganizationsRequest"> & {
  /**
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * @generated from field: uint32 page_size = 2;
   */
  pageSize: number;

  /**
   * @generated from field: string page_token = 3;
   */
  pageToken: string;
};

/**
 * Describes the message scalekit.v1.organizations.SearchOrganizationsRequest.
 * Use `create(SearchOrganizationsRequestSchema)` to create a new message.
 */
export const SearchOrganizationsRequestSchema: GenMessage<SearchOrganizationsRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 11);

/**
 * @generated from message scalekit.v1.organizations.SearchOrganizationsResponse
 */
export type SearchOrganizationsResponse = Message<"scalekit.v1.organizations.SearchOrganizationsResponse"> & {
  /**
   * @generated from field: string next_page_token = 1;
   */
  nextPageToken: string;

  /**
   * @generated from field: uint32 total_size = 2;
   */
  totalSize: number;

  /**
   * @generated from field: repeated scalekit.v1.organizations.Organization organizations = 3;
   */
  organizations: Organization[];

  /**
   * @generated from field: string prev_page_token = 4;
   */
  prevPageToken: string;
};

/**
 * Describes the message scalekit.v1.organizations.SearchOrganizationsResponse.
 * Use `create(SearchOrganizationsResponseSchema)` to create a new message.
 */
export const SearchOrganizationsResponseSchema: GenMessage<SearchOrganizationsResponse> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 12);

/**
 * @generated from message scalekit.v1.organizations.DeleteOrganizationRequest
 */
export type DeleteOrganizationRequest = Message<"scalekit.v1.organizations.DeleteOrganizationRequest"> & {
  /**
   * @generated from oneof scalekit.v1.organizations.DeleteOrganizationRequest.identities
   */
  identities: {
    /**
     * @generated from field: string id = 1;
     */
    value: string;
    case: "id";
  } | {
    /**
     * @generated from field: string external_id = 2;
     */
    value: string;
    case: "externalId";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message scalekit.v1.organizations.DeleteOrganizationRequest.
 * Use `create(DeleteOrganizationRequestSchema)` to create a new message.
 */
export const DeleteOrganizationRequestSchema: GenMessage<DeleteOrganizationRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 13);

/**
 * @generated from message scalekit.v1.organizations.GeneratePortalLinkRequest
 */
export type GeneratePortalLinkRequest = Message<"scalekit.v1.organizations.GeneratePortalLinkRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Deprecated: Use features
   *
   * @generated from field: optional bool sso = 2 [deprecated = true];
   * @deprecated
   */
  sso?: boolean;

  /**
   * Deprecated: Use features
   *
   * @generated from field: optional bool directory_sync = 3 [deprecated = true];
   * @deprecated
   */
  directorySync?: boolean;

  /**
   * @generated from field: repeated scalekit.v1.organizations.Feature features = 4;
   */
  features: Feature[];
};

/**
 * Describes the message scalekit.v1.organizations.GeneratePortalLinkRequest.
 * Use `create(GeneratePortalLinkRequestSchema)` to create a new message.
 */
export const GeneratePortalLinkRequestSchema: GenMessage<GeneratePortalLinkRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 14);

/**
 * @generated from message scalekit.v1.organizations.GetPortalLinkRequest
 */
export type GetPortalLinkRequest = Message<"scalekit.v1.organizations.GetPortalLinkRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message scalekit.v1.organizations.GetPortalLinkRequest.
 * Use `create(GetPortalLinkRequestSchema)` to create a new message.
 */
export const GetPortalLinkRequestSchema: GenMessage<GetPortalLinkRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 15);

/**
 * @generated from message scalekit.v1.organizations.DeletePortalLinkRequest
 */
export type DeletePortalLinkRequest = Message<"scalekit.v1.organizations.DeletePortalLinkRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message scalekit.v1.organizations.DeletePortalLinkRequest.
 * Use `create(DeletePortalLinkRequestSchema)` to create a new message.
 */
export const DeletePortalLinkRequestSchema: GenMessage<DeletePortalLinkRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 16);

/**
 * @generated from message scalekit.v1.organizations.DeletePortalLinkByIdRequest
 */
export type DeletePortalLinkByIdRequest = Message<"scalekit.v1.organizations.DeletePortalLinkByIdRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string link_id = 2;
   */
  linkId: string;
};

/**
 * Describes the message scalekit.v1.organizations.DeletePortalLinkByIdRequest.
 * Use `create(DeletePortalLinkByIdRequestSchema)` to create a new message.
 */
export const DeletePortalLinkByIdRequestSchema: GenMessage<DeletePortalLinkByIdRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 17);

/**
 * @generated from message scalekit.v1.organizations.Link
 */
export type Link = Message<"scalekit.v1.organizations.Link"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string location = 2;
   */
  location: string;

  /**
   * @generated from field: google.protobuf.Timestamp expire_time = 3;
   */
  expireTime?: Timestamp;
};

/**
 * Describes the message scalekit.v1.organizations.Link.
 * Use `create(LinkSchema)` to create a new message.
 */
export const LinkSchema: GenMessage<Link> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 18);

/**
 * @generated from message scalekit.v1.organizations.GeneratePortalLinkResponse
 */
export type GeneratePortalLinkResponse = Message<"scalekit.v1.organizations.GeneratePortalLinkResponse"> & {
  /**
   * @generated from field: scalekit.v1.organizations.Link link = 1;
   */
  link?: Link;
};

/**
 * Describes the message scalekit.v1.organizations.GeneratePortalLinkResponse.
 * Use `create(GeneratePortalLinkResponseSchema)` to create a new message.
 */
export const GeneratePortalLinkResponseSchema: GenMessage<GeneratePortalLinkResponse> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 19);

/**
 * @generated from message scalekit.v1.organizations.GetPortalLinksResponse
 */
export type GetPortalLinksResponse = Message<"scalekit.v1.organizations.GetPortalLinksResponse"> & {
  /**
   * @generated from field: repeated scalekit.v1.organizations.Link links = 1;
   */
  links: Link[];
};

/**
 * Describes the message scalekit.v1.organizations.GetPortalLinksResponse.
 * Use `create(GetPortalLinksResponseSchema)` to create a new message.
 */
export const GetPortalLinksResponseSchema: GenMessage<GetPortalLinksResponse> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 20);

/**
 * @generated from message scalekit.v1.organizations.UpdateOrganizationSettingsRequest
 */
export type UpdateOrganizationSettingsRequest = Message<"scalekit.v1.organizations.UpdateOrganizationSettingsRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: scalekit.v1.organizations.OrganizationSettings settings = 2;
   */
  settings?: OrganizationSettings;
};

/**
 * Describes the message scalekit.v1.organizations.UpdateOrganizationSettingsRequest.
 * Use `create(UpdateOrganizationSettingsRequestSchema)` to create a new message.
 */
export const UpdateOrganizationSettingsRequestSchema: GenMessage<UpdateOrganizationSettingsRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 21);

/**
 * @generated from message scalekit.v1.organizations.UpdateOrganizationSessionSettingsRequest
 */
export type UpdateOrganizationSessionSettingsRequest = Message<"scalekit.v1.organizations.UpdateOrganizationSessionSettingsRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string environment_id = 2;
   */
  environmentId: string;

  /**
   * @generated from field: scalekit.v1.organizations.OrganizationSessionSettings session_settings = 3;
   */
  sessionSettings?: OrganizationSessionSettings;
};

/**
 * Describes the message scalekit.v1.organizations.UpdateOrganizationSessionSettingsRequest.
 * Use `create(UpdateOrganizationSessionSettingsRequestSchema)` to create a new message.
 */
export const UpdateOrganizationSessionSettingsRequestSchema: GenMessage<UpdateOrganizationSessionSettingsRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 22);

/**
 * @generated from message scalekit.v1.organizations.UpdateOrganizationSessionSettingsResponse
 */
export type UpdateOrganizationSessionSettingsResponse = Message<"scalekit.v1.organizations.UpdateOrganizationSessionSettingsResponse"> & {
  /**
   * @generated from field: string environment_id = 1;
   */
  environmentId: string;

  /**
   * @generated from field: string organization_id = 2;
   */
  organizationId: string;

  /**
   * @generated from field: scalekit.v1.organizations.OrganizationSessionSettings session_settings = 3;
   */
  sessionSettings?: OrganizationSessionSettings;
};

/**
 * Describes the message scalekit.v1.organizations.UpdateOrganizationSessionSettingsResponse.
 * Use `create(UpdateOrganizationSessionSettingsResponseSchema)` to create a new message.
 */
export const UpdateOrganizationSessionSettingsResponseSchema: GenMessage<UpdateOrganizationSessionSettingsResponse> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 23);

/**
 * @generated from message scalekit.v1.organizations.OrganizationSessionSettings
 */
export type OrganizationSessionSettings = Message<"scalekit.v1.organizations.OrganizationSessionSettings"> & {
  /**
   * @generated from field: google.protobuf.Int32Value absolute_session_timeout = 1;
   */
  absoluteSessionTimeout?: number;

  /**
   * @generated from field: google.protobuf.BoolValue session_management_enabled = 2;
   */
  sessionManagementEnabled?: boolean;

  /**
   * @generated from field: google.protobuf.Int32Value idle_session_timeout = 3;
   */
  idleSessionTimeout?: number;

  /**
   * @generated from field: google.protobuf.BoolValue idle_session_enabled = 4;
   */
  idleSessionEnabled?: boolean;
};

/**
 * Describes the message scalekit.v1.organizations.OrganizationSessionSettings.
 * Use `create(OrganizationSessionSettingsSchema)` to create a new message.
 */
export const OrganizationSessionSettingsSchema: GenMessage<OrganizationSessionSettings> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 24);

/**
 * @generated from message scalekit.v1.organizations.GetOrganizationSessionSettingsRequest
 */
export type GetOrganizationSessionSettingsRequest = Message<"scalekit.v1.organizations.GetOrganizationSessionSettingsRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string environment_id = 2;
   */
  environmentId: string;
};

/**
 * Describes the message scalekit.v1.organizations.GetOrganizationSessionSettingsRequest.
 * Use `create(GetOrganizationSessionSettingsRequestSchema)` to create a new message.
 */
export const GetOrganizationSessionSettingsRequestSchema: GenMessage<GetOrganizationSessionSettingsRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 25);

/**
 * @generated from message scalekit.v1.organizations.CreateOrganizationSessionSettingsRequest
 */
export type CreateOrganizationSessionSettingsRequest = Message<"scalekit.v1.organizations.CreateOrganizationSessionSettingsRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string environment_id = 2;
   */
  environmentId: string;
};

/**
 * Describes the message scalekit.v1.organizations.CreateOrganizationSessionSettingsRequest.
 * Use `create(CreateOrganizationSessionSettingsRequestSchema)` to create a new message.
 */
export const CreateOrganizationSessionSettingsRequestSchema: GenMessage<CreateOrganizationSessionSettingsRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 26);

/**
 * @generated from message scalekit.v1.organizations.CreateOrganizationSessionSettingsResponse
 */
export type CreateOrganizationSessionSettingsResponse = Message<"scalekit.v1.organizations.CreateOrganizationSessionSettingsResponse"> & {
  /**
   * @generated from field: string environment_id = 1;
   */
  environmentId: string;

  /**
   * @generated from field: string organization_id = 2;
   */
  organizationId: string;

  /**
   * @generated from field: scalekit.v1.organizations.OrganizationSessionSettings session_settings = 3;
   */
  sessionSettings?: OrganizationSessionSettings;
};

/**
 * Describes the message scalekit.v1.organizations.CreateOrganizationSessionSettingsResponse.
 * Use `create(CreateOrganizationSessionSettingsResponseSchema)` to create a new message.
 */
export const CreateOrganizationSessionSettingsResponseSchema: GenMessage<CreateOrganizationSessionSettingsResponse> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 27);

/**
 * @generated from message scalekit.v1.organizations.GetOrganizationSessionSettingsResponse
 */
export type GetOrganizationSessionSettingsResponse = Message<"scalekit.v1.organizations.GetOrganizationSessionSettingsResponse"> & {
  /**
   * @generated from field: string environment_id = 1;
   */
  environmentId: string;

  /**
   * @generated from field: string organization_id = 2;
   */
  organizationId: string;

  /**
   * @generated from field: scalekit.v1.organizations.OrganizationSessionSettings session_settings = 3;
   */
  sessionSettings?: OrganizationSessionSettings;
};

/**
 * Describes the message scalekit.v1.organizations.GetOrganizationSessionSettingsResponse.
 * Use `create(GetOrganizationSessionSettingsResponseSchema)` to create a new message.
 */
export const GetOrganizationSessionSettingsResponseSchema: GenMessage<GetOrganizationSessionSettingsResponse> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 28);

/**
 * @generated from message scalekit.v1.organizations.DeleteOrganizationSessionSettingsRequest
 */
export type DeleteOrganizationSessionSettingsRequest = Message<"scalekit.v1.organizations.DeleteOrganizationSessionSettingsRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string environment_id = 2;
   */
  environmentId: string;
};

/**
 * Describes the message scalekit.v1.organizations.DeleteOrganizationSessionSettingsRequest.
 * Use `create(DeleteOrganizationSessionSettingsRequestSchema)` to create a new message.
 */
export const DeleteOrganizationSessionSettingsRequestSchema: GenMessage<DeleteOrganizationSessionSettingsRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 29);

/**
 * @generated from message scalekit.v1.organizations.OrganizationSettings
 */
export type OrganizationSettings = Message<"scalekit.v1.organizations.OrganizationSettings"> & {
  /**
   * @generated from field: repeated scalekit.v1.organizations.OrganizationSettingsFeature features = 1;
   */
  features: OrganizationSettingsFeature[];
};

/**
 * Describes the message scalekit.v1.organizations.OrganizationSettings.
 * Use `create(OrganizationSettingsSchema)` to create a new message.
 */
export const OrganizationSettingsSchema: GenMessage<OrganizationSettings> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 30);

/**
 * @generated from message scalekit.v1.organizations.OrganizationSettingsFeature
 */
export type OrganizationSettingsFeature = Message<"scalekit.v1.organizations.OrganizationSettingsFeature"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: bool enabled = 2;
   */
  enabled: boolean;
};

/**
 * Describes the message scalekit.v1.organizations.OrganizationSettingsFeature.
 * Use `create(OrganizationSettingsFeatureSchema)` to create a new message.
 */
export const OrganizationSettingsFeatureSchema: GenMessage<OrganizationSettingsFeature> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_organizations_organizations, 31);

/**
 * Feature represents the available features that can be enabled for an organization's portal link
 *
 * @generated from enum scalekit.v1.organizations.Feature
 */
export enum Feature {
  /**
   * UNSPECIFIED represents an unset or invalid feature value
   *
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * dir_sync enables directory synchronization configuration in the portal
   *
   * @generated from enum value: dir_sync = 1;
   */
  dir_sync = 1,

  /**
   * sso enables Single Sign-On (SSO) configuration in the portal
   *
   * @generated from enum value: sso = 2;
   */
  sso = 2,
}

/**
 * Describes the enum scalekit.v1.organizations.Feature.
 */
export const FeatureSchema: GenEnum<Feature> = /*@__PURE__*/
  enumDesc(file_scalekit_v1_organizations_organizations, 0);

/**
 * @generated from service scalekit.v1.organizations.OrganizationService
 */
export const OrganizationService: GenService<{
  /**
   * Create Organization
   *
   * @generated from rpc scalekit.v1.organizations.OrganizationService.CreateOrganization
   */
  createOrganization: {
    methodKind: "unary";
    input: typeof CreateOrganizationRequestSchema;
    output: typeof CreateOrganizationResponseSchema;
  },
  /**
   * @generated from rpc scalekit.v1.organizations.OrganizationService.UpdateOrganization
   */
  updateOrganization: {
    methodKind: "unary";
    input: typeof UpdateOrganizationRequestSchema;
    output: typeof UpdateOrganizationResponseSchema;
  },
  /**
   * @generated from rpc scalekit.v1.organizations.OrganizationService.GetOrganization
   */
  getOrganization: {
    methodKind: "unary";
    input: typeof GetOrganizationRequestSchema;
    output: typeof GetOrganizationResponseSchema;
  },
  /**
   * @generated from rpc scalekit.v1.organizations.OrganizationService.ListOrganization
   */
  listOrganization: {
    methodKind: "unary";
    input: typeof ListOrganizationsRequestSchema;
    output: typeof ListOrganizationsResponseSchema;
  },
  /**
   * @generated from rpc scalekit.v1.organizations.OrganizationService.SearchOrganization
   */
  searchOrganization: {
    methodKind: "unary";
    input: typeof SearchOrganizationsRequestSchema;
    output: typeof SearchOrganizationsResponseSchema;
  },
  /**
   * Delete an Organization
   *
   * @generated from rpc scalekit.v1.organizations.OrganizationService.DeleteOrganization
   */
  deleteOrganization: {
    methodKind: "unary";
    input: typeof DeleteOrganizationRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * Generate Portal Link for Org
   *
   * @generated from rpc scalekit.v1.organizations.OrganizationService.GeneratePortalLink
   */
  generatePortalLink: {
    methodKind: "unary";
    input: typeof GeneratePortalLinkRequestSchema;
    output: typeof GeneratePortalLinkResponseSchema;
  },
  /**
   * @generated from rpc scalekit.v1.organizations.OrganizationService.DeletePortalLink
   */
  deletePortalLink: {
    methodKind: "unary";
    input: typeof DeletePortalLinkRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc scalekit.v1.organizations.OrganizationService.DeletePortalLinkByID
   */
  deletePortalLinkByID: {
    methodKind: "unary";
    input: typeof DeletePortalLinkByIdRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc scalekit.v1.organizations.OrganizationService.GetPortalLinks
   */
  getPortalLinks: {
    methodKind: "unary";
    input: typeof GetPortalLinkRequestSchema;
    output: typeof GetPortalLinksResponseSchema;
  },
  /**
   * @generated from rpc scalekit.v1.organizations.OrganizationService.UpdateOrganizationSettings
   */
  updateOrganizationSettings: {
    methodKind: "unary";
    input: typeof UpdateOrganizationSettingsRequestSchema;
    output: typeof GetOrganizationResponseSchema;
  },
  /**
   * @generated from rpc scalekit.v1.organizations.OrganizationService.CreateOrganizationSessionSettings
   */
  createOrganizationSessionSettings: {
    methodKind: "unary";
    input: typeof CreateOrganizationSessionSettingsRequestSchema;
    output: typeof CreateOrganizationSessionSettingsResponseSchema;
  },
  /**
   * @generated from rpc scalekit.v1.organizations.OrganizationService.GetOrganizationSessionSettings
   */
  getOrganizationSessionSettings: {
    methodKind: "unary";
    input: typeof GetOrganizationSessionSettingsRequestSchema;
    output: typeof GetOrganizationSessionSettingsResponseSchema;
  },
  /**
   * @generated from rpc scalekit.v1.organizations.OrganizationService.UpdateOrganizationSessionSettings
   */
  updateOrganizationSessionSettings: {
    methodKind: "unary";
    input: typeof UpdateOrganizationSessionSettingsRequestSchema;
    output: typeof UpdateOrganizationSessionSettingsResponseSchema;
  },
  /**
   * @generated from rpc scalekit.v1.organizations.OrganizationService.DeleteOrganizationSessionSettings
   */
  deleteOrganizationSessionSettings: {
    methodKind: "unary";
    input: typeof DeleteOrganizationSessionSettingsRequestSchema;
    output: typeof EmptySchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_scalekit_v1_organizations_organizations, 0);

