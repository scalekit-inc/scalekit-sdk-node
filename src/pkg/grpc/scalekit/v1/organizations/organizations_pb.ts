// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file scalekit/v1/organizations/organizations.proto (package scalekit.v1.organizations, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { BoolValue, FieldMask, Int32Value, Message, NullValue, proto3, Timestamp } from "@bufbuild/protobuf";
import { RegionCode } from "../commons/commons_pb.js";

/**
 * Feature represents the available features that can be enabled for an organization's portal link
 *
 * @generated from enum scalekit.v1.organizations.Feature
 */
export enum Feature {
  /**
   * An unspecified or invalid feature value
   *
   * @generated from enum value: FEATURE_UNSPECIFIED = 0;
   */
  FEATURE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: UNSPECIFIED = 0 [deprecated = true];
   * @deprecated
   */
  UNSPECIFIED = 0,

  /**
   * Enables directory synchronization configuration in the portal
   *
   * @generated from enum value: dir_sync = 1;
   */
  dir_sync = 1,

  /**
   * Enables Single Sign-On (SSO) configuration in the portal
   *
   * @generated from enum value: sso = 2;
   */
  sso = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(Feature)
proto3.util.setEnumType(Feature, "scalekit.v1.organizations.Feature", [
  { no: 0, name: "FEATURE_UNSPECIFIED" },
  { no: 0, name: "UNSPECIFIED" },
  { no: 1, name: "dir_sync" },
  { no: 2, name: "sso" },
]);

/**
 * @generated from message scalekit.v1.organizations.CreateOrganizationRequest
 */
export class CreateOrganizationRequest extends Message<CreateOrganizationRequest> {
  /**
   * Organization details
   *
   * @generated from field: scalekit.v1.organizations.CreateOrganization organization = 1;
   */
  organization?: CreateOrganization;

  constructor(data?: PartialMessage<CreateOrganizationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.CreateOrganizationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization", kind: "message", T: CreateOrganization },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOrganizationRequest {
    return new CreateOrganizationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOrganizationRequest {
    return new CreateOrganizationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOrganizationRequest {
    return new CreateOrganizationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateOrganizationRequest | PlainMessage<CreateOrganizationRequest> | undefined, b: CreateOrganizationRequest | PlainMessage<CreateOrganizationRequest> | undefined): boolean {
    return proto3.util.equals(CreateOrganizationRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.CreateOrganizationResponse
 */
export class CreateOrganizationResponse extends Message<CreateOrganizationResponse> {
  /**
   * @generated from field: scalekit.v1.organizations.Organization organization = 1;
   */
  organization?: Organization;

  constructor(data?: PartialMessage<CreateOrganizationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.CreateOrganizationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization", kind: "message", T: Organization },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOrganizationResponse {
    return new CreateOrganizationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOrganizationResponse {
    return new CreateOrganizationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOrganizationResponse {
    return new CreateOrganizationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateOrganizationResponse | PlainMessage<CreateOrganizationResponse> | undefined, b: CreateOrganizationResponse | PlainMessage<CreateOrganizationResponse> | undefined): boolean {
    return proto3.util.equals(CreateOrganizationResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.CreateOrganization
 */
export class CreateOrganization extends Message<CreateOrganization> {
  /**
   * @generated from field: string display_name = 4;
   */
  displayName = "";

  /**
   * @generated from field: scalekit.v1.commons.RegionCode region_code = 5;
   */
  regionCode = RegionCode.REGION_CODE_UNSPECIFIED;

  /**
   * @generated from field: optional string external_id = 6;
   */
  externalId?: string;

  /**
   * @generated from field: map<string, string> metadata = 7;
   */
  metadata: { [key: string]: string } = {};

  constructor(data?: PartialMessage<CreateOrganization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.CreateOrganization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 4, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "region_code", kind: "enum", T: proto3.getEnumType(RegionCode) },
    { no: 6, name: "external_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "metadata", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOrganization {
    return new CreateOrganization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOrganization {
    return new CreateOrganization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOrganization {
    return new CreateOrganization().fromJsonString(jsonString, options);
  }

  static equals(a: CreateOrganization | PlainMessage<CreateOrganization> | undefined, b: CreateOrganization | PlainMessage<CreateOrganization> | undefined): boolean {
    return proto3.util.equals(CreateOrganization, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.Organization
 */
export class Organization extends Message<Organization> {
  /**
   * Id
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * Created Time
   *
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * Updated time
   *
   * @generated from field: google.protobuf.Timestamp update_time = 3;
   */
  updateTime?: Timestamp;

  /**
   * Name of the org to be used in display
   *
   * @generated from field: string display_name = 4;
   */
  displayName = "";

  /**
   * Optional regioncode
   *
   * @generated from field: scalekit.v1.commons.RegionCode region_code = 5;
   */
  regionCode = RegionCode.REGION_CODE_UNSPECIFIED;

  /**
   * External Id is useful to store a unique identifier for a given Org that. The unique Identifier can be the id of your tenant / org in your SaaSApp
   *
   * @generated from field: optional string external_id = 6;
   */
  externalId?: string;

  /**
   * Key value pairs extension attributes.
   *
   * @generated from field: map<string, string> metadata = 7;
   */
  metadata: { [key: string]: string } = {};

  /**
   * Organization Settings
   *
   * @generated from field: scalekit.v1.organizations.OrganizationSettings settings = 8;
   */
  settings?: OrganizationSettings;

  constructor(data?: PartialMessage<Organization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.Organization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "create_time", kind: "message", T: Timestamp },
    { no: 3, name: "update_time", kind: "message", T: Timestamp },
    { no: 4, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "region_code", kind: "enum", T: proto3.getEnumType(RegionCode) },
    { no: 6, name: "external_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "metadata", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 8, name: "settings", kind: "message", T: OrganizationSettings },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Organization {
    return new Organization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Organization {
    return new Organization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Organization {
    return new Organization().fromJsonString(jsonString, options);
  }

  static equals(a: Organization | PlainMessage<Organization> | undefined, b: Organization | PlainMessage<Organization> | undefined): boolean {
    return proto3.util.equals(Organization, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.UpdateOrganizationRequest
 */
export class UpdateOrganizationRequest extends Message<UpdateOrganizationRequest> {
  /**
   * @generated from oneof scalekit.v1.organizations.UpdateOrganizationRequest.identities
   */
  identities: {
    /**
     * @generated from field: string id = 1;
     */
    value: string;
    case: "id";
  } | {
    /**
     * @generated from field: string external_id = 2;
     */
    value: string;
    case: "externalId";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * @generated from field: scalekit.v1.organizations.UpdateOrganization organization = 3;
   */
  organization?: UpdateOrganization;

  /**
   * @generated from field: google.protobuf.FieldMask update_mask = 99;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateOrganizationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.UpdateOrganizationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "identities" },
    { no: 2, name: "external_id", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "identities" },
    { no: 3, name: "organization", kind: "message", T: UpdateOrganization },
    { no: 99, name: "update_mask", kind: "message", T: FieldMask },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrganizationRequest {
    return new UpdateOrganizationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrganizationRequest {
    return new UpdateOrganizationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrganizationRequest {
    return new UpdateOrganizationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrganizationRequest | PlainMessage<UpdateOrganizationRequest> | undefined, b: UpdateOrganizationRequest | PlainMessage<UpdateOrganizationRequest> | undefined): boolean {
    return proto3.util.equals(UpdateOrganizationRequest, a, b);
  }
}

/**
 * For update messages ensure the indexes are same as the base model itself.
 *
 * @generated from message scalekit.v1.organizations.UpdateOrganization
 */
export class UpdateOrganization extends Message<UpdateOrganization> {
  /**
   * @generated from field: optional string display_name = 4;
   */
  displayName?: string;

  /**
   * @generated from field: optional string external_id = 6;
   */
  externalId?: string;

  /**
   * @generated from field: map<string, string> metadata = 7;
   */
  metadata: { [key: string]: string } = {};

  constructor(data?: PartialMessage<UpdateOrganization>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.UpdateOrganization";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 4, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "external_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "metadata", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrganization {
    return new UpdateOrganization().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrganization {
    return new UpdateOrganization().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrganization {
    return new UpdateOrganization().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrganization | PlainMessage<UpdateOrganization> | undefined, b: UpdateOrganization | PlainMessage<UpdateOrganization> | undefined): boolean {
    return proto3.util.equals(UpdateOrganization, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.UpdateOrganizationResponse
 */
export class UpdateOrganizationResponse extends Message<UpdateOrganizationResponse> {
  /**
   * @generated from field: scalekit.v1.organizations.Organization organization = 1;
   */
  organization?: Organization;

  constructor(data?: PartialMessage<UpdateOrganizationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.UpdateOrganizationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization", kind: "message", T: Organization },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrganizationResponse {
    return new UpdateOrganizationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrganizationResponse {
    return new UpdateOrganizationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrganizationResponse {
    return new UpdateOrganizationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrganizationResponse | PlainMessage<UpdateOrganizationResponse> | undefined, b: UpdateOrganizationResponse | PlainMessage<UpdateOrganizationResponse> | undefined): boolean {
    return proto3.util.equals(UpdateOrganizationResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.GetOrganizationRequest
 */
export class GetOrganizationRequest extends Message<GetOrganizationRequest> {
  /**
   * @generated from oneof scalekit.v1.organizations.GetOrganizationRequest.identities
   */
  identities: {
    /**
     * @generated from field: string id = 1;
     */
    value: string;
    case: "id";
  } | {
    /**
     * @generated from field: string external_id = 2;
     */
    value: string;
    case: "externalId";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<GetOrganizationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.GetOrganizationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "identities" },
    { no: 2, name: "external_id", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "identities" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrganizationRequest {
    return new GetOrganizationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrganizationRequest {
    return new GetOrganizationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrganizationRequest {
    return new GetOrganizationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrganizationRequest | PlainMessage<GetOrganizationRequest> | undefined, b: GetOrganizationRequest | PlainMessage<GetOrganizationRequest> | undefined): boolean {
    return proto3.util.equals(GetOrganizationRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.GetOrganizationResponse
 */
export class GetOrganizationResponse extends Message<GetOrganizationResponse> {
  /**
   * @generated from field: scalekit.v1.organizations.Organization organization = 1;
   */
  organization?: Organization;

  constructor(data?: PartialMessage<GetOrganizationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.GetOrganizationResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization", kind: "message", T: Organization },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrganizationResponse {
    return new GetOrganizationResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrganizationResponse {
    return new GetOrganizationResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrganizationResponse {
    return new GetOrganizationResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrganizationResponse | PlainMessage<GetOrganizationResponse> | undefined, b: GetOrganizationResponse | PlainMessage<GetOrganizationResponse> | undefined): boolean {
    return proto3.util.equals(GetOrganizationResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.ListOrganizationsRequest
 */
export class ListOrganizationsRequest extends Message<ListOrganizationsRequest> {
  /**
   * @generated from field: uint32 page_size = 1;
   */
  pageSize = 0;

  /**
   * @generated from field: string page_token = 2;
   */
  pageToken = "";

  /**
   * @generated from field: optional string external_id = 3;
   */
  externalId?: string;

  constructor(data?: PartialMessage<ListOrganizationsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.ListOrganizationsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "page_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "external_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrganizationsRequest {
    return new ListOrganizationsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrganizationsRequest {
    return new ListOrganizationsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrganizationsRequest {
    return new ListOrganizationsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrganizationsRequest | PlainMessage<ListOrganizationsRequest> | undefined, b: ListOrganizationsRequest | PlainMessage<ListOrganizationsRequest> | undefined): boolean {
    return proto3.util.equals(ListOrganizationsRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.ListOrganizationsResponse
 */
export class ListOrganizationsResponse extends Message<ListOrganizationsResponse> {
  /**
   * @generated from field: string next_page_token = 1;
   */
  nextPageToken = "";

  /**
   * @generated from field: uint32 total_size = 2;
   */
  totalSize = 0;

  /**
   * @generated from field: repeated scalekit.v1.organizations.Organization organizations = 3;
   */
  organizations: Organization[] = [];

  /**
   * @generated from field: string prev_page_token = 4;
   */
  prevPageToken = "";

  constructor(data?: PartialMessage<ListOrganizationsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.ListOrganizationsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "total_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "organizations", kind: "message", T: Organization, repeated: true },
    { no: 4, name: "prev_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrganizationsResponse {
    return new ListOrganizationsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrganizationsResponse {
    return new ListOrganizationsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrganizationsResponse {
    return new ListOrganizationsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrganizationsResponse | PlainMessage<ListOrganizationsResponse> | undefined, b: ListOrganizationsResponse | PlainMessage<ListOrganizationsResponse> | undefined): boolean {
    return proto3.util.equals(ListOrganizationsResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.SearchOrganizationsRequest
 */
export class SearchOrganizationsRequest extends Message<SearchOrganizationsRequest> {
  /**
   * @generated from field: string query = 1;
   */
  query = "";

  /**
   * @generated from field: uint32 page_size = 2;
   */
  pageSize = 0;

  /**
   * @generated from field: string page_token = 3;
   */
  pageToken = "";

  constructor(data?: PartialMessage<SearchOrganizationsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.SearchOrganizationsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "query", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchOrganizationsRequest {
    return new SearchOrganizationsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchOrganizationsRequest {
    return new SearchOrganizationsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchOrganizationsRequest {
    return new SearchOrganizationsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SearchOrganizationsRequest | PlainMessage<SearchOrganizationsRequest> | undefined, b: SearchOrganizationsRequest | PlainMessage<SearchOrganizationsRequest> | undefined): boolean {
    return proto3.util.equals(SearchOrganizationsRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.SearchOrganizationsResponse
 */
export class SearchOrganizationsResponse extends Message<SearchOrganizationsResponse> {
  /**
   * @generated from field: string next_page_token = 1;
   */
  nextPageToken = "";

  /**
   * @generated from field: uint32 total_size = 2;
   */
  totalSize = 0;

  /**
   * @generated from field: repeated scalekit.v1.organizations.Organization organizations = 3;
   */
  organizations: Organization[] = [];

  /**
   * @generated from field: string prev_page_token = 4;
   */
  prevPageToken = "";

  constructor(data?: PartialMessage<SearchOrganizationsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.SearchOrganizationsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "total_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "organizations", kind: "message", T: Organization, repeated: true },
    { no: 4, name: "prev_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchOrganizationsResponse {
    return new SearchOrganizationsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchOrganizationsResponse {
    return new SearchOrganizationsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchOrganizationsResponse {
    return new SearchOrganizationsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SearchOrganizationsResponse | PlainMessage<SearchOrganizationsResponse> | undefined, b: SearchOrganizationsResponse | PlainMessage<SearchOrganizationsResponse> | undefined): boolean {
    return proto3.util.equals(SearchOrganizationsResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.DeleteOrganizationRequest
 */
export class DeleteOrganizationRequest extends Message<DeleteOrganizationRequest> {
  /**
   * @generated from oneof scalekit.v1.organizations.DeleteOrganizationRequest.identities
   */
  identities: {
    /**
     * @generated from field: string id = 1;
     */
    value: string;
    case: "id";
  } | {
    /**
     * @generated from field: string external_id = 2;
     */
    value: string;
    case: "externalId";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<DeleteOrganizationRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.DeleteOrganizationRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "identities" },
    { no: 2, name: "external_id", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "identities" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteOrganizationRequest {
    return new DeleteOrganizationRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteOrganizationRequest {
    return new DeleteOrganizationRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteOrganizationRequest {
    return new DeleteOrganizationRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteOrganizationRequest | PlainMessage<DeleteOrganizationRequest> | undefined, b: DeleteOrganizationRequest | PlainMessage<DeleteOrganizationRequest> | undefined): boolean {
    return proto3.util.equals(DeleteOrganizationRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.GeneratePortalLinkRequest
 */
export class GeneratePortalLinkRequest extends Message<GeneratePortalLinkRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * Deprecated: Use features
   *
   * @generated from field: optional bool sso = 2 [deprecated = true];
   * @deprecated
   */
  sso?: boolean;

  /**
   * Deprecated: Use features
   *
   * @generated from field: optional bool directory_sync = 3 [deprecated = true];
   * @deprecated
   */
  directorySync?: boolean;

  /**
   * @generated from field: repeated scalekit.v1.organizations.Feature features = 4;
   */
  features: Feature[] = [];

  constructor(data?: PartialMessage<GeneratePortalLinkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.GeneratePortalLinkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "sso", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 3, name: "directory_sync", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 4, name: "features", kind: "enum", T: proto3.getEnumType(Feature), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GeneratePortalLinkRequest {
    return new GeneratePortalLinkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GeneratePortalLinkRequest {
    return new GeneratePortalLinkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GeneratePortalLinkRequest {
    return new GeneratePortalLinkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GeneratePortalLinkRequest | PlainMessage<GeneratePortalLinkRequest> | undefined, b: GeneratePortalLinkRequest | PlainMessage<GeneratePortalLinkRequest> | undefined): boolean {
    return proto3.util.equals(GeneratePortalLinkRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.GetPortalLinkRequest
 */
export class GetPortalLinkRequest extends Message<GetPortalLinkRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<GetPortalLinkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.GetPortalLinkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPortalLinkRequest {
    return new GetPortalLinkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPortalLinkRequest {
    return new GetPortalLinkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPortalLinkRequest {
    return new GetPortalLinkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetPortalLinkRequest | PlainMessage<GetPortalLinkRequest> | undefined, b: GetPortalLinkRequest | PlainMessage<GetPortalLinkRequest> | undefined): boolean {
    return proto3.util.equals(GetPortalLinkRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.DeletePortalLinkRequest
 */
export class DeletePortalLinkRequest extends Message<DeletePortalLinkRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<DeletePortalLinkRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.DeletePortalLinkRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePortalLinkRequest {
    return new DeletePortalLinkRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePortalLinkRequest {
    return new DeletePortalLinkRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePortalLinkRequest {
    return new DeletePortalLinkRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeletePortalLinkRequest | PlainMessage<DeletePortalLinkRequest> | undefined, b: DeletePortalLinkRequest | PlainMessage<DeletePortalLinkRequest> | undefined): boolean {
    return proto3.util.equals(DeletePortalLinkRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.DeletePortalLinkByIdRequest
 */
export class DeletePortalLinkByIdRequest extends Message<DeletePortalLinkByIdRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string link_id = 2;
   */
  linkId = "";

  constructor(data?: PartialMessage<DeletePortalLinkByIdRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.DeletePortalLinkByIdRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "link_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePortalLinkByIdRequest {
    return new DeletePortalLinkByIdRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePortalLinkByIdRequest {
    return new DeletePortalLinkByIdRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePortalLinkByIdRequest {
    return new DeletePortalLinkByIdRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeletePortalLinkByIdRequest | PlainMessage<DeletePortalLinkByIdRequest> | undefined, b: DeletePortalLinkByIdRequest | PlainMessage<DeletePortalLinkByIdRequest> | undefined): boolean {
    return proto3.util.equals(DeletePortalLinkByIdRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.Link
 */
export class Link extends Message<Link> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string location = 2;
   */
  location = "";

  /**
   * @generated from field: google.protobuf.Timestamp expire_time = 3;
   */
  expireTime?: Timestamp;

  constructor(data?: PartialMessage<Link>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.Link";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "location", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "expire_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Link {
    return new Link().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Link {
    return new Link().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Link {
    return new Link().fromJsonString(jsonString, options);
  }

  static equals(a: Link | PlainMessage<Link> | undefined, b: Link | PlainMessage<Link> | undefined): boolean {
    return proto3.util.equals(Link, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.GeneratePortalLinkResponse
 */
export class GeneratePortalLinkResponse extends Message<GeneratePortalLinkResponse> {
  /**
   * @generated from field: scalekit.v1.organizations.Link link = 1;
   */
  link?: Link;

  constructor(data?: PartialMessage<GeneratePortalLinkResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.GeneratePortalLinkResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "link", kind: "message", T: Link },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GeneratePortalLinkResponse {
    return new GeneratePortalLinkResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GeneratePortalLinkResponse {
    return new GeneratePortalLinkResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GeneratePortalLinkResponse {
    return new GeneratePortalLinkResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GeneratePortalLinkResponse | PlainMessage<GeneratePortalLinkResponse> | undefined, b: GeneratePortalLinkResponse | PlainMessage<GeneratePortalLinkResponse> | undefined): boolean {
    return proto3.util.equals(GeneratePortalLinkResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.GetPortalLinksResponse
 */
export class GetPortalLinksResponse extends Message<GetPortalLinksResponse> {
  /**
   * @generated from field: repeated scalekit.v1.organizations.Link links = 1;
   */
  links: Link[] = [];

  constructor(data?: PartialMessage<GetPortalLinksResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.GetPortalLinksResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "links", kind: "message", T: Link, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPortalLinksResponse {
    return new GetPortalLinksResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPortalLinksResponse {
    return new GetPortalLinksResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPortalLinksResponse {
    return new GetPortalLinksResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetPortalLinksResponse | PlainMessage<GetPortalLinksResponse> | undefined, b: GetPortalLinksResponse | PlainMessage<GetPortalLinksResponse> | undefined): boolean {
    return proto3.util.equals(GetPortalLinksResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.UpdateOrganizationSettingsRequest
 */
export class UpdateOrganizationSettingsRequest extends Message<UpdateOrganizationSettingsRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: scalekit.v1.organizations.OrganizationSettings settings = 2;
   */
  settings?: OrganizationSettings;

  constructor(data?: PartialMessage<UpdateOrganizationSettingsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.UpdateOrganizationSettingsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "settings", kind: "message", T: OrganizationSettings },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrganizationSettingsRequest {
    return new UpdateOrganizationSettingsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrganizationSettingsRequest {
    return new UpdateOrganizationSettingsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrganizationSettingsRequest {
    return new UpdateOrganizationSettingsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrganizationSettingsRequest | PlainMessage<UpdateOrganizationSettingsRequest> | undefined, b: UpdateOrganizationSettingsRequest | PlainMessage<UpdateOrganizationSettingsRequest> | undefined): boolean {
    return proto3.util.equals(UpdateOrganizationSettingsRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.UpdateOrganizationSessionSettingsRequest
 */
export class UpdateOrganizationSessionSettingsRequest extends Message<UpdateOrganizationSessionSettingsRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string environment_id = 2;
   */
  environmentId = "";

  /**
   * @generated from field: scalekit.v1.organizations.OrganizationSessionSettings session_settings = 3;
   */
  sessionSettings?: OrganizationSessionSettings;

  constructor(data?: PartialMessage<UpdateOrganizationSessionSettingsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.UpdateOrganizationSessionSettingsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "environment_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "session_settings", kind: "message", T: OrganizationSessionSettings },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrganizationSessionSettingsRequest {
    return new UpdateOrganizationSessionSettingsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrganizationSessionSettingsRequest {
    return new UpdateOrganizationSessionSettingsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrganizationSessionSettingsRequest {
    return new UpdateOrganizationSessionSettingsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrganizationSessionSettingsRequest | PlainMessage<UpdateOrganizationSessionSettingsRequest> | undefined, b: UpdateOrganizationSessionSettingsRequest | PlainMessage<UpdateOrganizationSessionSettingsRequest> | undefined): boolean {
    return proto3.util.equals(UpdateOrganizationSessionSettingsRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.UpdateOrganizationSessionSettingsResponse
 */
export class UpdateOrganizationSessionSettingsResponse extends Message<UpdateOrganizationSessionSettingsResponse> {
  /**
   * @generated from field: string environment_id = 1;
   */
  environmentId = "";

  /**
   * @generated from field: string organization_id = 2;
   */
  organizationId = "";

  /**
   * @generated from field: scalekit.v1.organizations.OrganizationSessionSettings session_settings = 3;
   */
  sessionSettings?: OrganizationSessionSettings;

  constructor(data?: PartialMessage<UpdateOrganizationSessionSettingsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.UpdateOrganizationSessionSettingsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "environment_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "session_settings", kind: "message", T: OrganizationSessionSettings },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrganizationSessionSettingsResponse {
    return new UpdateOrganizationSessionSettingsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrganizationSessionSettingsResponse {
    return new UpdateOrganizationSessionSettingsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrganizationSessionSettingsResponse {
    return new UpdateOrganizationSessionSettingsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrganizationSessionSettingsResponse | PlainMessage<UpdateOrganizationSessionSettingsResponse> | undefined, b: UpdateOrganizationSessionSettingsResponse | PlainMessage<UpdateOrganizationSessionSettingsResponse> | undefined): boolean {
    return proto3.util.equals(UpdateOrganizationSessionSettingsResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.OrganizationUserManagementSettings
 */
export class OrganizationUserManagementSettings extends Message<OrganizationUserManagementSettings> {
  /**
   * @generated from field: google.protobuf.BoolValue jit_provisioning_with_sso_enabled = 1;
   */
  jitProvisioningWithSsoEnabled?: boolean;

  /**
   * @generated from field: google.protobuf.BoolValue sync_user_profile_on_signin = 2;
   */
  syncUserProfileOnSignin?: boolean;

  /**
   * Deprecated placeholder to ensure google.protobuf.NullValue is referenced in the schema, preventing unused-definition warnings.
   *
   * @generated from field: google.protobuf.NullValue deprecated_placeholder = 99 [deprecated = true];
   * @deprecated
   */
  deprecatedPlaceholder = NullValue.NULL_VALUE;

  constructor(data?: PartialMessage<OrganizationUserManagementSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.OrganizationUserManagementSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "jit_provisioning_with_sso_enabled", kind: "message", T: BoolValue },
    { no: 2, name: "sync_user_profile_on_signin", kind: "message", T: BoolValue },
    { no: 99, name: "deprecated_placeholder", kind: "enum", T: proto3.getEnumType(NullValue) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrganizationUserManagementSettings {
    return new OrganizationUserManagementSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrganizationUserManagementSettings {
    return new OrganizationUserManagementSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrganizationUserManagementSettings {
    return new OrganizationUserManagementSettings().fromJsonString(jsonString, options);
  }

  static equals(a: OrganizationUserManagementSettings | PlainMessage<OrganizationUserManagementSettings> | undefined, b: OrganizationUserManagementSettings | PlainMessage<OrganizationUserManagementSettings> | undefined): boolean {
    return proto3.util.equals(OrganizationUserManagementSettings, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.OrganizationSessionSettings
 */
export class OrganizationSessionSettings extends Message<OrganizationSessionSettings> {
  /**
   * @generated from field: google.protobuf.Int32Value absolute_session_timeout = 1;
   */
  absoluteSessionTimeout?: number;

  /**
   * @generated from field: google.protobuf.BoolValue session_management_enabled = 2;
   */
  sessionManagementEnabled?: boolean;

  /**
   * @generated from field: google.protobuf.Int32Value idle_session_timeout = 3;
   */
  idleSessionTimeout?: number;

  /**
   * @generated from field: google.protobuf.BoolValue idle_session_enabled = 4;
   */
  idleSessionEnabled?: boolean;

  constructor(data?: PartialMessage<OrganizationSessionSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.OrganizationSessionSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "absolute_session_timeout", kind: "message", T: Int32Value },
    { no: 2, name: "session_management_enabled", kind: "message", T: BoolValue },
    { no: 3, name: "idle_session_timeout", kind: "message", T: Int32Value },
    { no: 4, name: "idle_session_enabled", kind: "message", T: BoolValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrganizationSessionSettings {
    return new OrganizationSessionSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrganizationSessionSettings {
    return new OrganizationSessionSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrganizationSessionSettings {
    return new OrganizationSessionSettings().fromJsonString(jsonString, options);
  }

  static equals(a: OrganizationSessionSettings | PlainMessage<OrganizationSessionSettings> | undefined, b: OrganizationSessionSettings | PlainMessage<OrganizationSessionSettings> | undefined): boolean {
    return proto3.util.equals(OrganizationSessionSettings, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.GetOrganizationSessionSettingsRequest
 */
export class GetOrganizationSessionSettingsRequest extends Message<GetOrganizationSessionSettingsRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string environment_id = 2;
   */
  environmentId = "";

  constructor(data?: PartialMessage<GetOrganizationSessionSettingsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.GetOrganizationSessionSettingsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "environment_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrganizationSessionSettingsRequest {
    return new GetOrganizationSessionSettingsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrganizationSessionSettingsRequest {
    return new GetOrganizationSessionSettingsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrganizationSessionSettingsRequest {
    return new GetOrganizationSessionSettingsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrganizationSessionSettingsRequest | PlainMessage<GetOrganizationSessionSettingsRequest> | undefined, b: GetOrganizationSessionSettingsRequest | PlainMessage<GetOrganizationSessionSettingsRequest> | undefined): boolean {
    return proto3.util.equals(GetOrganizationSessionSettingsRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.CreateOrganizationSessionSettingsRequest
 */
export class CreateOrganizationSessionSettingsRequest extends Message<CreateOrganizationSessionSettingsRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string environment_id = 2;
   */
  environmentId = "";

  constructor(data?: PartialMessage<CreateOrganizationSessionSettingsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.CreateOrganizationSessionSettingsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "environment_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOrganizationSessionSettingsRequest {
    return new CreateOrganizationSessionSettingsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOrganizationSessionSettingsRequest {
    return new CreateOrganizationSessionSettingsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOrganizationSessionSettingsRequest {
    return new CreateOrganizationSessionSettingsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateOrganizationSessionSettingsRequest | PlainMessage<CreateOrganizationSessionSettingsRequest> | undefined, b: CreateOrganizationSessionSettingsRequest | PlainMessage<CreateOrganizationSessionSettingsRequest> | undefined): boolean {
    return proto3.util.equals(CreateOrganizationSessionSettingsRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.CreateOrganizationSessionSettingsResponse
 */
export class CreateOrganizationSessionSettingsResponse extends Message<CreateOrganizationSessionSettingsResponse> {
  /**
   * @generated from field: string environment_id = 1;
   */
  environmentId = "";

  /**
   * @generated from field: string organization_id = 2;
   */
  organizationId = "";

  /**
   * @generated from field: scalekit.v1.organizations.OrganizationSessionSettings session_settings = 3;
   */
  sessionSettings?: OrganizationSessionSettings;

  constructor(data?: PartialMessage<CreateOrganizationSessionSettingsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.CreateOrganizationSessionSettingsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "environment_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "session_settings", kind: "message", T: OrganizationSessionSettings },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOrganizationSessionSettingsResponse {
    return new CreateOrganizationSessionSettingsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOrganizationSessionSettingsResponse {
    return new CreateOrganizationSessionSettingsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOrganizationSessionSettingsResponse {
    return new CreateOrganizationSessionSettingsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateOrganizationSessionSettingsResponse | PlainMessage<CreateOrganizationSessionSettingsResponse> | undefined, b: CreateOrganizationSessionSettingsResponse | PlainMessage<CreateOrganizationSessionSettingsResponse> | undefined): boolean {
    return proto3.util.equals(CreateOrganizationSessionSettingsResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.GetOrganizationSessionSettingsResponse
 */
export class GetOrganizationSessionSettingsResponse extends Message<GetOrganizationSessionSettingsResponse> {
  /**
   * @generated from field: string environment_id = 1;
   */
  environmentId = "";

  /**
   * @generated from field: string organization_id = 2;
   */
  organizationId = "";

  /**
   * @generated from field: scalekit.v1.organizations.OrganizationSessionSettings session_settings = 3;
   */
  sessionSettings?: OrganizationSessionSettings;

  constructor(data?: PartialMessage<GetOrganizationSessionSettingsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.GetOrganizationSessionSettingsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "environment_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "session_settings", kind: "message", T: OrganizationSessionSettings },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrganizationSessionSettingsResponse {
    return new GetOrganizationSessionSettingsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrganizationSessionSettingsResponse {
    return new GetOrganizationSessionSettingsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrganizationSessionSettingsResponse {
    return new GetOrganizationSessionSettingsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrganizationSessionSettingsResponse | PlainMessage<GetOrganizationSessionSettingsResponse> | undefined, b: GetOrganizationSessionSettingsResponse | PlainMessage<GetOrganizationSessionSettingsResponse> | undefined): boolean {
    return proto3.util.equals(GetOrganizationSessionSettingsResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.DeleteOrganizationSessionSettingsRequest
 */
export class DeleteOrganizationSessionSettingsRequest extends Message<DeleteOrganizationSessionSettingsRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string environment_id = 2;
   */
  environmentId = "";

  constructor(data?: PartialMessage<DeleteOrganizationSessionSettingsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.DeleteOrganizationSessionSettingsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "environment_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteOrganizationSessionSettingsRequest {
    return new DeleteOrganizationSessionSettingsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteOrganizationSessionSettingsRequest {
    return new DeleteOrganizationSessionSettingsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteOrganizationSessionSettingsRequest {
    return new DeleteOrganizationSessionSettingsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteOrganizationSessionSettingsRequest | PlainMessage<DeleteOrganizationSessionSettingsRequest> | undefined, b: DeleteOrganizationSessionSettingsRequest | PlainMessage<DeleteOrganizationSessionSettingsRequest> | undefined): boolean {
    return proto3.util.equals(DeleteOrganizationSessionSettingsRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.OrganizationSettings
 */
export class OrganizationSettings extends Message<OrganizationSettings> {
  /**
   * @generated from field: repeated scalekit.v1.organizations.OrganizationSettingsFeature features = 1;
   */
  features: OrganizationSettingsFeature[] = [];

  constructor(data?: PartialMessage<OrganizationSettings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.OrganizationSettings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "features", kind: "message", T: OrganizationSettingsFeature, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrganizationSettings {
    return new OrganizationSettings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrganizationSettings {
    return new OrganizationSettings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrganizationSettings {
    return new OrganizationSettings().fromJsonString(jsonString, options);
  }

  static equals(a: OrganizationSettings | PlainMessage<OrganizationSettings> | undefined, b: OrganizationSettings | PlainMessage<OrganizationSettings> | undefined): boolean {
    return proto3.util.equals(OrganizationSettings, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.OrganizationSettingsFeature
 */
export class OrganizationSettingsFeature extends Message<OrganizationSettingsFeature> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: bool enabled = 2;
   */
  enabled = false;

  constructor(data?: PartialMessage<OrganizationSettingsFeature>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.OrganizationSettingsFeature";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrganizationSettingsFeature {
    return new OrganizationSettingsFeature().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrganizationSettingsFeature {
    return new OrganizationSettingsFeature().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrganizationSettingsFeature {
    return new OrganizationSettingsFeature().fromJsonString(jsonString, options);
  }

  static equals(a: OrganizationSettingsFeature | PlainMessage<OrganizationSettingsFeature> | undefined, b: OrganizationSettingsFeature | PlainMessage<OrganizationSettingsFeature> | undefined): boolean {
    return proto3.util.equals(OrganizationSettingsFeature, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.UpdateUserManagementSettingsRequest
 */
export class UpdateUserManagementSettingsRequest extends Message<UpdateUserManagementSettingsRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  /**
   * @generated from field: scalekit.v1.organizations.OrganizationUserManagementSettings settings = 2;
   */
  settings?: OrganizationUserManagementSettings;

  constructor(data?: PartialMessage<UpdateUserManagementSettingsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.UpdateUserManagementSettingsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "settings", kind: "message", T: OrganizationUserManagementSettings },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserManagementSettingsRequest {
    return new UpdateUserManagementSettingsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserManagementSettingsRequest {
    return new UpdateUserManagementSettingsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserManagementSettingsRequest {
    return new UpdateUserManagementSettingsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateUserManagementSettingsRequest | PlainMessage<UpdateUserManagementSettingsRequest> | undefined, b: UpdateUserManagementSettingsRequest | PlainMessage<UpdateUserManagementSettingsRequest> | undefined): boolean {
    return proto3.util.equals(UpdateUserManagementSettingsRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.UpdateUserManagementSettingsResponse
 */
export class UpdateUserManagementSettingsResponse extends Message<UpdateUserManagementSettingsResponse> {
  /**
   * @generated from field: scalekit.v1.organizations.OrganizationUserManagementSettings settings = 1;
   */
  settings?: OrganizationUserManagementSettings;

  constructor(data?: PartialMessage<UpdateUserManagementSettingsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.UpdateUserManagementSettingsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "settings", kind: "message", T: OrganizationUserManagementSettings },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateUserManagementSettingsResponse {
    return new UpdateUserManagementSettingsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateUserManagementSettingsResponse {
    return new UpdateUserManagementSettingsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateUserManagementSettingsResponse {
    return new UpdateUserManagementSettingsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateUserManagementSettingsResponse | PlainMessage<UpdateUserManagementSettingsResponse> | undefined, b: UpdateUserManagementSettingsResponse | PlainMessage<UpdateUserManagementSettingsResponse> | undefined): boolean {
    return proto3.util.equals(UpdateUserManagementSettingsResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.GetOrganizationUserManagementSettingsRequest
 */
export class GetOrganizationUserManagementSettingsRequest extends Message<GetOrganizationUserManagementSettingsRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  constructor(data?: PartialMessage<GetOrganizationUserManagementSettingsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.GetOrganizationUserManagementSettingsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrganizationUserManagementSettingsRequest {
    return new GetOrganizationUserManagementSettingsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrganizationUserManagementSettingsRequest {
    return new GetOrganizationUserManagementSettingsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrganizationUserManagementSettingsRequest {
    return new GetOrganizationUserManagementSettingsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrganizationUserManagementSettingsRequest | PlainMessage<GetOrganizationUserManagementSettingsRequest> | undefined, b: GetOrganizationUserManagementSettingsRequest | PlainMessage<GetOrganizationUserManagementSettingsRequest> | undefined): boolean {
    return proto3.util.equals(GetOrganizationUserManagementSettingsRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.organizations.GetOrganizationUserManagementSettingsResponse
 */
export class GetOrganizationUserManagementSettingsResponse extends Message<GetOrganizationUserManagementSettingsResponse> {
  /**
   * @generated from field: scalekit.v1.organizations.OrganizationUserManagementSettings settings = 1;
   */
  settings?: OrganizationUserManagementSettings;

  constructor(data?: PartialMessage<GetOrganizationUserManagementSettingsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.organizations.GetOrganizationUserManagementSettingsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "settings", kind: "message", T: OrganizationUserManagementSettings },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrganizationUserManagementSettingsResponse {
    return new GetOrganizationUserManagementSettingsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrganizationUserManagementSettingsResponse {
    return new GetOrganizationUserManagementSettingsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrganizationUserManagementSettingsResponse {
    return new GetOrganizationUserManagementSettingsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrganizationUserManagementSettingsResponse | PlainMessage<GetOrganizationUserManagementSettingsResponse> | undefined, b: GetOrganizationUserManagementSettingsResponse | PlainMessage<GetOrganizationUserManagementSettingsResponse> | undefined): boolean {
    return proto3.util.equals(GetOrganizationUserManagementSettingsResponse, a, b);
  }
}

