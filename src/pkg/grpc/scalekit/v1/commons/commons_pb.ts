// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file scalekit/v1/commons/commons.proto (package scalekit.v1.commons, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from enum scalekit.v1.commons.RegionCode
 */
export enum RegionCode {
  /**
   *
   * If the region code is unspecified the selected region will automatically be decided based on the origin of the call.
   *
   * @generated from enum value: REGION_CODE_UNSPECIFIED = 0;
   */
  REGION_CODE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: US = 1;
   */
  US = 1,

  /**
   * @generated from enum value: EU = 2;
   */
  EU = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(RegionCode)
proto3.util.setEnumType(RegionCode, "scalekit.v1.commons.RegionCode", [
  { no: 0, name: "REGION_CODE_UNSPECIFIED" },
  { no: 1, name: "US" },
  { no: 2, name: "EU" },
]);

/**
 * @generated from enum scalekit.v1.commons.MembershipStatus
 */
export enum MembershipStatus {
  /**
   * @generated from enum value: Membership_Status_UNSPECIFIED = 0;
   */
  Membership_Status_UNSPECIFIED = 0,

  /**
   * @generated from enum value: ACTIVE = 1;
   */
  ACTIVE = 1,

  /**
   * @generated from enum value: INACTIVE = 2;
   */
  INACTIVE = 2,

  /**
   * @generated from enum value: PENDING_INVITE = 3;
   */
  PENDING_INVITE = 3,

  /**
   * @generated from enum value: INVITE_EXPIRED = 4;
   */
  INVITE_EXPIRED = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(MembershipStatus)
proto3.util.setEnumType(MembershipStatus, "scalekit.v1.commons.MembershipStatus", [
  { no: 0, name: "Membership_Status_UNSPECIFIED" },
  { no: 1, name: "ACTIVE" },
  { no: 2, name: "INACTIVE" },
  { no: 3, name: "PENDING_INVITE" },
  { no: 4, name: "INVITE_EXPIRED" },
]);

/**
 * @generated from message scalekit.v1.commons.OrganizationMembership
 */
export class OrganizationMembership extends Message<OrganizationMembership> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  /**
   * @generated from field: google.protobuf.Timestamp join_time = 2;
   */
  joinTime?: Timestamp;

  /**
   * @generated from field: scalekit.v1.commons.MembershipStatus membership_status = 3;
   */
  membershipStatus = MembershipStatus.Membership_Status_UNSPECIFIED;

  /**
   * @generated from field: repeated scalekit.v1.commons.Role roles = 4;
   */
  roles: Role[] = [];

  /**
   * @generated from field: optional string name = 5;
   */
  name?: string;

  /**
   * @generated from field: map<string, string> metadata = 7;
   */
  metadata: { [key: string]: string } = {};

  /**
   * @generated from field: optional string display_name = 9;
   */
  displayName?: string;

  /**
   * @generated from field: optional string inviter_email = 10;
   */
  inviterEmail?: string;

  /**
   * @generated from field: optional google.protobuf.Timestamp created_at = 11;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: optional google.protobuf.Timestamp accepted_at = 12;
   */
  acceptedAt?: Timestamp;

  /**
   * @generated from field: optional google.protobuf.Timestamp expires_at = 13;
   */
  expiresAt?: Timestamp;

  constructor(data?: PartialMessage<OrganizationMembership>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.commons.OrganizationMembership";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "join_time", kind: "message", T: Timestamp },
    { no: 3, name: "membership_status", kind: "enum", T: proto3.getEnumType(MembershipStatus) },
    { no: 4, name: "roles", kind: "message", T: Role, repeated: true },
    { no: 5, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "metadata", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 9, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 10, name: "inviter_email", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 11, name: "created_at", kind: "message", T: Timestamp, opt: true },
    { no: 12, name: "accepted_at", kind: "message", T: Timestamp, opt: true },
    { no: 13, name: "expires_at", kind: "message", T: Timestamp, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrganizationMembership {
    return new OrganizationMembership().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrganizationMembership {
    return new OrganizationMembership().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrganizationMembership {
    return new OrganizationMembership().fromJsonString(jsonString, options);
  }

  static equals(a: OrganizationMembership | PlainMessage<OrganizationMembership> | undefined, b: OrganizationMembership | PlainMessage<OrganizationMembership> | undefined): boolean {
    return proto3.util.equals(OrganizationMembership, a, b);
  }
}

/**
 * @generated from message scalekit.v1.commons.Role
 */
export class Role extends Message<Role> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string display_name = 3;
   */
  displayName = "";

  constructor(data?: PartialMessage<Role>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.commons.Role";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Role {
    return new Role().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Role {
    return new Role().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Role {
    return new Role().fromJsonString(jsonString, options);
  }

  static equals(a: Role | PlainMessage<Role> | undefined, b: Role | PlainMessage<Role> | undefined): boolean {
    return proto3.util.equals(Role, a, b);
  }
}

/**
 * @generated from message scalekit.v1.commons.UserProfile
 */
export class UserProfile extends Message<UserProfile> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string first_name = 2;
   */
  firstName = "";

  /**
   * @generated from field: string last_name = 3;
   */
  lastName = "";

  /**
   * @generated from field: string name = 4;
   */
  name = "";

  /**
   * @generated from field: string locale = 5;
   */
  locale = "";

  /**
   * @generated from field: bool email_verified = 6;
   */
  emailVerified = false;

  /**
   * @generated from field: string phone_number = 7;
   */
  phoneNumber = "";

  /**
   * @generated from field: map<string, string> metadata = 8;
   */
  metadata: { [key: string]: string } = {};

  /**
   * @generated from field: map<string, string> custom_attributes = 9;
   */
  customAttributes: { [key: string]: string } = {};

  constructor(data?: PartialMessage<UserProfile>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.commons.UserProfile";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "first_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "last_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "locale", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "email_verified", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "phone_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "metadata", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 9, name: "custom_attributes", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserProfile {
    return new UserProfile().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserProfile {
    return new UserProfile().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserProfile {
    return new UserProfile().fromJsonString(jsonString, options);
  }

  static equals(a: UserProfile | PlainMessage<UserProfile> | undefined, b: UserProfile | PlainMessage<UserProfile> | undefined): boolean {
    return proto3.util.equals(UserProfile, a, b);
  }
}

