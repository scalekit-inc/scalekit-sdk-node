// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file scalekit/v1/sessions/sessions.proto (package scalekit.v1.auditlogs, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from message scalekit.v1.auditlogs.SessionDetailsRequest
 */
export class SessionDetailsRequest extends Message<SessionDetailsRequest> {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId = "";

  constructor(data?: PartialMessage<SessionDetailsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.auditlogs.SessionDetailsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "session_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SessionDetailsRequest {
    return new SessionDetailsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SessionDetailsRequest {
    return new SessionDetailsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SessionDetailsRequest {
    return new SessionDetailsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SessionDetailsRequest | PlainMessage<SessionDetailsRequest> | undefined, b: SessionDetailsRequest | PlainMessage<SessionDetailsRequest> | undefined): boolean {
    return proto3.util.equals(SessionDetailsRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.auditlogs.UserSessionDetailsRequest
 */
export class UserSessionDetailsRequest extends Message<UserSessionDetailsRequest> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<UserSessionDetailsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.auditlogs.UserSessionDetailsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserSessionDetailsRequest {
    return new UserSessionDetailsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserSessionDetailsRequest {
    return new UserSessionDetailsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserSessionDetailsRequest {
    return new UserSessionDetailsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UserSessionDetailsRequest | PlainMessage<UserSessionDetailsRequest> | undefined, b: UserSessionDetailsRequest | PlainMessage<UserSessionDetailsRequest> | undefined): boolean {
    return proto3.util.equals(UserSessionDetailsRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.auditlogs.RevokeSessionRequest
 */
export class RevokeSessionRequest extends Message<RevokeSessionRequest> {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId = "";

  constructor(data?: PartialMessage<RevokeSessionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.auditlogs.RevokeSessionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "session_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RevokeSessionRequest {
    return new RevokeSessionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RevokeSessionRequest {
    return new RevokeSessionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RevokeSessionRequest {
    return new RevokeSessionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RevokeSessionRequest | PlainMessage<RevokeSessionRequest> | undefined, b: RevokeSessionRequest | PlainMessage<RevokeSessionRequest> | undefined): boolean {
    return proto3.util.equals(RevokeSessionRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.auditlogs.RevokeSessionResponse
 */
export class RevokeSessionResponse extends Message<RevokeSessionResponse> {
  /**
   * @generated from field: scalekit.v1.auditlogs.SessionDetails revoked_session = 1;
   */
  revokedSession?: SessionDetails;

  constructor(data?: PartialMessage<RevokeSessionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.auditlogs.RevokeSessionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "revoked_session", kind: "message", T: SessionDetails },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RevokeSessionResponse {
    return new RevokeSessionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RevokeSessionResponse {
    return new RevokeSessionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RevokeSessionResponse {
    return new RevokeSessionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RevokeSessionResponse | PlainMessage<RevokeSessionResponse> | undefined, b: RevokeSessionResponse | PlainMessage<RevokeSessionResponse> | undefined): boolean {
    return proto3.util.equals(RevokeSessionResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.auditlogs.UserSessionDetails
 */
export class UserSessionDetails extends Message<UserSessionDetails> {
  /**
   * @generated from field: repeated scalekit.v1.auditlogs.SessionDetails sessions = 1;
   */
  sessions: SessionDetails[] = [];

  constructor(data?: PartialMessage<UserSessionDetails>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.auditlogs.UserSessionDetails";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sessions", kind: "message", T: SessionDetails, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserSessionDetails {
    return new UserSessionDetails().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserSessionDetails {
    return new UserSessionDetails().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserSessionDetails {
    return new UserSessionDetails().fromJsonString(jsonString, options);
  }

  static equals(a: UserSessionDetails | PlainMessage<UserSessionDetails> | undefined, b: UserSessionDetails | PlainMessage<UserSessionDetails> | undefined): boolean {
    return proto3.util.equals(UserSessionDetails, a, b);
  }
}

/**
 * @generated from message scalekit.v1.auditlogs.SessionDetails
 */
export class SessionDetails extends Message<SessionDetails> {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId = "";

  /**
   * @generated from field: string user_id = 2;
   */
  userId = "";

  /**
   * @generated from field: repeated string authenticated_organizations = 3;
   */
  authenticatedOrganizations: string[] = [];

  /**
   * @generated from field: string organization_id = 4;
   */
  organizationId = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 5;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 6;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp idle_expires_at = 7;
   */
  idleExpiresAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp absolute_expires_at = 8;
   */
  absoluteExpiresAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp expired_at = 9;
   */
  expiredAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp logout_at = 10;
   */
  logoutAt?: Timestamp;

  /**
   * @generated from field: string status = 11;
   */
  status = "";

  /**
   * @generated from field: string initial_user_agent = 12;
   */
  initialUserAgent = "";

  /**
   * @generated from field: string initial_os = 13;
   */
  initialOs = "";

  /**
   * @generated from field: string initial_os_version = 14;
   */
  initialOsVersion = "";

  /**
   * @generated from field: string initial_browser = 15;
   */
  initialBrowser = "";

  /**
   * @generated from field: string initial_browser_version = 16;
   */
  initialBrowserVersion = "";

  /**
   * @generated from field: string initial_device_type = 17;
   */
  initialDeviceType = "";

  /**
   * @generated from field: string initial_ip = 19;
   */
  initialIp = "";

  /**
   * @generated from field: scalekit.v1.auditlogs.Location initial_location = 20;
   */
  initialLocation?: Location;

  /**
   * @generated from field: string latest_user_agent = 21;
   */
  latestUserAgent = "";

  /**
   * @generated from field: string latest_os = 22;
   */
  latestOs = "";

  /**
   * @generated from field: string latest_os_version = 23;
   */
  latestOsVersion = "";

  /**
   * @generated from field: string latest_browser = 24;
   */
  latestBrowser = "";

  /**
   * @generated from field: string latest_browser_version = 25;
   */
  latestBrowserVersion = "";

  /**
   * @generated from field: string latest_device_type = 26;
   */
  latestDeviceType = "";

  /**
   * @generated from field: string latest_ip = 28;
   */
  latestIp = "";

  /**
   * @generated from field: scalekit.v1.auditlogs.Location latest_location = 29;
   */
  latestLocation?: Location;

  constructor(data?: PartialMessage<SessionDetails>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.auditlogs.SessionDetails";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "session_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "authenticated_organizations", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "created_at", kind: "message", T: Timestamp },
    { no: 6, name: "updated_at", kind: "message", T: Timestamp },
    { no: 7, name: "idle_expires_at", kind: "message", T: Timestamp },
    { no: 8, name: "absolute_expires_at", kind: "message", T: Timestamp },
    { no: 9, name: "expired_at", kind: "message", T: Timestamp },
    { no: 10, name: "logout_at", kind: "message", T: Timestamp },
    { no: 11, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "initial_user_agent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "initial_os", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "initial_os_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "initial_browser", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "initial_browser_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "initial_device_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "initial_ip", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 20, name: "initial_location", kind: "message", T: Location },
    { no: 21, name: "latest_user_agent", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "latest_os", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "latest_os_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "latest_browser", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 25, name: "latest_browser_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 26, name: "latest_device_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 28, name: "latest_ip", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 29, name: "latest_location", kind: "message", T: Location },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SessionDetails {
    return new SessionDetails().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SessionDetails {
    return new SessionDetails().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SessionDetails {
    return new SessionDetails().fromJsonString(jsonString, options);
  }

  static equals(a: SessionDetails | PlainMessage<SessionDetails> | undefined, b: SessionDetails | PlainMessage<SessionDetails> | undefined): boolean {
    return proto3.util.equals(SessionDetails, a, b);
  }
}

/**
 * @generated from message scalekit.v1.auditlogs.Location
 */
export class Location extends Message<Location> {
  /**
   * @generated from field: string region = 1;
   */
  region = "";

  /**
   * @generated from field: string region_subdivision = 2;
   */
  regionSubdivision = "";

  /**
   * @generated from field: string city = 3;
   */
  city = "";

  /**
   * @generated from field: string latitude = 4;
   */
  latitude = "";

  /**
   * @generated from field: string longitude = 5;
   */
  longitude = "";

  constructor(data?: PartialMessage<Location>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.auditlogs.Location";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "region", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "region_subdivision", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "city", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "latitude", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "longitude", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Location {
    return new Location().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Location {
    return new Location().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Location {
    return new Location().fromJsonString(jsonString, options);
  }

  static equals(a: Location | PlainMessage<Location> | undefined, b: Location | PlainMessage<Location> | undefined): boolean {
    return proto3.util.equals(Location, a, b);
  }
}

