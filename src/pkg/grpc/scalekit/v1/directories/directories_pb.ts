// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file scalekit/v1/directories/directories.proto (package scalekit.v1.directories, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Struct, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from enum scalekit.v1.directories.DirectoryType
 */
export enum DirectoryType {
  /**
   * @generated from enum value: DIRECTORY_TYPE_UNSPECIFIED = 0;
   */
  DIRECTORY_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: SCIM = 1;
   */
  SCIM = 1,

  /**
   * @generated from enum value: LDAP = 2;
   */
  LDAP = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(DirectoryType)
proto3.util.setEnumType(DirectoryType, "scalekit.v1.directories.DirectoryType", [
  { no: 0, name: "DIRECTORY_TYPE_UNSPECIFIED" },
  { no: 1, name: "SCIM" },
  { no: 2, name: "LDAP" },
]);

/**
 * @generated from enum scalekit.v1.directories.DirectoryProvider
 */
export enum DirectoryProvider {
  /**
   * @generated from enum value: DIRECTORY_PROVIDER_UNSPECIFIED = 0;
   */
  DIRECTORY_PROVIDER_UNSPECIFIED = 0,

  /**
   * @generated from enum value: OKTA = 1;
   */
  OKTA = 1,

  /**
   * @generated from enum value: GOOGLE = 2;
   */
  GOOGLE = 2,

  /**
   * @generated from enum value: MICROSOFT_AD = 3;
   */
  MICROSOFT_AD = 3,

  /**
   * @generated from enum value: AUTH0 = 4;
   */
  AUTH0 = 4,

  /**
   * @generated from enum value: ONELOGIN = 5;
   */
  ONELOGIN = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(DirectoryProvider)
proto3.util.setEnumType(DirectoryProvider, "scalekit.v1.directories.DirectoryProvider", [
  { no: 0, name: "DIRECTORY_PROVIDER_UNSPECIFIED" },
  { no: 1, name: "OKTA" },
  { no: 2, name: "GOOGLE" },
  { no: 3, name: "MICROSOFT_AD" },
  { no: 4, name: "AUTH0" },
  { no: 5, name: "ONELOGIN" },
]);

/**
 * @generated from enum scalekit.v1.directories.DirectoryStatus
 */
export enum DirectoryStatus {
  /**
   * @generated from enum value: DIRECTORY_STATUS_UNSPECIFIED = 0;
   */
  DIRECTORY_STATUS_UNSPECIFIED = 0,

  /**
   * @generated from enum value: DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * @generated from enum value: IN_PROGRESS = 2;
   */
  IN_PROGRESS = 2,

  /**
   * @generated from enum value: COMPLETED = 3;
   */
  COMPLETED = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(DirectoryStatus)
proto3.util.setEnumType(DirectoryStatus, "scalekit.v1.directories.DirectoryStatus", [
  { no: 0, name: "DIRECTORY_STATUS_UNSPECIFIED" },
  { no: 1, name: "DRAFT" },
  { no: 2, name: "IN_PROGRESS" },
  { no: 3, name: "COMPLETED" },
]);

/**
 * @generated from enum scalekit.v1.directories.SecretStatus
 */
export enum SecretStatus {
  /**
   * @generated from enum value: ACTIVE = 0;
   */
  ACTIVE = 0,

  /**
   * @generated from enum value: INACTIVE = 1;
   */
  INACTIVE = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(SecretStatus)
proto3.util.setEnumType(SecretStatus, "scalekit.v1.directories.SecretStatus", [
  { no: 0, name: "ACTIVE" },
  { no: 1, name: "INACTIVE" },
]);

/**
 * @generated from message scalekit.v1.directories.GetDirectoryRequest
 */
export class GetDirectoryRequest extends Message<GetDirectoryRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string organization_id = 2;
   */
  organizationId = "";

  constructor(data?: PartialMessage<GetDirectoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.GetDirectoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDirectoryRequest {
    return new GetDirectoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDirectoryRequest {
    return new GetDirectoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDirectoryRequest {
    return new GetDirectoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetDirectoryRequest | PlainMessage<GetDirectoryRequest> | undefined, b: GetDirectoryRequest | PlainMessage<GetDirectoryRequest> | undefined): boolean {
    return proto3.util.equals(GetDirectoryRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.GetDirectoryResponse
 */
export class GetDirectoryResponse extends Message<GetDirectoryResponse> {
  /**
   * @generated from field: scalekit.v1.directories.Directory directory = 1;
   */
  directory?: Directory;

  constructor(data?: PartialMessage<GetDirectoryResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.GetDirectoryResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "directory", kind: "message", T: Directory },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDirectoryResponse {
    return new GetDirectoryResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDirectoryResponse {
    return new GetDirectoryResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDirectoryResponse {
    return new GetDirectoryResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetDirectoryResponse | PlainMessage<GetDirectoryResponse> | undefined, b: GetDirectoryResponse | PlainMessage<GetDirectoryResponse> | undefined): boolean {
    return proto3.util.equals(GetDirectoryResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.CreateDirectoryRequest
 */
export class CreateDirectoryRequest extends Message<CreateDirectoryRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  /**
   * @generated from field: scalekit.v1.directories.CreateDirectory directory = 2;
   */
  directory?: CreateDirectory;

  constructor(data?: PartialMessage<CreateDirectoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.CreateDirectoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "directory", kind: "message", T: CreateDirectory },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateDirectoryRequest {
    return new CreateDirectoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateDirectoryRequest {
    return new CreateDirectoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateDirectoryRequest {
    return new CreateDirectoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateDirectoryRequest | PlainMessage<CreateDirectoryRequest> | undefined, b: CreateDirectoryRequest | PlainMessage<CreateDirectoryRequest> | undefined): boolean {
    return proto3.util.equals(CreateDirectoryRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.CreateDirectory
 */
export class CreateDirectory extends Message<CreateDirectory> {
  /**
   * @generated from field: scalekit.v1.directories.DirectoryType directory_type = 1;
   */
  directoryType = DirectoryType.DIRECTORY_TYPE_UNSPECIFIED;

  /**
   * @generated from field: scalekit.v1.directories.DirectoryProvider directory_provider = 2;
   */
  directoryProvider = DirectoryProvider.DIRECTORY_PROVIDER_UNSPECIFIED;

  constructor(data?: PartialMessage<CreateDirectory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.CreateDirectory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "directory_type", kind: "enum", T: proto3.getEnumType(DirectoryType) },
    { no: 2, name: "directory_provider", kind: "enum", T: proto3.getEnumType(DirectoryProvider) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateDirectory {
    return new CreateDirectory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateDirectory {
    return new CreateDirectory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateDirectory {
    return new CreateDirectory().fromJsonString(jsonString, options);
  }

  static equals(a: CreateDirectory | PlainMessage<CreateDirectory> | undefined, b: CreateDirectory | PlainMessage<CreateDirectory> | undefined): boolean {
    return proto3.util.equals(CreateDirectory, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.CreateDirectoryResponse
 */
export class CreateDirectoryResponse extends Message<CreateDirectoryResponse> {
  /**
   * @generated from field: scalekit.v1.directories.Directory directory = 1;
   */
  directory?: Directory;

  constructor(data?: PartialMessage<CreateDirectoryResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.CreateDirectoryResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "directory", kind: "message", T: Directory },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateDirectoryResponse {
    return new CreateDirectoryResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateDirectoryResponse {
    return new CreateDirectoryResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateDirectoryResponse {
    return new CreateDirectoryResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateDirectoryResponse | PlainMessage<CreateDirectoryResponse> | undefined, b: CreateDirectoryResponse | PlainMessage<CreateDirectoryResponse> | undefined): boolean {
    return proto3.util.equals(CreateDirectoryResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.UpdateDirectoryRequest
 */
export class UpdateDirectoryRequest extends Message<UpdateDirectoryRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string organization_id = 2;
   */
  organizationId = "";

  /**
   * @generated from field: scalekit.v1.directories.UpdateDirectory directory = 3;
   */
  directory?: UpdateDirectory;

  constructor(data?: PartialMessage<UpdateDirectoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.UpdateDirectoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "directory", kind: "message", T: UpdateDirectory },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateDirectoryRequest {
    return new UpdateDirectoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateDirectoryRequest {
    return new UpdateDirectoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateDirectoryRequest {
    return new UpdateDirectoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateDirectoryRequest | PlainMessage<UpdateDirectoryRequest> | undefined, b: UpdateDirectoryRequest | PlainMessage<UpdateDirectoryRequest> | undefined): boolean {
    return proto3.util.equals(UpdateDirectoryRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.UpdateDirectory
 */
export class UpdateDirectory extends Message<UpdateDirectory> {
  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: scalekit.v1.directories.DirectoryType directory_type = 3;
   */
  directoryType = DirectoryType.DIRECTORY_TYPE_UNSPECIFIED;

  /**
   * @generated from field: bool enabled = 7;
   */
  enabled = false;

  /**
   * @generated from field: scalekit.v1.directories.DirectoryProvider directory_provider = 8;
   */
  directoryProvider = DirectoryProvider.DIRECTORY_PROVIDER_UNSPECIFIED;

  /**
   * @generated from field: scalekit.v1.directories.DirectoryStatus status = 9;
   */
  status = DirectoryStatus.DIRECTORY_STATUS_UNSPECIFIED;

  /**
   * @generated from field: repeated scalekit.v1.directories.DirectoryMapping mappings = 10;
   */
  mappings: DirectoryMapping[] = [];

  constructor(data?: PartialMessage<UpdateDirectory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.UpdateDirectory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "directory_type", kind: "enum", T: proto3.getEnumType(DirectoryType) },
    { no: 7, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "directory_provider", kind: "enum", T: proto3.getEnumType(DirectoryProvider) },
    { no: 9, name: "status", kind: "enum", T: proto3.getEnumType(DirectoryStatus) },
    { no: 10, name: "mappings", kind: "message", T: DirectoryMapping, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateDirectory {
    return new UpdateDirectory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateDirectory {
    return new UpdateDirectory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateDirectory {
    return new UpdateDirectory().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateDirectory | PlainMessage<UpdateDirectory> | undefined, b: UpdateDirectory | PlainMessage<UpdateDirectory> | undefined): boolean {
    return proto3.util.equals(UpdateDirectory, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.UpdateDirectoryResponse
 */
export class UpdateDirectoryResponse extends Message<UpdateDirectoryResponse> {
  /**
   * @generated from field: scalekit.v1.directories.Directory directory = 1;
   */
  directory?: Directory;

  constructor(data?: PartialMessage<UpdateDirectoryResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.UpdateDirectoryResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "directory", kind: "message", T: Directory },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateDirectoryResponse {
    return new UpdateDirectoryResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateDirectoryResponse {
    return new UpdateDirectoryResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateDirectoryResponse {
    return new UpdateDirectoryResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateDirectoryResponse | PlainMessage<UpdateDirectoryResponse> | undefined, b: UpdateDirectoryResponse | PlainMessage<UpdateDirectoryResponse> | undefined): boolean {
    return proto3.util.equals(UpdateDirectoryResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.ListDirectoriesRequest
 */
export class ListDirectoriesRequest extends Message<ListDirectoriesRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  constructor(data?: PartialMessage<ListDirectoriesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.ListDirectoriesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListDirectoriesRequest {
    return new ListDirectoriesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListDirectoriesRequest {
    return new ListDirectoriesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListDirectoriesRequest {
    return new ListDirectoriesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListDirectoriesRequest | PlainMessage<ListDirectoriesRequest> | undefined, b: ListDirectoriesRequest | PlainMessage<ListDirectoriesRequest> | undefined): boolean {
    return proto3.util.equals(ListDirectoriesRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.ListDirectoriesResponse
 */
export class ListDirectoriesResponse extends Message<ListDirectoriesResponse> {
  /**
   * @generated from field: repeated scalekit.v1.directories.Directory directories = 1;
   */
  directories: Directory[] = [];

  constructor(data?: PartialMessage<ListDirectoriesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.ListDirectoriesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "directories", kind: "message", T: Directory, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListDirectoriesResponse {
    return new ListDirectoriesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListDirectoriesResponse {
    return new ListDirectoriesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListDirectoriesResponse {
    return new ListDirectoriesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListDirectoriesResponse | PlainMessage<ListDirectoriesResponse> | undefined, b: ListDirectoriesResponse | PlainMessage<ListDirectoriesResponse> | undefined): boolean {
    return proto3.util.equals(ListDirectoriesResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.ListDirectoryUsersRequest
 */
export class ListDirectoryUsersRequest extends Message<ListDirectoryUsersRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  /**
   * @generated from field: string directory_id = 2;
   */
  directoryId = "";

  /**
   * @generated from field: uint32 page_size = 3;
   */
  pageSize = 0;

  /**
   * @generated from field: string page_token = 4;
   */
  pageToken = "";

  /**
   * @generated from field: optional bool include_detail = 5;
   */
  includeDetail?: boolean;

  /**
   * @generated from field: optional string directory_group_id = 6;
   */
  directoryGroupId?: string;

  /**
   * @generated from field: optional google.protobuf.Timestamp updated_after = 7;
   */
  updatedAfter?: Timestamp;

  constructor(data?: PartialMessage<ListDirectoryUsersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.ListDirectoryUsersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "directory_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "page_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "include_detail", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 6, name: "directory_group_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "updated_after", kind: "message", T: Timestamp, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListDirectoryUsersRequest {
    return new ListDirectoryUsersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListDirectoryUsersRequest {
    return new ListDirectoryUsersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListDirectoryUsersRequest {
    return new ListDirectoryUsersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListDirectoryUsersRequest | PlainMessage<ListDirectoryUsersRequest> | undefined, b: ListDirectoryUsersRequest | PlainMessage<ListDirectoryUsersRequest> | undefined): boolean {
    return proto3.util.equals(ListDirectoryUsersRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.ListDirectoryUsersResponse
 */
export class ListDirectoryUsersResponse extends Message<ListDirectoryUsersResponse> {
  /**
   * @generated from field: repeated scalekit.v1.directories.DirectoryUser users = 1;
   */
  users: DirectoryUser[] = [];

  /**
   * @generated from field: uint32 total_size = 2;
   */
  totalSize = 0;

  /**
   * @generated from field: string next_page_token = 3;
   */
  nextPageToken = "";

  /**
   * @generated from field: string prev_page_token = 4;
   */
  prevPageToken = "";

  constructor(data?: PartialMessage<ListDirectoryUsersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.ListDirectoryUsersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "users", kind: "message", T: DirectoryUser, repeated: true },
    { no: 2, name: "total_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "prev_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListDirectoryUsersResponse {
    return new ListDirectoryUsersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListDirectoryUsersResponse {
    return new ListDirectoryUsersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListDirectoryUsersResponse {
    return new ListDirectoryUsersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListDirectoryUsersResponse | PlainMessage<ListDirectoryUsersResponse> | undefined, b: ListDirectoryUsersResponse | PlainMessage<ListDirectoryUsersResponse> | undefined): boolean {
    return proto3.util.equals(ListDirectoryUsersResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.ListDirectoryGroupsRequest
 */
export class ListDirectoryGroupsRequest extends Message<ListDirectoryGroupsRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  /**
   * @generated from field: string directory_id = 2;
   */
  directoryId = "";

  /**
   * @generated from field: uint32 page_size = 3;
   */
  pageSize = 0;

  /**
   * @generated from field: string page_token = 4;
   */
  pageToken = "";

  /**
   * @generated from field: optional google.protobuf.Timestamp updated_after = 5;
   */
  updatedAfter?: Timestamp;

  /**
   * @generated from field: optional bool include_detail = 6;
   */
  includeDetail?: boolean;

  constructor(data?: PartialMessage<ListDirectoryGroupsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.ListDirectoryGroupsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "directory_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "page_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "updated_after", kind: "message", T: Timestamp, opt: true },
    { no: 6, name: "include_detail", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListDirectoryGroupsRequest {
    return new ListDirectoryGroupsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListDirectoryGroupsRequest {
    return new ListDirectoryGroupsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListDirectoryGroupsRequest {
    return new ListDirectoryGroupsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListDirectoryGroupsRequest | PlainMessage<ListDirectoryGroupsRequest> | undefined, b: ListDirectoryGroupsRequest | PlainMessage<ListDirectoryGroupsRequest> | undefined): boolean {
    return proto3.util.equals(ListDirectoryGroupsRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.ListDirectoryGroupsResponse
 */
export class ListDirectoryGroupsResponse extends Message<ListDirectoryGroupsResponse> {
  /**
   * @generated from field: repeated scalekit.v1.directories.DirectoryGroup groups = 1;
   */
  groups: DirectoryGroup[] = [];

  /**
   * @generated from field: uint32 total_size = 2;
   */
  totalSize = 0;

  /**
   * @generated from field: string next_page_token = 3;
   */
  nextPageToken = "";

  /**
   * @generated from field: string prev_page_token = 4;
   */
  prevPageToken = "";

  constructor(data?: PartialMessage<ListDirectoryGroupsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.ListDirectoryGroupsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "groups", kind: "message", T: DirectoryGroup, repeated: true },
    { no: 2, name: "total_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "prev_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListDirectoryGroupsResponse {
    return new ListDirectoryGroupsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListDirectoryGroupsResponse {
    return new ListDirectoryGroupsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListDirectoryGroupsResponse {
    return new ListDirectoryGroupsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListDirectoryGroupsResponse | PlainMessage<ListDirectoryGroupsResponse> | undefined, b: ListDirectoryGroupsResponse | PlainMessage<ListDirectoryGroupsResponse> | undefined): boolean {
    return proto3.util.equals(ListDirectoryGroupsResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.Directory
 */
export class Directory extends Message<Directory> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: scalekit.v1.directories.DirectoryType directory_type = 3;
   */
  directoryType = DirectoryType.DIRECTORY_TYPE_UNSPECIFIED;

  /**
   * @generated from field: string organization_id = 4;
   */
  organizationId = "";

  /**
   * @generated from field: bool enabled = 5;
   */
  enabled = false;

  /**
   * @generated from field: scalekit.v1.directories.DirectoryProvider directory_provider = 6;
   */
  directoryProvider = DirectoryProvider.DIRECTORY_PROVIDER_UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.Timestamp last_synced_at = 7;
   */
  lastSyncedAt?: Timestamp;

  /**
   * @generated from field: string directory_endpoint = 8;
   */
  directoryEndpoint = "";

  /**
   * @generated from field: int32 total_users = 9;
   */
  totalUsers = 0;

  /**
   * @generated from field: int32 total_groups = 10;
   */
  totalGroups = 0;

  /**
   * @generated from field: repeated scalekit.v1.directories.Secret secrets = 11;
   */
  secrets: Secret[] = [];

  /**
   * @generated from field: scalekit.v1.directories.Stats stats = 12;
   */
  stats?: Stats;

  /**
   * @generated from field: scalekit.v1.directories.RoleAssignments role_assignments = 13;
   */
  roleAssignments?: RoleAssignments;

  /**
   * @generated from field: scalekit.v1.directories.AttributeMappings attribute_mappings = 14;
   */
  attributeMappings?: AttributeMappings;

  constructor(data?: PartialMessage<Directory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.Directory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "directory_type", kind: "enum", T: proto3.getEnumType(DirectoryType) },
    { no: 4, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "directory_provider", kind: "enum", T: proto3.getEnumType(DirectoryProvider) },
    { no: 7, name: "last_synced_at", kind: "message", T: Timestamp },
    { no: 8, name: "directory_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "total_users", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 10, name: "total_groups", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "secrets", kind: "message", T: Secret, repeated: true },
    { no: 12, name: "stats", kind: "message", T: Stats },
    { no: 13, name: "role_assignments", kind: "message", T: RoleAssignments },
    { no: 14, name: "attribute_mappings", kind: "message", T: AttributeMappings },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Directory {
    return new Directory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Directory {
    return new Directory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Directory {
    return new Directory().fromJsonString(jsonString, options);
  }

  static equals(a: Directory | PlainMessage<Directory> | undefined, b: Directory | PlainMessage<Directory> | undefined): boolean {
    return proto3.util.equals(Directory, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.ToggleDirectoryRequest
 */
export class ToggleDirectoryRequest extends Message<ToggleDirectoryRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  /**
   * @generated from field: string id = 3;
   */
  id = "";

  constructor(data?: PartialMessage<ToggleDirectoryRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.ToggleDirectoryRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ToggleDirectoryRequest {
    return new ToggleDirectoryRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ToggleDirectoryRequest {
    return new ToggleDirectoryRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ToggleDirectoryRequest {
    return new ToggleDirectoryRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ToggleDirectoryRequest | PlainMessage<ToggleDirectoryRequest> | undefined, b: ToggleDirectoryRequest | PlainMessage<ToggleDirectoryRequest> | undefined): boolean {
    return proto3.util.equals(ToggleDirectoryRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.ToggleDirectoryResponse
 */
export class ToggleDirectoryResponse extends Message<ToggleDirectoryResponse> {
  /**
   * @generated from field: bool enabled = 1;
   */
  enabled = false;

  /**
   * @generated from field: optional string error_message = 2;
   */
  errorMessage?: string;

  constructor(data?: PartialMessage<ToggleDirectoryResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.ToggleDirectoryResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "error_message", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ToggleDirectoryResponse {
    return new ToggleDirectoryResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ToggleDirectoryResponse {
    return new ToggleDirectoryResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ToggleDirectoryResponse {
    return new ToggleDirectoryResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ToggleDirectoryResponse | PlainMessage<ToggleDirectoryResponse> | undefined, b: ToggleDirectoryResponse | PlainMessage<ToggleDirectoryResponse> | undefined): boolean {
    return proto3.util.equals(ToggleDirectoryResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.DirectoryMapping
 */
export class DirectoryMapping extends Message<DirectoryMapping> {
  /**
   * @generated from field: string key = 1;
   */
  key = "";

  /**
   * @generated from field: string map_to = 2;
   */
  mapTo = "";

  /**
   * @generated from field: string display_name = 3;
   */
  displayName = "";

  constructor(data?: PartialMessage<DirectoryMapping>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.DirectoryMapping";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "map_to", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DirectoryMapping {
    return new DirectoryMapping().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DirectoryMapping {
    return new DirectoryMapping().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DirectoryMapping {
    return new DirectoryMapping().fromJsonString(jsonString, options);
  }

  static equals(a: DirectoryMapping | PlainMessage<DirectoryMapping> | undefined, b: DirectoryMapping | PlainMessage<DirectoryMapping> | undefined): boolean {
    return proto3.util.equals(DirectoryMapping, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.DirectoryUser
 */
export class DirectoryUser extends Message<DirectoryUser> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string email = 2;
   */
  email = "";

  /**
   * @generated from field: string preferred_username = 3;
   */
  preferredUsername = "";

  /**
   * @generated from field: string given_name = 4;
   */
  givenName = "";

  /**
   * @generated from field: string family_name = 5;
   */
  familyName = "";

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 6;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: repeated string emails = 16;
   */
  emails: string[] = [];

  /**
   * @generated from field: repeated scalekit.v1.directories.DirectoryGroup groups = 17;
   */
  groups: DirectoryGroup[] = [];

  /**
   * @generated from field: google.protobuf.Struct user_detail = 18;
   */
  userDetail?: Struct;

  constructor(data?: PartialMessage<DirectoryUser>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.DirectoryUser";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "preferred_username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "given_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "family_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "updated_at", kind: "message", T: Timestamp },
    { no: 16, name: "emails", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 17, name: "groups", kind: "message", T: DirectoryGroup, repeated: true },
    { no: 18, name: "user_detail", kind: "message", T: Struct },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DirectoryUser {
    return new DirectoryUser().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DirectoryUser {
    return new DirectoryUser().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DirectoryUser {
    return new DirectoryUser().fromJsonString(jsonString, options);
  }

  static equals(a: DirectoryUser | PlainMessage<DirectoryUser> | undefined, b: DirectoryUser | PlainMessage<DirectoryUser> | undefined): boolean {
    return proto3.util.equals(DirectoryUser, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.DirectoryGroup
 */
export class DirectoryGroup extends Message<DirectoryGroup> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string display_name = 2;
   */
  displayName = "";

  /**
   * @generated from field: int32 total_users = 3;
   */
  totalUsers = 0;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 4;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Struct group_detail = 5;
   */
  groupDetail?: Struct;

  constructor(data?: PartialMessage<DirectoryGroup>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.DirectoryGroup";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "total_users", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "updated_at", kind: "message", T: Timestamp },
    { no: 5, name: "group_detail", kind: "message", T: Struct },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DirectoryGroup {
    return new DirectoryGroup().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DirectoryGroup {
    return new DirectoryGroup().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DirectoryGroup {
    return new DirectoryGroup().fromJsonString(jsonString, options);
  }

  static equals(a: DirectoryGroup | PlainMessage<DirectoryGroup> | undefined, b: DirectoryGroup | PlainMessage<DirectoryGroup> | undefined): boolean {
    return proto3.util.equals(DirectoryGroup, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.CreateDirectorySecretRequest
 */
export class CreateDirectorySecretRequest extends Message<CreateDirectorySecretRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  /**
   * @generated from field: string directory_id = 2;
   */
  directoryId = "";

  constructor(data?: PartialMessage<CreateDirectorySecretRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.CreateDirectorySecretRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "directory_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateDirectorySecretRequest {
    return new CreateDirectorySecretRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateDirectorySecretRequest {
    return new CreateDirectorySecretRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateDirectorySecretRequest {
    return new CreateDirectorySecretRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateDirectorySecretRequest | PlainMessage<CreateDirectorySecretRequest> | undefined, b: CreateDirectorySecretRequest | PlainMessage<CreateDirectorySecretRequest> | undefined): boolean {
    return proto3.util.equals(CreateDirectorySecretRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.CreateDirectorySecretResponse
 */
export class CreateDirectorySecretResponse extends Message<CreateDirectorySecretResponse> {
  /**
   * @generated from field: string plain_secret = 1;
   */
  plainSecret = "";

  /**
   * @generated from field: scalekit.v1.directories.Secret secret = 2;
   */
  secret?: Secret;

  constructor(data?: PartialMessage<CreateDirectorySecretResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.CreateDirectorySecretResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "plain_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "secret", kind: "message", T: Secret },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateDirectorySecretResponse {
    return new CreateDirectorySecretResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateDirectorySecretResponse {
    return new CreateDirectorySecretResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateDirectorySecretResponse {
    return new CreateDirectorySecretResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateDirectorySecretResponse | PlainMessage<CreateDirectorySecretResponse> | undefined, b: CreateDirectorySecretResponse | PlainMessage<CreateDirectorySecretResponse> | undefined): boolean {
    return proto3.util.equals(CreateDirectorySecretResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.RegenerateDirectorySecretRequest
 */
export class RegenerateDirectorySecretRequest extends Message<RegenerateDirectorySecretRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  /**
   * @generated from field: string directory_id = 2;
   */
  directoryId = "";

  constructor(data?: PartialMessage<RegenerateDirectorySecretRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.RegenerateDirectorySecretRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "directory_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegenerateDirectorySecretRequest {
    return new RegenerateDirectorySecretRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegenerateDirectorySecretRequest {
    return new RegenerateDirectorySecretRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegenerateDirectorySecretRequest {
    return new RegenerateDirectorySecretRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RegenerateDirectorySecretRequest | PlainMessage<RegenerateDirectorySecretRequest> | undefined, b: RegenerateDirectorySecretRequest | PlainMessage<RegenerateDirectorySecretRequest> | undefined): boolean {
    return proto3.util.equals(RegenerateDirectorySecretRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.RegenerateDirectorySecretResponse
 */
export class RegenerateDirectorySecretResponse extends Message<RegenerateDirectorySecretResponse> {
  /**
   * @generated from field: string plain_secret = 1;
   */
  plainSecret = "";

  /**
   * @generated from field: scalekit.v1.directories.Secret secret = 2;
   */
  secret?: Secret;

  constructor(data?: PartialMessage<RegenerateDirectorySecretResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.RegenerateDirectorySecretResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "plain_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "secret", kind: "message", T: Secret },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegenerateDirectorySecretResponse {
    return new RegenerateDirectorySecretResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegenerateDirectorySecretResponse {
    return new RegenerateDirectorySecretResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegenerateDirectorySecretResponse {
    return new RegenerateDirectorySecretResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RegenerateDirectorySecretResponse | PlainMessage<RegenerateDirectorySecretResponse> | undefined, b: RegenerateDirectorySecretResponse | PlainMessage<RegenerateDirectorySecretResponse> | undefined): boolean {
    return proto3.util.equals(RegenerateDirectorySecretResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.Secret
 */
export class Secret extends Message<Secret> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * @generated from field: string secret_suffix = 4;
   */
  secretSuffix = "";

  /**
   * @generated from field: scalekit.v1.directories.SecretStatus status = 5;
   */
  status = SecretStatus.ACTIVE;

  /**
   * @generated from field: google.protobuf.Timestamp expire_time = 6;
   */
  expireTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp last_used_time = 7;
   */
  lastUsedTime?: Timestamp;

  /**
   * @generated from field: string directory_id = 9;
   */
  directoryId = "";

  constructor(data?: PartialMessage<Secret>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.Secret";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "create_time", kind: "message", T: Timestamp },
    { no: 4, name: "secret_suffix", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "status", kind: "enum", T: proto3.getEnumType(SecretStatus) },
    { no: 6, name: "expire_time", kind: "message", T: Timestamp },
    { no: 7, name: "last_used_time", kind: "message", T: Timestamp },
    { no: 9, name: "directory_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Secret {
    return new Secret().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Secret {
    return new Secret().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Secret {
    return new Secret().fromJsonString(jsonString, options);
  }

  static equals(a: Secret | PlainMessage<Secret> | undefined, b: Secret | PlainMessage<Secret> | undefined): boolean {
    return proto3.util.equals(Secret, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.Stats
 */
export class Stats extends Message<Stats> {
  /**
   * @generated from field: int32 total_users = 1;
   */
  totalUsers = 0;

  /**
   * @generated from field: int32 total_groups = 2;
   */
  totalGroups = 0;

  /**
   * @generated from field: google.protobuf.Timestamp group_updated_at = 3;
   */
  groupUpdatedAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp user_updated_at = 4;
   */
  userUpdatedAt?: Timestamp;

  constructor(data?: PartialMessage<Stats>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.Stats";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "total_users", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "total_groups", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "group_updated_at", kind: "message", T: Timestamp },
    { no: 4, name: "user_updated_at", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Stats {
    return new Stats().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Stats {
    return new Stats().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Stats {
    return new Stats().fromJsonString(jsonString, options);
  }

  static equals(a: Stats | PlainMessage<Stats> | undefined, b: Stats | PlainMessage<Stats> | undefined): boolean {
    return proto3.util.equals(Stats, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.AssignRolesRequest
 */
export class AssignRolesRequest extends Message<AssignRolesRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  /**
   * @generated from field: scalekit.v1.directories.RoleAssignments role_assignments = 3;
   */
  roleAssignments?: RoleAssignments;

  constructor(data?: PartialMessage<AssignRolesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.AssignRolesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "role_assignments", kind: "message", T: RoleAssignments },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssignRolesRequest {
    return new AssignRolesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssignRolesRequest {
    return new AssignRolesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssignRolesRequest {
    return new AssignRolesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AssignRolesRequest | PlainMessage<AssignRolesRequest> | undefined, b: AssignRolesRequest | PlainMessage<AssignRolesRequest> | undefined): boolean {
    return proto3.util.equals(AssignRolesRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.RoleAssignments
 */
export class RoleAssignments extends Message<RoleAssignments> {
  /**
   * @generated from field: repeated scalekit.v1.directories.RoleAssignment assignments = 1;
   */
  assignments: RoleAssignment[] = [];

  constructor(data?: PartialMessage<RoleAssignments>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.RoleAssignments";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "assignments", kind: "message", T: RoleAssignment, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoleAssignments {
    return new RoleAssignments().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoleAssignments {
    return new RoleAssignments().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoleAssignments {
    return new RoleAssignments().fromJsonString(jsonString, options);
  }

  static equals(a: RoleAssignments | PlainMessage<RoleAssignments> | undefined, b: RoleAssignments | PlainMessage<RoleAssignments> | undefined): boolean {
    return proto3.util.equals(RoleAssignments, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.AssignRolesResponse
 */
export class AssignRolesResponse extends Message<AssignRolesResponse> {
  /**
   * @generated from field: scalekit.v1.directories.RoleAssignments role_assignments = 1;
   */
  roleAssignments?: RoleAssignments;

  constructor(data?: PartialMessage<AssignRolesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.AssignRolesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "role_assignments", kind: "message", T: RoleAssignments },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssignRolesResponse {
    return new AssignRolesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssignRolesResponse {
    return new AssignRolesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssignRolesResponse {
    return new AssignRolesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AssignRolesResponse | PlainMessage<AssignRolesResponse> | undefined, b: AssignRolesResponse | PlainMessage<AssignRolesResponse> | undefined): boolean {
    return proto3.util.equals(AssignRolesResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.RoleAssignment
 */
export class RoleAssignment extends Message<RoleAssignment> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId = "";

  /**
   * @generated from field: string role_id = 2;
   */
  roleId = "";

  constructor(data?: PartialMessage<RoleAssignment>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.RoleAssignment";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "role_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RoleAssignment {
    return new RoleAssignment().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RoleAssignment {
    return new RoleAssignment().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RoleAssignment {
    return new RoleAssignment().fromJsonString(jsonString, options);
  }

  static equals(a: RoleAssignment | PlainMessage<RoleAssignment> | undefined, b: RoleAssignment | PlainMessage<RoleAssignment> | undefined): boolean {
    return proto3.util.equals(RoleAssignment, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.UpdateAttributesRequest
 */
export class UpdateAttributesRequest extends Message<UpdateAttributesRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  /**
   * @generated from field: string id = 2;
   */
  id = "";

  /**
   * @generated from field: scalekit.v1.directories.AttributeMappings attribute_mapping = 3;
   */
  attributeMapping?: AttributeMappings;

  constructor(data?: PartialMessage<UpdateAttributesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.UpdateAttributesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "attribute_mapping", kind: "message", T: AttributeMappings },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAttributesRequest {
    return new UpdateAttributesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAttributesRequest {
    return new UpdateAttributesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAttributesRequest {
    return new UpdateAttributesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAttributesRequest | PlainMessage<UpdateAttributesRequest> | undefined, b: UpdateAttributesRequest | PlainMessage<UpdateAttributesRequest> | undefined): boolean {
    return proto3.util.equals(UpdateAttributesRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.AttributeMappings
 */
export class AttributeMappings extends Message<AttributeMappings> {
  /**
   * @generated from field: repeated scalekit.v1.directories.AttributeMapping attributes = 1;
   */
  attributes: AttributeMapping[] = [];

  constructor(data?: PartialMessage<AttributeMappings>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.AttributeMappings";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "attributes", kind: "message", T: AttributeMapping, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AttributeMappings {
    return new AttributeMappings().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AttributeMappings {
    return new AttributeMappings().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AttributeMappings {
    return new AttributeMappings().fromJsonString(jsonString, options);
  }

  static equals(a: AttributeMappings | PlainMessage<AttributeMappings> | undefined, b: AttributeMappings | PlainMessage<AttributeMappings> | undefined): boolean {
    return proto3.util.equals(AttributeMappings, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.AttributeMapping
 */
export class AttributeMapping extends Message<AttributeMapping> {
  /**
   * @generated from field: string key = 1;
   */
  key = "";

  /**
   * @generated from field: string map_to = 2;
   */
  mapTo = "";

  constructor(data?: PartialMessage<AttributeMapping>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.AttributeMapping";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "map_to", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AttributeMapping {
    return new AttributeMapping().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AttributeMapping {
    return new AttributeMapping().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AttributeMapping {
    return new AttributeMapping().fromJsonString(jsonString, options);
  }

  static equals(a: AttributeMapping | PlainMessage<AttributeMapping> | undefined, b: AttributeMapping | PlainMessage<AttributeMapping> | undefined): boolean {
    return proto3.util.equals(AttributeMapping, a, b);
  }
}

/**
 * @generated from message scalekit.v1.directories.UpdateAttributesResponse
 */
export class UpdateAttributesResponse extends Message<UpdateAttributesResponse> {
  /**
   * @generated from field: scalekit.v1.directories.AttributeMappings attribute_mappings = 1;
   */
  attributeMappings?: AttributeMappings;

  constructor(data?: PartialMessage<UpdateAttributesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.directories.UpdateAttributesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "attribute_mappings", kind: "message", T: AttributeMappings },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateAttributesResponse {
    return new UpdateAttributesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateAttributesResponse {
    return new UpdateAttributesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateAttributesResponse {
    return new UpdateAttributesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateAttributesResponse | PlainMessage<UpdateAttributesResponse> | undefined, b: UpdateAttributesResponse | PlainMessage<UpdateAttributesResponse> | undefined): boolean {
    return proto3.util.equals(UpdateAttributesResponse, a, b);
  }
}

