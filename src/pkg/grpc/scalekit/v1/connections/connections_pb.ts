// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file scalekit/v1/connections/connections.proto (package scalekit.v1.connections, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { BoolValue, Message, proto3, protoInt64, StringValue, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from enum scalekit.v1.connections.ConfigurationType
 */
export enum ConfigurationType {
  /**
   * @generated from enum value: CONFIGURATION_TYPE_UNSPECIFIED = 0;
   */
  CONFIGURATION_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: DISCOVERY = 1;
   */
  DISCOVERY = 1,

  /**
   * @generated from enum value: MANUAL = 2;
   */
  MANUAL = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ConfigurationType)
proto3.util.setEnumType(ConfigurationType, "scalekit.v1.connections.ConfigurationType", [
  { no: 0, name: "CONFIGURATION_TYPE_UNSPECIFIED" },
  { no: 1, name: "DISCOVERY" },
  { no: 2, name: "MANUAL" },
]);

/**
 * @generated from enum scalekit.v1.connections.NameIdFormat
 */
export enum NameIdFormat {
  /**
   * @generated from enum value: NAME_ID_FORMAT_NIL = 0;
   */
  NAME_ID_FORMAT_NIL = 0,

  /**
   * @generated from enum value: UNSPECIFIED = 1;
   */
  UNSPECIFIED = 1,

  /**
   * @generated from enum value: EMAIL = 2;
   */
  EMAIL = 2,

  /**
   * @generated from enum value: TRANSIENT = 3;
   */
  TRANSIENT = 3,

  /**
   * @generated from enum value: PERSISTENT = 4;
   */
  PERSISTENT = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(NameIdFormat)
proto3.util.setEnumType(NameIdFormat, "scalekit.v1.connections.NameIdFormat", [
  { no: 0, name: "NAME_ID_FORMAT_NIL" },
  { no: 1, name: "UNSPECIFIED" },
  { no: 2, name: "EMAIL" },
  { no: 3, name: "TRANSIENT" },
  { no: 4, name: "PERSISTENT" },
]);

/**
 * enums all
 *
 * @generated from enum scalekit.v1.connections.SAMLSigningOptions
 */
export enum SAMLSigningOptions {
  /**
   * @generated from enum value: SAML_SIGNING_OPTIONS_UNSPECIFIED = 0;
   */
  SAML_SIGNING_OPTIONS_UNSPECIFIED = 0,

  /**
   * @generated from enum value: NO_SIGNING = 1;
   */
  NO_SIGNING = 1,

  /**
   * @generated from enum value: SAML_ONLY_RESPONSE_SIGNING = 2;
   */
  SAML_ONLY_RESPONSE_SIGNING = 2,

  /**
   * @generated from enum value: SAML_ONLY_ASSERTION_SIGNING = 3;
   */
  SAML_ONLY_ASSERTION_SIGNING = 3,

  /**
   * @generated from enum value: SAML_RESPONSE_ASSERTION_SIGNING = 4;
   */
  SAML_RESPONSE_ASSERTION_SIGNING = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(SAMLSigningOptions)
proto3.util.setEnumType(SAMLSigningOptions, "scalekit.v1.connections.SAMLSigningOptions", [
  { no: 0, name: "SAML_SIGNING_OPTIONS_UNSPECIFIED" },
  { no: 1, name: "NO_SIGNING" },
  { no: 2, name: "SAML_ONLY_RESPONSE_SIGNING" },
  { no: 3, name: "SAML_ONLY_ASSERTION_SIGNING" },
  { no: 4, name: "SAML_RESPONSE_ASSERTION_SIGNING" },
]);

/**
 * @generated from enum scalekit.v1.connections.RequestBinding
 */
export enum RequestBinding {
  /**
   * @generated from enum value: REQUEST_BINDING_UNSPECIFIED = 0;
   */
  REQUEST_BINDING_UNSPECIFIED = 0,

  /**
   * @generated from enum value: HTTP_POST = 1;
   */
  HTTP_POST = 1,

  /**
   * @generated from enum value: HTTP_REDIRECT = 2;
   */
  HTTP_REDIRECT = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(RequestBinding)
proto3.util.setEnumType(RequestBinding, "scalekit.v1.connections.RequestBinding", [
  { no: 0, name: "REQUEST_BINDING_UNSPECIFIED" },
  { no: 1, name: "HTTP_POST" },
  { no: 2, name: "HTTP_REDIRECT" },
]);

/**
 * @generated from enum scalekit.v1.connections.TokenAuthType
 */
export enum TokenAuthType {
  /**
   * @generated from enum value: TOKEN_AUTH_TYPE_UNSPECIFIED = 0;
   */
  TOKEN_AUTH_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: URL_PARAMS = 1;
   */
  URL_PARAMS = 1,

  /**
   * @generated from enum value: BASIC_AUTH = 2;
   */
  BASIC_AUTH = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(TokenAuthType)
proto3.util.setEnumType(TokenAuthType, "scalekit.v1.connections.TokenAuthType", [
  { no: 0, name: "TOKEN_AUTH_TYPE_UNSPECIFIED" },
  { no: 1, name: "URL_PARAMS" },
  { no: 2, name: "BASIC_AUTH" },
]);

/**
 * @generated from enum scalekit.v1.connections.OIDCScope
 */
export enum OIDCScope {
  /**
   * @generated from enum value: OIDC_SCOPE_UNSPECIFIED = 0;
   */
  OIDC_SCOPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: openid = 1;
   */
  openid = 1,

  /**
   * @generated from enum value: profile = 2;
   */
  profile = 2,

  /**
   * @generated from enum value: email = 3;
   */
  email = 3,

  /**
   * @generated from enum value: address = 4;
   */
  address = 4,

  /**
   * @generated from enum value: phone = 5;
   */
  phone = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(OIDCScope)
proto3.util.setEnumType(OIDCScope, "scalekit.v1.connections.OIDCScope", [
  { no: 0, name: "OIDC_SCOPE_UNSPECIFIED" },
  { no: 1, name: "openid" },
  { no: 2, name: "profile" },
  { no: 3, name: "email" },
  { no: 4, name: "address" },
  { no: 5, name: "phone" },
]);

/**
 * @generated from enum scalekit.v1.connections.ConnectionType
 */
export enum ConnectionType {
  /**
   * @generated from enum value: INVALID = 0;
   */
  INVALID = 0,

  /**
   * @generated from enum value: OIDC = 1;
   */
  OIDC = 1,

  /**
   * @generated from enum value: SAML = 2;
   */
  SAML = 2,

  /**
   * @generated from enum value: PASSWORD = 3;
   */
  PASSWORD = 3,

  /**
   * @generated from enum value: OAUTH = 4;
   */
  OAUTH = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ConnectionType)
proto3.util.setEnumType(ConnectionType, "scalekit.v1.connections.ConnectionType", [
  { no: 0, name: "INVALID" },
  { no: 1, name: "OIDC" },
  { no: 2, name: "SAML" },
  { no: 3, name: "PASSWORD" },
  { no: 4, name: "OAUTH" },
]);

/**
 * @generated from enum scalekit.v1.connections.ConnectionStatus
 */
export enum ConnectionStatus {
  /**
   * @generated from enum value: CONNECTION_STATUS_UNSPECIFIED = 0;
   */
  CONNECTION_STATUS_UNSPECIFIED = 0,

  /**
   * @generated from enum value: DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * @generated from enum value: IN_PROGRESS = 2;
   */
  IN_PROGRESS = 2,

  /**
   * @generated from enum value: COMPLETED = 3;
   */
  COMPLETED = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ConnectionStatus)
proto3.util.setEnumType(ConnectionStatus, "scalekit.v1.connections.ConnectionStatus", [
  { no: 0, name: "CONNECTION_STATUS_UNSPECIFIED" },
  { no: 1, name: "DRAFT" },
  { no: 2, name: "IN_PROGRESS" },
  { no: 3, name: "COMPLETED" },
]);

/**
 * @generated from enum scalekit.v1.connections.ConnectionProvider
 */
export enum ConnectionProvider {
  /**
   * @generated from enum value: CONNECTION_PROVIDER_UNSPECIFIED = 0;
   */
  CONNECTION_PROVIDER_UNSPECIFIED = 0,

  /**
   * @generated from enum value: OKTA = 1;
   */
  OKTA = 1,

  /**
   * @generated from enum value: GOOGLE = 2;
   */
  GOOGLE = 2,

  /**
   * @generated from enum value: MICROSOFT_AD = 3;
   */
  MICROSOFT_AD = 3,

  /**
   * @generated from enum value: AUTH0 = 4;
   */
  AUTH0 = 4,

  /**
   * @generated from enum value: ONELOGIN = 5;
   */
  ONELOGIN = 5,

  /**
   * @generated from enum value: PING_IDENTITY = 6;
   */
  PING_IDENTITY = 6,

  /**
   * @generated from enum value: JUMPCLOUD = 7;
   */
  JUMPCLOUD = 7,

  /**
   * @generated from enum value: CUSTOM = 8;
   */
  CUSTOM = 8,

  /**
   * @generated from enum value: GITHUB = 9;
   */
  GITHUB = 9,

  /**
   * @generated from enum value: GITLAB = 10;
   */
  GITLAB = 10,

  /**
   * @generated from enum value: LINKEDIN = 11;
   */
  LINKEDIN = 11,

  /**
   * @generated from enum value: SALESFORCE = 12;
   */
  SALESFORCE = 12,
}
// Retrieve enum metadata with: proto3.getEnumType(ConnectionProvider)
proto3.util.setEnumType(ConnectionProvider, "scalekit.v1.connections.ConnectionProvider", [
  { no: 0, name: "CONNECTION_PROVIDER_UNSPECIFIED" },
  { no: 1, name: "OKTA" },
  { no: 2, name: "GOOGLE" },
  { no: 3, name: "MICROSOFT_AD" },
  { no: 4, name: "AUTH0" },
  { no: 5, name: "ONELOGIN" },
  { no: 6, name: "PING_IDENTITY" },
  { no: 7, name: "JUMPCLOUD" },
  { no: 8, name: "CUSTOM" },
  { no: 9, name: "GITHUB" },
  { no: 10, name: "GITLAB" },
  { no: 11, name: "LINKEDIN" },
  { no: 12, name: "SALESFORCE" },
]);

/**
 * @generated from message scalekit.v1.connections.GetProvidersRequest
 */
export class GetProvidersRequest extends Message<GetProvidersRequest> {
  constructor(data?: PartialMessage<GetProvidersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.GetProvidersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetProvidersRequest {
    return new GetProvidersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetProvidersRequest {
    return new GetProvidersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetProvidersRequest {
    return new GetProvidersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetProvidersRequest | PlainMessage<GetProvidersRequest> | undefined, b: GetProvidersRequest | PlainMessage<GetProvidersRequest> | undefined): boolean {
    return proto3.util.equals(GetProvidersRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.GetProvidersResponse
 */
export class GetProvidersResponse extends Message<GetProvidersResponse> {
  /**
   * @generated from field: repeated scalekit.v1.connections.Provider providers = 1;
   */
  providers: Provider[] = [];

  constructor(data?: PartialMessage<GetProvidersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.GetProvidersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "providers", kind: "message", T: Provider, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetProvidersResponse {
    return new GetProvidersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetProvidersResponse {
    return new GetProvidersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetProvidersResponse {
    return new GetProvidersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetProvidersResponse | PlainMessage<GetProvidersResponse> | undefined, b: GetProvidersResponse | PlainMessage<GetProvidersResponse> | undefined): boolean {
    return proto3.util.equals(GetProvidersResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.Provider
 */
export class Provider extends Message<Provider> {
  /**
   * @generated from field: string key_id = 1;
   */
  keyId = "";

  /**
   * @generated from field: string display_name = 2;
   */
  displayName = "";

  /**
   * @generated from field: optional string description = 3;
   */
  description?: string;

  constructor(data?: PartialMessage<Provider>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.Provider";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Provider {
    return new Provider().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Provider {
    return new Provider().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Provider {
    return new Provider().fromJsonString(jsonString, options);
  }

  static equals(a: Provider | PlainMessage<Provider> | undefined, b: Provider | PlainMessage<Provider> | undefined): boolean {
    return proto3.util.equals(Provider, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.CreateEnvironmentConnectionRequest
 */
export class CreateEnvironmentConnectionRequest extends Message<CreateEnvironmentConnectionRequest> {
  /**
   * @generated from field: scalekit.v1.connections.CreateConnection connection = 1;
   */
  connection?: CreateConnection;

  constructor(data?: PartialMessage<CreateEnvironmentConnectionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.CreateEnvironmentConnectionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "connection", kind: "message", T: CreateConnection },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateEnvironmentConnectionRequest {
    return new CreateEnvironmentConnectionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateEnvironmentConnectionRequest {
    return new CreateEnvironmentConnectionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateEnvironmentConnectionRequest {
    return new CreateEnvironmentConnectionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateEnvironmentConnectionRequest | PlainMessage<CreateEnvironmentConnectionRequest> | undefined, b: CreateEnvironmentConnectionRequest | PlainMessage<CreateEnvironmentConnectionRequest> | undefined): boolean {
    return proto3.util.equals(CreateEnvironmentConnectionRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.CreateConnectionRequest
 */
export class CreateConnectionRequest extends Message<CreateConnectionRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  /**
   * @generated from field: scalekit.v1.connections.CreateConnection connection = 3;
   */
  connection?: CreateConnection;

  constructor(data?: PartialMessage<CreateConnectionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.CreateConnectionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "connection", kind: "message", T: CreateConnection },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateConnectionRequest {
    return new CreateConnectionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateConnectionRequest {
    return new CreateConnectionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateConnectionRequest {
    return new CreateConnectionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateConnectionRequest | PlainMessage<CreateConnectionRequest> | undefined, b: CreateConnectionRequest | PlainMessage<CreateConnectionRequest> | undefined): boolean {
    return proto3.util.equals(CreateConnectionRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.CreateConnection
 */
export class CreateConnection extends Message<CreateConnection> {
  /**
   * @generated from field: scalekit.v1.connections.ConnectionProvider provider = 1;
   */
  provider = ConnectionProvider.CONNECTION_PROVIDER_UNSPECIFIED;

  /**
   * @generated from field: scalekit.v1.connections.ConnectionType type = 2;
   */
  type = ConnectionType.INVALID;

  constructor(data?: PartialMessage<CreateConnection>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.CreateConnection";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "provider", kind: "enum", T: proto3.getEnumType(ConnectionProvider) },
    { no: 2, name: "type", kind: "enum", T: proto3.getEnumType(ConnectionType) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateConnection {
    return new CreateConnection().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateConnection {
    return new CreateConnection().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateConnection {
    return new CreateConnection().fromJsonString(jsonString, options);
  }

  static equals(a: CreateConnection | PlainMessage<CreateConnection> | undefined, b: CreateConnection | PlainMessage<CreateConnection> | undefined): boolean {
    return proto3.util.equals(CreateConnection, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.Connection
 */
export class Connection extends Message<Connection> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: scalekit.v1.connections.ConnectionProvider provider = 2;
   */
  provider = ConnectionProvider.CONNECTION_PROVIDER_UNSPECIFIED;

  /**
   * @generated from field: scalekit.v1.connections.ConnectionType type = 3;
   */
  type = ConnectionType.INVALID;

  /**
   * @generated from field: scalekit.v1.connections.ConnectionStatus status = 4;
   */
  status = ConnectionStatus.CONNECTION_STATUS_UNSPECIFIED;

  /**
   * @generated from field: bool enabled = 5;
   */
  enabled = false;

  /**
   * @generated from field: bool debug_enabled = 6;
   */
  debugEnabled = false;

  /**
   * @generated from field: optional string organization_id = 7;
   */
  organizationId?: string;

  /**
   * @generated from field: string ui_button_title = 8;
   */
  uiButtonTitle = "";

  /**
   * @generated from field: scalekit.v1.connections.ConfigurationType configuration_type = 9;
   */
  configurationType = ConfigurationType.CONFIGURATION_TYPE_UNSPECIFIED;

  /**
   * @generated from field: string test_connection_uri = 12;
   */
  testConnectionUri = "";

  /**
   * @generated from field: map<string, string> attribute_mapping = 15;
   */
  attributeMapping: { [key: string]: string } = {};

  /**
   * @generated from field: google.protobuf.Timestamp create_time = 16;
   */
  createTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp update_time = 17;
   */
  updateTime?: Timestamp;

  /**
   * @generated from oneof scalekit.v1.connections.Connection.settings
   */
  settings: {
    /**
     * @generated from field: scalekit.v1.connections.OIDCConnectionConfig oidc_config = 18;
     */
    value: OIDCConnectionConfig;
    case: "oidcConfig";
  } | {
    /**
     * @generated from field: scalekit.v1.connections.SAMLConnectionConfigResponse saml_config = 19;
     */
    value: SAMLConnectionConfigResponse;
    case: "samlConfig";
  } | {
    /**
     * @generated from field: scalekit.v1.connections.OAuthConnectionConfig oauth_config = 20;
     */
    value: OAuthConnectionConfig;
    case: "oauthConfig";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * @generated from field: optional string key_id = 21;
   */
  keyId?: string;

  constructor(data?: PartialMessage<Connection>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.Connection";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "provider", kind: "enum", T: proto3.getEnumType(ConnectionProvider) },
    { no: 3, name: "type", kind: "enum", T: proto3.getEnumType(ConnectionType) },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(ConnectionStatus) },
    { no: 5, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "debug_enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "ui_button_title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "configuration_type", kind: "enum", T: proto3.getEnumType(ConfigurationType) },
    { no: 12, name: "test_connection_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "attribute_mapping", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 16, name: "create_time", kind: "message", T: Timestamp },
    { no: 17, name: "update_time", kind: "message", T: Timestamp },
    { no: 18, name: "oidc_config", kind: "message", T: OIDCConnectionConfig, oneof: "settings" },
    { no: 19, name: "saml_config", kind: "message", T: SAMLConnectionConfigResponse, oneof: "settings" },
    { no: 20, name: "oauth_config", kind: "message", T: OAuthConnectionConfig, oneof: "settings" },
    { no: 21, name: "key_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Connection {
    return new Connection().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Connection {
    return new Connection().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Connection {
    return new Connection().fromJsonString(jsonString, options);
  }

  static equals(a: Connection | PlainMessage<Connection> | undefined, b: Connection | PlainMessage<Connection> | undefined): boolean {
    return proto3.util.equals(Connection, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.CreateConnectionResponse
 */
export class CreateConnectionResponse extends Message<CreateConnectionResponse> {
  /**
   * @generated from field: scalekit.v1.connections.Connection connection = 1;
   */
  connection?: Connection;

  constructor(data?: PartialMessage<CreateConnectionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.CreateConnectionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "connection", kind: "message", T: Connection },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateConnectionResponse {
    return new CreateConnectionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateConnectionResponse {
    return new CreateConnectionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateConnectionResponse {
    return new CreateConnectionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateConnectionResponse | PlainMessage<CreateConnectionResponse> | undefined, b: CreateConnectionResponse | PlainMessage<CreateConnectionResponse> | undefined): boolean {
    return proto3.util.equals(CreateConnectionResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.UpdateEnvironmentConnectionRequest
 */
export class UpdateEnvironmentConnectionRequest extends Message<UpdateEnvironmentConnectionRequest> {
  /**
   * @generated from field: string connection_id = 1;
   */
  connectionId = "";

  /**
   * @generated from field: scalekit.v1.connections.UpdateConnection connection = 3;
   */
  connection?: UpdateConnection;

  constructor(data?: PartialMessage<UpdateEnvironmentConnectionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.UpdateEnvironmentConnectionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "connection", kind: "message", T: UpdateConnection },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateEnvironmentConnectionRequest {
    return new UpdateEnvironmentConnectionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateEnvironmentConnectionRequest {
    return new UpdateEnvironmentConnectionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateEnvironmentConnectionRequest {
    return new UpdateEnvironmentConnectionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateEnvironmentConnectionRequest | PlainMessage<UpdateEnvironmentConnectionRequest> | undefined, b: UpdateEnvironmentConnectionRequest | PlainMessage<UpdateEnvironmentConnectionRequest> | undefined): boolean {
    return proto3.util.equals(UpdateEnvironmentConnectionRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.UpdateConnectionRequest
 */
export class UpdateConnectionRequest extends Message<UpdateConnectionRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  /**
   * @generated from field: string id = 3;
   */
  id = "";

  /**
   * @generated from field: scalekit.v1.connections.UpdateConnection connection = 4;
   */
  connection?: UpdateConnection;

  constructor(data?: PartialMessage<UpdateConnectionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.UpdateConnectionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "connection", kind: "message", T: UpdateConnection },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateConnectionRequest {
    return new UpdateConnectionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateConnectionRequest {
    return new UpdateConnectionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateConnectionRequest {
    return new UpdateConnectionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateConnectionRequest | PlainMessage<UpdateConnectionRequest> | undefined, b: UpdateConnectionRequest | PlainMessage<UpdateConnectionRequest> | undefined): boolean {
    return proto3.util.equals(UpdateConnectionRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.UpdateConnection
 */
export class UpdateConnection extends Message<UpdateConnection> {
  /**
   * @generated from field: scalekit.v1.connections.ConnectionProvider provider = 2;
   */
  provider = ConnectionProvider.CONNECTION_PROVIDER_UNSPECIFIED;

  /**
   * @generated from field: scalekit.v1.connections.ConnectionType type = 3;
   */
  type = ConnectionType.INVALID;

  /**
   * @generated from field: google.protobuf.BoolValue debug_enabled = 6;
   */
  debugEnabled?: boolean;

  /**
   * @generated from field: google.protobuf.StringValue ui_button_title = 8;
   */
  uiButtonTitle?: string;

  /**
   * @generated from field: scalekit.v1.connections.ConfigurationType configuration_type = 11;
   */
  configurationType = ConfigurationType.CONFIGURATION_TYPE_UNSPECIFIED;

  /**
   * @generated from field: map<string, string> attribute_mapping = 15;
   */
  attributeMapping: { [key: string]: string } = {};

  /**
   * @generated from oneof scalekit.v1.connections.UpdateConnection.settings
   */
  settings: {
    /**
     * @generated from field: scalekit.v1.connections.OIDCConnectionConfig oidc_config = 16;
     */
    value: OIDCConnectionConfig;
    case: "oidcConfig";
  } | {
    /**
     * @generated from field: scalekit.v1.connections.SAMLConnectionConfigRequest saml_config = 17;
     */
    value: SAMLConnectionConfigRequest;
    case: "samlConfig";
  } | {
    /**
     * @generated from field: scalekit.v1.connections.OAuthConnectionConfig oauth_config = 18;
     */
    value: OAuthConnectionConfig;
    case: "oauthConfig";
  } | { case: undefined; value?: undefined } = { case: undefined };

  /**
   * @generated from field: optional string key_id = 19;
   */
  keyId?: string;

  constructor(data?: PartialMessage<UpdateConnection>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.UpdateConnection";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "provider", kind: "enum", T: proto3.getEnumType(ConnectionProvider) },
    { no: 3, name: "type", kind: "enum", T: proto3.getEnumType(ConnectionType) },
    { no: 6, name: "debug_enabled", kind: "message", T: BoolValue },
    { no: 8, name: "ui_button_title", kind: "message", T: StringValue },
    { no: 11, name: "configuration_type", kind: "enum", T: proto3.getEnumType(ConfigurationType) },
    { no: 15, name: "attribute_mapping", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 16, name: "oidc_config", kind: "message", T: OIDCConnectionConfig, oneof: "settings" },
    { no: 17, name: "saml_config", kind: "message", T: SAMLConnectionConfigRequest, oneof: "settings" },
    { no: 18, name: "oauth_config", kind: "message", T: OAuthConnectionConfig, oneof: "settings" },
    { no: 19, name: "key_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateConnection {
    return new UpdateConnection().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateConnection {
    return new UpdateConnection().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateConnection {
    return new UpdateConnection().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateConnection | PlainMessage<UpdateConnection> | undefined, b: UpdateConnection | PlainMessage<UpdateConnection> | undefined): boolean {
    return proto3.util.equals(UpdateConnection, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.UpdateConnectionResponse
 */
export class UpdateConnectionResponse extends Message<UpdateConnectionResponse> {
  /**
   * @generated from field: scalekit.v1.connections.Connection connection = 1;
   */
  connection?: Connection;

  constructor(data?: PartialMessage<UpdateConnectionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.UpdateConnectionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "connection", kind: "message", T: Connection },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateConnectionResponse {
    return new UpdateConnectionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateConnectionResponse {
    return new UpdateConnectionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateConnectionResponse {
    return new UpdateConnectionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateConnectionResponse | PlainMessage<UpdateConnectionResponse> | undefined, b: UpdateConnectionResponse | PlainMessage<UpdateConnectionResponse> | undefined): boolean {
    return proto3.util.equals(UpdateConnectionResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.DeleteEnvironmentConnectionRequest
 */
export class DeleteEnvironmentConnectionRequest extends Message<DeleteEnvironmentConnectionRequest> {
  /**
   * @generated from field: string connection_id = 3;
   */
  connectionId = "";

  constructor(data?: PartialMessage<DeleteEnvironmentConnectionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.DeleteEnvironmentConnectionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 3, name: "connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteEnvironmentConnectionRequest {
    return new DeleteEnvironmentConnectionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteEnvironmentConnectionRequest {
    return new DeleteEnvironmentConnectionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteEnvironmentConnectionRequest {
    return new DeleteEnvironmentConnectionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteEnvironmentConnectionRequest | PlainMessage<DeleteEnvironmentConnectionRequest> | undefined, b: DeleteEnvironmentConnectionRequest | PlainMessage<DeleteEnvironmentConnectionRequest> | undefined): boolean {
    return proto3.util.equals(DeleteEnvironmentConnectionRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.DeleteConnectionRequest
 */
export class DeleteConnectionRequest extends Message<DeleteConnectionRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  /**
   * @generated from field: string id = 3;
   */
  id = "";

  constructor(data?: PartialMessage<DeleteConnectionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.DeleteConnectionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteConnectionRequest {
    return new DeleteConnectionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteConnectionRequest {
    return new DeleteConnectionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteConnectionRequest {
    return new DeleteConnectionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteConnectionRequest | PlainMessage<DeleteConnectionRequest> | undefined, b: DeleteConnectionRequest | PlainMessage<DeleteConnectionRequest> | undefined): boolean {
    return proto3.util.equals(DeleteConnectionRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.GetEnvironmentConnectionRequest
 */
export class GetEnvironmentConnectionRequest extends Message<GetEnvironmentConnectionRequest> {
  /**
   * @generated from field: string connection_id = 1;
   */
  connectionId = "";

  constructor(data?: PartialMessage<GetEnvironmentConnectionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.GetEnvironmentConnectionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetEnvironmentConnectionRequest {
    return new GetEnvironmentConnectionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetEnvironmentConnectionRequest {
    return new GetEnvironmentConnectionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetEnvironmentConnectionRequest {
    return new GetEnvironmentConnectionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetEnvironmentConnectionRequest | PlainMessage<GetEnvironmentConnectionRequest> | undefined, b: GetEnvironmentConnectionRequest | PlainMessage<GetEnvironmentConnectionRequest> | undefined): boolean {
    return proto3.util.equals(GetEnvironmentConnectionRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.GetConnectionRequest
 */
export class GetConnectionRequest extends Message<GetConnectionRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  /**
   * @generated from field: string id = 3;
   */
  id = "";

  constructor(data?: PartialMessage<GetConnectionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.GetConnectionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConnectionRequest {
    return new GetConnectionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConnectionRequest {
    return new GetConnectionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConnectionRequest {
    return new GetConnectionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetConnectionRequest | PlainMessage<GetConnectionRequest> | undefined, b: GetConnectionRequest | PlainMessage<GetConnectionRequest> | undefined): boolean {
    return proto3.util.equals(GetConnectionRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.GetConnectionResponse
 */
export class GetConnectionResponse extends Message<GetConnectionResponse> {
  /**
   * @generated from field: scalekit.v1.connections.Connection connection = 1;
   */
  connection?: Connection;

  constructor(data?: PartialMessage<GetConnectionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.GetConnectionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "connection", kind: "message", T: Connection },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConnectionResponse {
    return new GetConnectionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConnectionResponse {
    return new GetConnectionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConnectionResponse {
    return new GetConnectionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetConnectionResponse | PlainMessage<GetConnectionResponse> | undefined, b: GetConnectionResponse | PlainMessage<GetConnectionResponse> | undefined): boolean {
    return proto3.util.equals(GetConnectionResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.ListConnectionsRequest
 */
export class ListConnectionsRequest extends Message<ListConnectionsRequest> {
  /**
   * @generated from field: optional string organization_id = 1;
   */
  organizationId?: string;

  /**
   * @generated from field: optional string domain = 3;
   */
  domain?: string;

  /**
   * @generated from field: optional string include = 4;
   */
  include?: string;

  constructor(data?: PartialMessage<ListConnectionsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.ListConnectionsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "domain", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "include", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListConnectionsRequest {
    return new ListConnectionsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListConnectionsRequest {
    return new ListConnectionsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListConnectionsRequest {
    return new ListConnectionsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListConnectionsRequest | PlainMessage<ListConnectionsRequest> | undefined, b: ListConnectionsRequest | PlainMessage<ListConnectionsRequest> | undefined): boolean {
    return proto3.util.equals(ListConnectionsRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.ListConnectionsResponse
 */
export class ListConnectionsResponse extends Message<ListConnectionsResponse> {
  /**
   * @generated from field: repeated scalekit.v1.connections.ListConnection connections = 1;
   */
  connections: ListConnection[] = [];

  constructor(data?: PartialMessage<ListConnectionsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.ListConnectionsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "connections", kind: "message", T: ListConnection, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListConnectionsResponse {
    return new ListConnectionsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListConnectionsResponse {
    return new ListConnectionsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListConnectionsResponse {
    return new ListConnectionsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListConnectionsResponse | PlainMessage<ListConnectionsResponse> | undefined, b: ListConnectionsResponse | PlainMessage<ListConnectionsResponse> | undefined): boolean {
    return proto3.util.equals(ListConnectionsResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.ListConnection
 */
export class ListConnection extends Message<ListConnection> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: scalekit.v1.connections.ConnectionProvider provider = 2;
   */
  provider = ConnectionProvider.CONNECTION_PROVIDER_UNSPECIFIED;

  /**
   * @generated from field: scalekit.v1.connections.ConnectionType type = 3;
   */
  type = ConnectionType.INVALID;

  /**
   * @generated from field: scalekit.v1.connections.ConnectionStatus status = 4;
   */
  status = ConnectionStatus.CONNECTION_STATUS_UNSPECIFIED;

  /**
   * @generated from field: bool enabled = 5;
   */
  enabled = false;

  /**
   * @generated from field: string organization_id = 6;
   */
  organizationId = "";

  /**
   * @generated from field: string ui_button_title = 7;
   */
  uiButtonTitle = "";

  constructor(data?: PartialMessage<ListConnection>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.ListConnection";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "provider", kind: "enum", T: proto3.getEnumType(ConnectionProvider) },
    { no: 3, name: "type", kind: "enum", T: proto3.getEnumType(ConnectionType) },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(ConnectionStatus) },
    { no: 5, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "ui_button_title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListConnection {
    return new ListConnection().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListConnection {
    return new ListConnection().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListConnection {
    return new ListConnection().fromJsonString(jsonString, options);
  }

  static equals(a: ListConnection | PlainMessage<ListConnection> | undefined, b: ListConnection | PlainMessage<ListConnection> | undefined): boolean {
    return proto3.util.equals(ListConnection, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.ToggleEnvironmentConnectionRequest
 */
export class ToggleEnvironmentConnectionRequest extends Message<ToggleEnvironmentConnectionRequest> {
  /**
   * @generated from field: string connection_id = 2;
   */
  connectionId = "";

  constructor(data?: PartialMessage<ToggleEnvironmentConnectionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.ToggleEnvironmentConnectionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "connection_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ToggleEnvironmentConnectionRequest {
    return new ToggleEnvironmentConnectionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ToggleEnvironmentConnectionRequest {
    return new ToggleEnvironmentConnectionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ToggleEnvironmentConnectionRequest {
    return new ToggleEnvironmentConnectionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ToggleEnvironmentConnectionRequest | PlainMessage<ToggleEnvironmentConnectionRequest> | undefined, b: ToggleEnvironmentConnectionRequest | PlainMessage<ToggleEnvironmentConnectionRequest> | undefined): boolean {
    return proto3.util.equals(ToggleEnvironmentConnectionRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.ToggleConnectionRequest
 */
export class ToggleConnectionRequest extends Message<ToggleConnectionRequest> {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId = "";

  /**
   * @generated from field: string id = 3;
   */
  id = "";

  constructor(data?: PartialMessage<ToggleConnectionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.ToggleConnectionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ToggleConnectionRequest {
    return new ToggleConnectionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ToggleConnectionRequest {
    return new ToggleConnectionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ToggleConnectionRequest {
    return new ToggleConnectionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ToggleConnectionRequest | PlainMessage<ToggleConnectionRequest> | undefined, b: ToggleConnectionRequest | PlainMessage<ToggleConnectionRequest> | undefined): boolean {
    return proto3.util.equals(ToggleConnectionRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.ToggleConnectionResponse
 */
export class ToggleConnectionResponse extends Message<ToggleConnectionResponse> {
  /**
   * @generated from field: bool enabled = 1;
   */
  enabled = false;

  /**
   * @generated from field: optional string error_message = 2;
   */
  errorMessage?: string;

  constructor(data?: PartialMessage<ToggleConnectionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.ToggleConnectionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "error_message", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ToggleConnectionResponse {
    return new ToggleConnectionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ToggleConnectionResponse {
    return new ToggleConnectionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ToggleConnectionResponse {
    return new ToggleConnectionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ToggleConnectionResponse | PlainMessage<ToggleConnectionResponse> | undefined, b: ToggleConnectionResponse | PlainMessage<ToggleConnectionResponse> | undefined): boolean {
    return proto3.util.equals(ToggleConnectionResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.OIDCConnectionConfig
 */
export class OIDCConnectionConfig extends Message<OIDCConnectionConfig> {
  /**
   * @generated from field: google.protobuf.StringValue issuer = 1;
   */
  issuer?: string;

  /**
   * @generated from field: google.protobuf.StringValue discovery_endpoint = 2;
   */
  discoveryEndpoint?: string;

  /**
   * @generated from field: google.protobuf.StringValue authorize_uri = 3;
   */
  authorizeUri?: string;

  /**
   * @generated from field: google.protobuf.StringValue token_uri = 4;
   */
  tokenUri?: string;

  /**
   * @generated from field: google.protobuf.StringValue user_info_uri = 5;
   */
  userInfoUri?: string;

  /**
   * @generated from field: google.protobuf.StringValue jwks_uri = 6;
   */
  jwksUri?: string;

  /**
   * @generated from field: google.protobuf.StringValue client_id = 8;
   */
  clientId?: string;

  /**
   * @generated from field: google.protobuf.StringValue client_secret = 9;
   */
  clientSecret?: string;

  /**
   * @generated from field: repeated scalekit.v1.connections.OIDCScope scopes = 10;
   */
  scopes: OIDCScope[] = [];

  /**
   * @generated from field: scalekit.v1.connections.TokenAuthType token_auth_type = 11;
   */
  tokenAuthType = TokenAuthType.TOKEN_AUTH_TYPE_UNSPECIFIED;

  /**
   * @generated from field: string redirect_uri = 12;
   */
  redirectUri = "";

  /**
   * @generated from field: google.protobuf.BoolValue pkce_enabled = 13;
   */
  pkceEnabled?: boolean;

  constructor(data?: PartialMessage<OIDCConnectionConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.OIDCConnectionConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "issuer", kind: "message", T: StringValue },
    { no: 2, name: "discovery_endpoint", kind: "message", T: StringValue },
    { no: 3, name: "authorize_uri", kind: "message", T: StringValue },
    { no: 4, name: "token_uri", kind: "message", T: StringValue },
    { no: 5, name: "user_info_uri", kind: "message", T: StringValue },
    { no: 6, name: "jwks_uri", kind: "message", T: StringValue },
    { no: 8, name: "client_id", kind: "message", T: StringValue },
    { no: 9, name: "client_secret", kind: "message", T: StringValue },
    { no: 10, name: "scopes", kind: "enum", T: proto3.getEnumType(OIDCScope), repeated: true },
    { no: 11, name: "token_auth_type", kind: "enum", T: proto3.getEnumType(TokenAuthType) },
    { no: 12, name: "redirect_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "pkce_enabled", kind: "message", T: BoolValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OIDCConnectionConfig {
    return new OIDCConnectionConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OIDCConnectionConfig {
    return new OIDCConnectionConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OIDCConnectionConfig {
    return new OIDCConnectionConfig().fromJsonString(jsonString, options);
  }

  static equals(a: OIDCConnectionConfig | PlainMessage<OIDCConnectionConfig> | undefined, b: OIDCConnectionConfig | PlainMessage<OIDCConnectionConfig> | undefined): boolean {
    return proto3.util.equals(OIDCConnectionConfig, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.OAuthConnectionConfig
 */
export class OAuthConnectionConfig extends Message<OAuthConnectionConfig> {
  /**
   * @generated from field: google.protobuf.StringValue authorize_uri = 3;
   */
  authorizeUri?: string;

  /**
   * @generated from field: google.protobuf.StringValue token_uri = 4;
   */
  tokenUri?: string;

  /**
   * @generated from field: google.protobuf.StringValue user_info_uri = 5;
   */
  userInfoUri?: string;

  /**
   * @generated from field: google.protobuf.StringValue client_id = 8;
   */
  clientId?: string;

  /**
   * @generated from field: google.protobuf.StringValue client_secret = 9;
   */
  clientSecret?: string;

  /**
   * @generated from field: repeated string scopes = 10;
   */
  scopes: string[] = [];

  /**
   * @generated from field: string redirect_uri = 12;
   */
  redirectUri = "";

  /**
   * @generated from field: google.protobuf.BoolValue pkce_enabled = 13;
   */
  pkceEnabled?: boolean;

  constructor(data?: PartialMessage<OAuthConnectionConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.OAuthConnectionConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 3, name: "authorize_uri", kind: "message", T: StringValue },
    { no: 4, name: "token_uri", kind: "message", T: StringValue },
    { no: 5, name: "user_info_uri", kind: "message", T: StringValue },
    { no: 8, name: "client_id", kind: "message", T: StringValue },
    { no: 9, name: "client_secret", kind: "message", T: StringValue },
    { no: 10, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 12, name: "redirect_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "pkce_enabled", kind: "message", T: BoolValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OAuthConnectionConfig {
    return new OAuthConnectionConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OAuthConnectionConfig {
    return new OAuthConnectionConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OAuthConnectionConfig {
    return new OAuthConnectionConfig().fromJsonString(jsonString, options);
  }

  static equals(a: OAuthConnectionConfig | PlainMessage<OAuthConnectionConfig> | undefined, b: OAuthConnectionConfig | PlainMessage<OAuthConnectionConfig> | undefined): boolean {
    return proto3.util.equals(OAuthConnectionConfig, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.SAMLConnectionConfigRequest
 */
export class SAMLConnectionConfigRequest extends Message<SAMLConnectionConfigRequest> {
  /**
   * @generated from field: google.protobuf.StringValue idp_metadata_url = 1;
   */
  idpMetadataUrl?: string;

  /**
   * @generated from field: google.protobuf.StringValue idp_entity_id = 2;
   */
  idpEntityId?: string;

  /**
   * @generated from field: google.protobuf.StringValue idp_sso_url = 3;
   */
  idpSsoUrl?: string;

  /**
   * @generated from field: google.protobuf.StringValue idp_certificate = 4;
   */
  idpCertificate?: string;

  /**
   * @generated from field: google.protobuf.StringValue idp_slo_url = 5;
   */
  idpSloUrl?: string;

  /**
   * @generated from field: google.protobuf.StringValue ui_button_title = 6;
   */
  uiButtonTitle?: string;

  /**
   * @generated from field: scalekit.v1.connections.NameIdFormat idp_name_id_format = 7;
   */
  idpNameIdFormat = NameIdFormat.NAME_ID_FORMAT_NIL;

  /**
   * @generated from field: scalekit.v1.connections.RequestBinding idp_sso_request_binding = 8;
   */
  idpSsoRequestBinding = RequestBinding.REQUEST_BINDING_UNSPECIFIED;

  /**
   * @generated from field: scalekit.v1.connections.RequestBinding idp_slo_request_binding = 9;
   */
  idpSloRequestBinding = RequestBinding.REQUEST_BINDING_UNSPECIFIED;

  /**
   * @generated from field: scalekit.v1.connections.SAMLSigningOptions saml_signing_option = 10;
   */
  samlSigningOption = SAMLSigningOptions.SAML_SIGNING_OPTIONS_UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.BoolValue force_authn = 14;
   */
  forceAuthn?: boolean;

  /**
   * @generated from field: google.protobuf.StringValue default_redirect_uri = 15;
   */
  defaultRedirectUri?: string;

  /**
   * @generated from field: google.protobuf.BoolValue assertion_encrypted = 16;
   */
  assertionEncrypted?: boolean;

  /**
   * @generated from field: google.protobuf.BoolValue want_request_signed = 17;
   */
  wantRequestSigned?: boolean;

  constructor(data?: PartialMessage<SAMLConnectionConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.SAMLConnectionConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_metadata_url", kind: "message", T: StringValue },
    { no: 2, name: "idp_entity_id", kind: "message", T: StringValue },
    { no: 3, name: "idp_sso_url", kind: "message", T: StringValue },
    { no: 4, name: "idp_certificate", kind: "message", T: StringValue },
    { no: 5, name: "idp_slo_url", kind: "message", T: StringValue },
    { no: 6, name: "ui_button_title", kind: "message", T: StringValue },
    { no: 7, name: "idp_name_id_format", kind: "enum", T: proto3.getEnumType(NameIdFormat) },
    { no: 8, name: "idp_sso_request_binding", kind: "enum", T: proto3.getEnumType(RequestBinding) },
    { no: 9, name: "idp_slo_request_binding", kind: "enum", T: proto3.getEnumType(RequestBinding) },
    { no: 10, name: "saml_signing_option", kind: "enum", T: proto3.getEnumType(SAMLSigningOptions) },
    { no: 14, name: "force_authn", kind: "message", T: BoolValue },
    { no: 15, name: "default_redirect_uri", kind: "message", T: StringValue },
    { no: 16, name: "assertion_encrypted", kind: "message", T: BoolValue },
    { no: 17, name: "want_request_signed", kind: "message", T: BoolValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SAMLConnectionConfigRequest {
    return new SAMLConnectionConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SAMLConnectionConfigRequest {
    return new SAMLConnectionConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SAMLConnectionConfigRequest {
    return new SAMLConnectionConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SAMLConnectionConfigRequest | PlainMessage<SAMLConnectionConfigRequest> | undefined, b: SAMLConnectionConfigRequest | PlainMessage<SAMLConnectionConfigRequest> | undefined): boolean {
    return proto3.util.equals(SAMLConnectionConfigRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.SAMLConnectionConfigResponse
 */
export class SAMLConnectionConfigResponse extends Message<SAMLConnectionConfigResponse> {
  /**
   * @generated from field: string sp_entity_id = 1;
   */
  spEntityId = "";

  /**
   * @generated from field: string sp_assertion_url = 2;
   */
  spAssertionUrl = "";

  /**
   * @generated from field: string sp_metadata_url = 3;
   */
  spMetadataUrl = "";

  /**
   * @generated from field: google.protobuf.StringValue idp_metadata_url = 4;
   */
  idpMetadataUrl?: string;

  /**
   * @generated from field: google.protobuf.StringValue idp_entity_id = 5;
   */
  idpEntityId?: string;

  /**
   * @generated from field: google.protobuf.StringValue idp_sso_url = 6;
   */
  idpSsoUrl?: string;

  /**
   * @generated from field: repeated scalekit.v1.connections.IDPCertificate idp_certificates = 7;
   */
  idpCertificates: IDPCertificate[] = [];

  /**
   * @generated from field: google.protobuf.StringValue idp_slo_url = 8;
   */
  idpSloUrl?: string;

  /**
   * @generated from field: google.protobuf.StringValue ui_button_title = 9;
   */
  uiButtonTitle?: string;

  /**
   * @generated from field: scalekit.v1.connections.NameIdFormat idp_name_id_format = 10;
   */
  idpNameIdFormat = NameIdFormat.NAME_ID_FORMAT_NIL;

  /**
   * @generated from field: scalekit.v1.connections.RequestBinding idp_sso_request_binding = 11;
   */
  idpSsoRequestBinding = RequestBinding.REQUEST_BINDING_UNSPECIFIED;

  /**
   * @generated from field: scalekit.v1.connections.RequestBinding idp_slo_request_binding = 12;
   */
  idpSloRequestBinding = RequestBinding.REQUEST_BINDING_UNSPECIFIED;

  /**
   * @generated from field: scalekit.v1.connections.SAMLSigningOptions saml_signing_option = 13;
   */
  samlSigningOption = SAMLSigningOptions.SAML_SIGNING_OPTIONS_UNSPECIFIED;

  /**
   * @generated from field: google.protobuf.BoolValue allow_idp_initiated_login = 14;
   */
  allowIdpInitiatedLogin?: boolean;

  /**
   * @generated from field: google.protobuf.BoolValue force_authn = 15;
   */
  forceAuthn?: boolean;

  /**
   * @generated from field: google.protobuf.StringValue default_redirect_uri = 16;
   */
  defaultRedirectUri?: string;

  /**
   * @generated from field: google.protobuf.BoolValue assertion_encrypted = 17;
   */
  assertionEncrypted?: boolean;

  /**
   * @generated from field: google.protobuf.BoolValue want_request_signed = 18;
   */
  wantRequestSigned?: boolean;

  constructor(data?: PartialMessage<SAMLConnectionConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.SAMLConnectionConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "sp_entity_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "sp_assertion_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "sp_metadata_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "idp_metadata_url", kind: "message", T: StringValue },
    { no: 5, name: "idp_entity_id", kind: "message", T: StringValue },
    { no: 6, name: "idp_sso_url", kind: "message", T: StringValue },
    { no: 7, name: "idp_certificates", kind: "message", T: IDPCertificate, repeated: true },
    { no: 8, name: "idp_slo_url", kind: "message", T: StringValue },
    { no: 9, name: "ui_button_title", kind: "message", T: StringValue },
    { no: 10, name: "idp_name_id_format", kind: "enum", T: proto3.getEnumType(NameIdFormat) },
    { no: 11, name: "idp_sso_request_binding", kind: "enum", T: proto3.getEnumType(RequestBinding) },
    { no: 12, name: "idp_slo_request_binding", kind: "enum", T: proto3.getEnumType(RequestBinding) },
    { no: 13, name: "saml_signing_option", kind: "enum", T: proto3.getEnumType(SAMLSigningOptions) },
    { no: 14, name: "allow_idp_initiated_login", kind: "message", T: BoolValue },
    { no: 15, name: "force_authn", kind: "message", T: BoolValue },
    { no: 16, name: "default_redirect_uri", kind: "message", T: StringValue },
    { no: 17, name: "assertion_encrypted", kind: "message", T: BoolValue },
    { no: 18, name: "want_request_signed", kind: "message", T: BoolValue },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SAMLConnectionConfigResponse {
    return new SAMLConnectionConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SAMLConnectionConfigResponse {
    return new SAMLConnectionConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SAMLConnectionConfigResponse {
    return new SAMLConnectionConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SAMLConnectionConfigResponse | PlainMessage<SAMLConnectionConfigResponse> | undefined, b: SAMLConnectionConfigResponse | PlainMessage<SAMLConnectionConfigResponse> | undefined): boolean {
    return proto3.util.equals(SAMLConnectionConfigResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.IDPCertificate
 */
export class IDPCertificate extends Message<IDPCertificate> {
  /**
   * @generated from field: string certificate = 1;
   */
  certificate = "";

  /**
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp expiry_time = 3;
   */
  expiryTime?: Timestamp;

  /**
   * @generated from field: string id = 4;
   */
  id = "";

  /**
   * @generated from field: string issuer = 5;
   */
  issuer = "";

  constructor(data?: PartialMessage<IDPCertificate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.IDPCertificate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "certificate", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "create_time", kind: "message", T: Timestamp },
    { no: 3, name: "expiry_time", kind: "message", T: Timestamp },
    { no: 4, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IDPCertificate {
    return new IDPCertificate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IDPCertificate {
    return new IDPCertificate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IDPCertificate {
    return new IDPCertificate().fromJsonString(jsonString, options);
  }

  static equals(a: IDPCertificate | PlainMessage<IDPCertificate> | undefined, b: IDPCertificate | PlainMessage<IDPCertificate> | undefined): boolean {
    return proto3.util.equals(IDPCertificate, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.GetOIDCMetadataRequest
 */
export class GetOIDCMetadataRequest extends Message<GetOIDCMetadataRequest> {
  /**
   * @generated from field: scalekit.v1.connections.OIDCMetadataRequest metadata = 1;
   */
  metadata?: OIDCMetadataRequest;

  constructor(data?: PartialMessage<GetOIDCMetadataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.GetOIDCMetadataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "metadata", kind: "message", T: OIDCMetadataRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOIDCMetadataRequest {
    return new GetOIDCMetadataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOIDCMetadataRequest {
    return new GetOIDCMetadataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOIDCMetadataRequest {
    return new GetOIDCMetadataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOIDCMetadataRequest | PlainMessage<GetOIDCMetadataRequest> | undefined, b: GetOIDCMetadataRequest | PlainMessage<GetOIDCMetadataRequest> | undefined): boolean {
    return proto3.util.equals(GetOIDCMetadataRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.OIDCMetadataRequest
 */
export class OIDCMetadataRequest extends Message<OIDCMetadataRequest> {
  /**
   * @generated from field: string issuer = 1;
   */
  issuer = "";

  constructor(data?: PartialMessage<OIDCMetadataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.OIDCMetadataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OIDCMetadataRequest {
    return new OIDCMetadataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OIDCMetadataRequest {
    return new OIDCMetadataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OIDCMetadataRequest {
    return new OIDCMetadataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: OIDCMetadataRequest | PlainMessage<OIDCMetadataRequest> | undefined, b: OIDCMetadataRequest | PlainMessage<OIDCMetadataRequest> | undefined): boolean {
    return proto3.util.equals(OIDCMetadataRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.GetOIDCMetadataResponse
 */
export class GetOIDCMetadataResponse extends Message<GetOIDCMetadataResponse> {
  /**
   * @generated from field: string issuer = 1;
   */
  issuer = "";

  /**
   * @generated from field: string authorization_endpoint = 2;
   */
  authorizationEndpoint = "";

  /**
   * @generated from field: string token_endpoint = 3;
   */
  tokenEndpoint = "";

  /**
   * @generated from field: string userinfo_endpoint = 4;
   */
  userinfoEndpoint = "";

  /**
   * @generated from field: string jwks_uri = 5;
   */
  jwksUri = "";

  constructor(data?: PartialMessage<GetOIDCMetadataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.GetOIDCMetadataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "authorization_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "token_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "userinfo_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "jwks_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOIDCMetadataResponse {
    return new GetOIDCMetadataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOIDCMetadataResponse {
    return new GetOIDCMetadataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOIDCMetadataResponse {
    return new GetOIDCMetadataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetOIDCMetadataResponse | PlainMessage<GetOIDCMetadataResponse> | undefined, b: GetOIDCMetadataResponse | PlainMessage<GetOIDCMetadataResponse> | undefined): boolean {
    return proto3.util.equals(GetOIDCMetadataResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.GetSAMLMetadataRequest
 */
export class GetSAMLMetadataRequest extends Message<GetSAMLMetadataRequest> {
  /**
   * @generated from field: scalekit.v1.connections.SAMLMetadataRequest metadata = 1;
   */
  metadata?: SAMLMetadataRequest;

  constructor(data?: PartialMessage<GetSAMLMetadataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.GetSAMLMetadataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "metadata", kind: "message", T: SAMLMetadataRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSAMLMetadataRequest {
    return new GetSAMLMetadataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSAMLMetadataRequest {
    return new GetSAMLMetadataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSAMLMetadataRequest {
    return new GetSAMLMetadataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetSAMLMetadataRequest | PlainMessage<GetSAMLMetadataRequest> | undefined, b: GetSAMLMetadataRequest | PlainMessage<GetSAMLMetadataRequest> | undefined): boolean {
    return proto3.util.equals(GetSAMLMetadataRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.SAMLMetadataRequest
 */
export class SAMLMetadataRequest extends Message<SAMLMetadataRequest> {
  /**
   * @generated from field: string metadata_url = 1;
   */
  metadataUrl = "";

  constructor(data?: PartialMessage<SAMLMetadataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.SAMLMetadataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "metadata_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SAMLMetadataRequest {
    return new SAMLMetadataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SAMLMetadataRequest {
    return new SAMLMetadataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SAMLMetadataRequest {
    return new SAMLMetadataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SAMLMetadataRequest | PlainMessage<SAMLMetadataRequest> | undefined, b: SAMLMetadataRequest | PlainMessage<SAMLMetadataRequest> | undefined): boolean {
    return proto3.util.equals(SAMLMetadataRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.GetSAMLMetadataResponse
 */
export class GetSAMLMetadataResponse extends Message<GetSAMLMetadataResponse> {
  /**
   * @generated from field: string idp_entity_id = 1;
   */
  idpEntityId = "";

  /**
   * @generated from field: string idp_sso_url = 2;
   */
  idpSsoUrl = "";

  /**
   * @generated from field: string idp_slo_url = 3;
   */
  idpSloUrl = "";

  /**
   * @generated from field: repeated string idp_certificates = 4;
   */
  idpCertificates: string[] = [];

  /**
   * @generated from field: string idp_name_id_format = 5;
   */
  idpNameIdFormat = "";

  /**
   * @generated from field: string request_binding = 6;
   */
  requestBinding = "";

  /**
   * @generated from field: bool want_assertions_signed = 7;
   */
  wantAssertionsSigned = false;

  constructor(data?: PartialMessage<GetSAMLMetadataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.GetSAMLMetadataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "idp_entity_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "idp_sso_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "idp_slo_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "idp_certificates", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "idp_name_id_format", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "request_binding", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "want_assertions_signed", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSAMLMetadataResponse {
    return new GetSAMLMetadataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSAMLMetadataResponse {
    return new GetSAMLMetadataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSAMLMetadataResponse {
    return new GetSAMLMetadataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetSAMLMetadataResponse | PlainMessage<GetSAMLMetadataResponse> | undefined, b: GetSAMLMetadataResponse | PlainMessage<GetSAMLMetadataResponse> | undefined): boolean {
    return proto3.util.equals(GetSAMLMetadataResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.GetSAMLCertificateDetailsRequest
 */
export class GetSAMLCertificateDetailsRequest extends Message<GetSAMLCertificateDetailsRequest> {
  /**
   * @generated from field: scalekit.v1.connections.SAMLCertificateRequest certificate = 1;
   */
  certificate?: SAMLCertificateRequest;

  constructor(data?: PartialMessage<GetSAMLCertificateDetailsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.GetSAMLCertificateDetailsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "certificate", kind: "message", T: SAMLCertificateRequest },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSAMLCertificateDetailsRequest {
    return new GetSAMLCertificateDetailsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSAMLCertificateDetailsRequest {
    return new GetSAMLCertificateDetailsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSAMLCertificateDetailsRequest {
    return new GetSAMLCertificateDetailsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetSAMLCertificateDetailsRequest | PlainMessage<GetSAMLCertificateDetailsRequest> | undefined, b: GetSAMLCertificateDetailsRequest | PlainMessage<GetSAMLCertificateDetailsRequest> | undefined): boolean {
    return proto3.util.equals(GetSAMLCertificateDetailsRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.SAMLCertificateRequest
 */
export class SAMLCertificateRequest extends Message<SAMLCertificateRequest> {
  /**
   * @generated from field: string text = 1;
   */
  text = "";

  constructor(data?: PartialMessage<SAMLCertificateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.SAMLCertificateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SAMLCertificateRequest {
    return new SAMLCertificateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SAMLCertificateRequest {
    return new SAMLCertificateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SAMLCertificateRequest {
    return new SAMLCertificateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SAMLCertificateRequest | PlainMessage<SAMLCertificateRequest> | undefined, b: SAMLCertificateRequest | PlainMessage<SAMLCertificateRequest> | undefined): boolean {
    return proto3.util.equals(SAMLCertificateRequest, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.GetSAMLCertificateDetailsResponse
 */
export class GetSAMLCertificateDetailsResponse extends Message<GetSAMLCertificateDetailsResponse> {
  /**
   * @generated from field: string text = 1;
   */
  text = "";

  /**
   * @generated from field: int64 not_after = 2;
   */
  notAfter = protoInt64.zero;

  /**
   * @generated from field: int64 not_before = 3;
   */
  notBefore = protoInt64.zero;

  /**
   * @generated from field: string subject = 4;
   */
  subject = "";

  /**
   * @generated from field: string issuer = 5;
   */
  issuer = "";

  constructor(data?: PartialMessage<GetSAMLCertificateDetailsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.GetSAMLCertificateDetailsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "not_after", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "not_before", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 4, name: "subject", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSAMLCertificateDetailsResponse {
    return new GetSAMLCertificateDetailsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSAMLCertificateDetailsResponse {
    return new GetSAMLCertificateDetailsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSAMLCertificateDetailsResponse {
    return new GetSAMLCertificateDetailsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetSAMLCertificateDetailsResponse | PlainMessage<GetSAMLCertificateDetailsResponse> | undefined, b: GetSAMLCertificateDetailsResponse | PlainMessage<GetSAMLCertificateDetailsResponse> | undefined): boolean {
    return proto3.util.equals(GetSAMLCertificateDetailsResponse, a, b);
  }
}

/**
 * @generated from message scalekit.v1.connections.PasswordConnectionConfig
 */
export class PasswordConnectionConfig extends Message<PasswordConnectionConfig> {
  constructor(data?: PartialMessage<PasswordConnectionConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "scalekit.v1.connections.PasswordConnectionConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PasswordConnectionConfig {
    return new PasswordConnectionConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PasswordConnectionConfig {
    return new PasswordConnectionConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PasswordConnectionConfig {
    return new PasswordConnectionConfig().fromJsonString(jsonString, options);
  }

  static equals(a: PasswordConnectionConfig | PlainMessage<PasswordConnectionConfig> | undefined, b: PasswordConnectionConfig | PlainMessage<PasswordConnectionConfig> | undefined): boolean {
    return proto3.util.equals(PasswordConnectionConfig, a, b);
  }
}

