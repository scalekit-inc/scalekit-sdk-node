// @generated by protoc-gen-es v2.5.1 with parameter "target=ts"
// @generated from file scalekit/v1/connections/connections.proto (package scalekit.v1.connections, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../../buf/validate/validate_pb";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import { file_google_api_field_behavior } from "../../../google/api/field_behavior_pb";
import { file_google_api_visibility } from "../../../google/api/visibility_pb";
import type { EmptySchema, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_timestamp, file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";
import { file_protoc_gen_openapiv2_options_annotations } from "../../../protoc-gen-openapiv2/options/annotations_pb";
import { file_scalekit_v1_options_options } from "../options/options_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file scalekit/v1/connections/connections.proto.
 */
export const file_scalekit_v1_connections_connections: GenFile = /*@__PURE__*/
  fileDesc("", [file_buf_validate_validate, file_google_api_annotations, file_google_api_field_behavior, file_google_api_visibility, file_google_protobuf_empty, file_google_protobuf_timestamp, file_google_protobuf_wrappers, file_protoc_gen_openapiv2_options_annotations, file_scalekit_v1_options_options]);

/**
 * @generated from message scalekit.v1.connections.GetProvidersRequest
 */
export type GetProvidersRequest = Message<"scalekit.v1.connections.GetProvidersRequest"> & {
};

/**
 * Describes the message scalekit.v1.connections.GetProvidersRequest.
 * Use `create(GetProvidersRequestSchema)` to create a new message.
 */
export const GetProvidersRequestSchema: GenMessage<GetProvidersRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 0);

/**
 * @generated from message scalekit.v1.connections.GetProvidersResponse
 */
export type GetProvidersResponse = Message<"scalekit.v1.connections.GetProvidersResponse"> & {
  /**
   * @generated from field: repeated scalekit.v1.connections.Provider providers = 1;
   */
  providers: Provider[];
};

/**
 * Describes the message scalekit.v1.connections.GetProvidersResponse.
 * Use `create(GetProvidersResponseSchema)` to create a new message.
 */
export const GetProvidersResponseSchema: GenMessage<GetProvidersResponse> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 1);

/**
 * @generated from message scalekit.v1.connections.Provider
 */
export type Provider = Message<"scalekit.v1.connections.Provider"> & {
  /**
   * @generated from field: string key_id = 1;
   */
  keyId: string;

  /**
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * @generated from field: optional string description = 3;
   */
  description?: string;
};

/**
 * Describes the message scalekit.v1.connections.Provider.
 * Use `create(ProviderSchema)` to create a new message.
 */
export const ProviderSchema: GenMessage<Provider> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 2);

/**
 * @generated from message scalekit.v1.connections.CreateEnvironmentConnectionRequest
 */
export type CreateEnvironmentConnectionRequest = Message<"scalekit.v1.connections.CreateEnvironmentConnectionRequest"> & {
  /**
   * @generated from field: scalekit.v1.connections.CreateConnection connection = 1;
   */
  connection?: CreateConnection;
};

/**
 * Describes the message scalekit.v1.connections.CreateEnvironmentConnectionRequest.
 * Use `create(CreateEnvironmentConnectionRequestSchema)` to create a new message.
 */
export const CreateEnvironmentConnectionRequestSchema: GenMessage<CreateEnvironmentConnectionRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 3);

/**
 * @generated from message scalekit.v1.connections.CreateConnectionRequest
 */
export type CreateConnectionRequest = Message<"scalekit.v1.connections.CreateConnectionRequest"> & {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * @generated from field: scalekit.v1.connections.CreateConnection connection = 3;
   */
  connection?: CreateConnection;
};

/**
 * Describes the message scalekit.v1.connections.CreateConnectionRequest.
 * Use `create(CreateConnectionRequestSchema)` to create a new message.
 */
export const CreateConnectionRequestSchema: GenMessage<CreateConnectionRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 4);

/**
 * @generated from message scalekit.v1.connections.CreateConnection
 */
export type CreateConnection = Message<"scalekit.v1.connections.CreateConnection"> & {
  /**
   * @generated from field: scalekit.v1.connections.ConnectionProvider provider = 1;
   */
  provider: ConnectionProvider;

  /**
   * @generated from field: scalekit.v1.connections.ConnectionType type = 2;
   */
  type: ConnectionType;
};

/**
 * Describes the message scalekit.v1.connections.CreateConnection.
 * Use `create(CreateConnectionSchema)` to create a new message.
 */
export const CreateConnectionSchema: GenMessage<CreateConnection> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 5);

/**
 * @generated from message scalekit.v1.connections.Connection
 */
export type Connection = Message<"scalekit.v1.connections.Connection"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: scalekit.v1.connections.ConnectionProvider provider = 2;
   */
  provider: ConnectionProvider;

  /**
   * @generated from field: scalekit.v1.connections.ConnectionType type = 3;
   */
  type: ConnectionType;

  /**
   * @generated from field: scalekit.v1.connections.ConnectionStatus status = 4;
   */
  status: ConnectionStatus;

  /**
   * @generated from field: bool enabled = 5;
   */
  enabled: boolean;

  /**
   * @generated from field: bool debug_enabled = 6;
   */
  debugEnabled: boolean;

  /**
   * @generated from field: optional string organization_id = 7;
   */
  organizationId?: string;

  /**
   * @generated from field: string ui_button_title = 8;
   */
  uiButtonTitle: string;

  /**
   * @generated from field: scalekit.v1.connections.ConfigurationType configuration_type = 9;
   */
  configurationType: ConfigurationType;

  /**
   * @generated from field: string test_connection_uri = 12;
   */
  testConnectionUri: string;

  /**
   * @generated from field: map<string, string> attribute_mapping = 15;
   */
  attributeMapping: { [key: string]: string };

  /**
   * @generated from field: google.protobuf.Timestamp create_time = 16;
   */
  createTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp update_time = 17;
   */
  updateTime?: Timestamp;

  /**
   * @generated from oneof scalekit.v1.connections.Connection.settings
   */
  settings: {
    /**
     * @generated from field: scalekit.v1.connections.OIDCConnectionConfig oidc_config = 18;
     */
    value: OIDCConnectionConfig;
    case: "oidcConfig";
  } | {
    /**
     * @generated from field: scalekit.v1.connections.SAMLConnectionConfigResponse saml_config = 19;
     */
    value: SAMLConnectionConfigResponse;
    case: "samlConfig";
  } | {
    /**
     * @generated from field: scalekit.v1.connections.OAuthConnectionConfig oauth_config = 20;
     */
    value: OAuthConnectionConfig;
    case: "oauthConfig";
  } | {
    /**
     * @generated from field: scalekit.v1.connections.PasswordLessConfig passwordless_config = 22;
     */
    value: PasswordLessConfig;
    case: "passwordlessConfig";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: optional string key_id = 21;
   */
  keyId?: string;
};

/**
 * Describes the message scalekit.v1.connections.Connection.
 * Use `create(ConnectionSchema)` to create a new message.
 */
export const ConnectionSchema: GenMessage<Connection> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 6);

/**
 * @generated from message scalekit.v1.connections.CreateConnectionResponse
 */
export type CreateConnectionResponse = Message<"scalekit.v1.connections.CreateConnectionResponse"> & {
  /**
   * @generated from field: scalekit.v1.connections.Connection connection = 1;
   */
  connection?: Connection;
};

/**
 * Describes the message scalekit.v1.connections.CreateConnectionResponse.
 * Use `create(CreateConnectionResponseSchema)` to create a new message.
 */
export const CreateConnectionResponseSchema: GenMessage<CreateConnectionResponse> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 7);

/**
 * @generated from message scalekit.v1.connections.UpdateEnvironmentConnectionRequest
 */
export type UpdateEnvironmentConnectionRequest = Message<"scalekit.v1.connections.UpdateEnvironmentConnectionRequest"> & {
  /**
   * @generated from field: string connection_id = 1;
   */
  connectionId: string;

  /**
   * @generated from field: scalekit.v1.connections.UpdateConnection connection = 3;
   */
  connection?: UpdateConnection;
};

/**
 * Describes the message scalekit.v1.connections.UpdateEnvironmentConnectionRequest.
 * Use `create(UpdateEnvironmentConnectionRequestSchema)` to create a new message.
 */
export const UpdateEnvironmentConnectionRequestSchema: GenMessage<UpdateEnvironmentConnectionRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 8);

/**
 * @generated from message scalekit.v1.connections.UpdateConnectionRequest
 */
export type UpdateConnectionRequest = Message<"scalekit.v1.connections.UpdateConnectionRequest"> & {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * @generated from field: scalekit.v1.connections.UpdateConnection connection = 4;
   */
  connection?: UpdateConnection;
};

/**
 * Describes the message scalekit.v1.connections.UpdateConnectionRequest.
 * Use `create(UpdateConnectionRequestSchema)` to create a new message.
 */
export const UpdateConnectionRequestSchema: GenMessage<UpdateConnectionRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 9);

/**
 * @generated from message scalekit.v1.connections.UpdateConnection
 */
export type UpdateConnection = Message<"scalekit.v1.connections.UpdateConnection"> & {
  /**
   * @generated from field: scalekit.v1.connections.ConnectionProvider provider = 2;
   */
  provider: ConnectionProvider;

  /**
   * @generated from field: scalekit.v1.connections.ConnectionType type = 3;
   */
  type: ConnectionType;

  /**
   * @generated from field: google.protobuf.BoolValue debug_enabled = 6;
   */
  debugEnabled?: boolean;

  /**
   * @generated from field: google.protobuf.StringValue ui_button_title = 8;
   */
  uiButtonTitle?: string;

  /**
   * @generated from field: scalekit.v1.connections.ConfigurationType configuration_type = 11;
   */
  configurationType: ConfigurationType;

  /**
   * @generated from field: map<string, string> attribute_mapping = 15;
   */
  attributeMapping: { [key: string]: string };

  /**
   * @generated from oneof scalekit.v1.connections.UpdateConnection.settings
   */
  settings: {
    /**
     * @generated from field: scalekit.v1.connections.OIDCConnectionConfig oidc_config = 16;
     */
    value: OIDCConnectionConfig;
    case: "oidcConfig";
  } | {
    /**
     * @generated from field: scalekit.v1.connections.SAMLConnectionConfigRequest saml_config = 17;
     */
    value: SAMLConnectionConfigRequest;
    case: "samlConfig";
  } | {
    /**
     * @generated from field: scalekit.v1.connections.OAuthConnectionConfig oauth_config = 18;
     */
    value: OAuthConnectionConfig;
    case: "oauthConfig";
  } | {
    /**
     * @generated from field: scalekit.v1.connections.PasswordLessConfig passwordless_config = 20;
     */
    value: PasswordLessConfig;
    case: "passwordlessConfig";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: optional string key_id = 19;
   */
  keyId?: string;
};

/**
 * Describes the message scalekit.v1.connections.UpdateConnection.
 * Use `create(UpdateConnectionSchema)` to create a new message.
 */
export const UpdateConnectionSchema: GenMessage<UpdateConnection> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 10);

/**
 * @generated from message scalekit.v1.connections.UpdateConnectionResponse
 */
export type UpdateConnectionResponse = Message<"scalekit.v1.connections.UpdateConnectionResponse"> & {
  /**
   * @generated from field: scalekit.v1.connections.Connection connection = 1;
   */
  connection?: Connection;
};

/**
 * Describes the message scalekit.v1.connections.UpdateConnectionResponse.
 * Use `create(UpdateConnectionResponseSchema)` to create a new message.
 */
export const UpdateConnectionResponseSchema: GenMessage<UpdateConnectionResponse> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 11);

/**
 * @generated from message scalekit.v1.connections.DeleteEnvironmentConnectionRequest
 */
export type DeleteEnvironmentConnectionRequest = Message<"scalekit.v1.connections.DeleteEnvironmentConnectionRequest"> & {
  /**
   * @generated from field: string connection_id = 3;
   */
  connectionId: string;
};

/**
 * Describes the message scalekit.v1.connections.DeleteEnvironmentConnectionRequest.
 * Use `create(DeleteEnvironmentConnectionRequestSchema)` to create a new message.
 */
export const DeleteEnvironmentConnectionRequestSchema: GenMessage<DeleteEnvironmentConnectionRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 12);

/**
 * @generated from message scalekit.v1.connections.DeleteConnectionRequest
 */
export type DeleteConnectionRequest = Message<"scalekit.v1.connections.DeleteConnectionRequest"> & {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * @generated from field: string id = 3;
   */
  id: string;
};

/**
 * Describes the message scalekit.v1.connections.DeleteConnectionRequest.
 * Use `create(DeleteConnectionRequestSchema)` to create a new message.
 */
export const DeleteConnectionRequestSchema: GenMessage<DeleteConnectionRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 13);

/**
 * @generated from message scalekit.v1.connections.GetEnvironmentConnectionRequest
 */
export type GetEnvironmentConnectionRequest = Message<"scalekit.v1.connections.GetEnvironmentConnectionRequest"> & {
  /**
   * @generated from field: string connection_id = 1;
   */
  connectionId: string;
};

/**
 * Describes the message scalekit.v1.connections.GetEnvironmentConnectionRequest.
 * Use `create(GetEnvironmentConnectionRequestSchema)` to create a new message.
 */
export const GetEnvironmentConnectionRequestSchema: GenMessage<GetEnvironmentConnectionRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 14);

/**
 * @generated from message scalekit.v1.connections.GetConnectionRequest
 */
export type GetConnectionRequest = Message<"scalekit.v1.connections.GetConnectionRequest"> & {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * @generated from field: string id = 3;
   */
  id: string;
};

/**
 * Describes the message scalekit.v1.connections.GetConnectionRequest.
 * Use `create(GetConnectionRequestSchema)` to create a new message.
 */
export const GetConnectionRequestSchema: GenMessage<GetConnectionRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 15);

/**
 * @generated from message scalekit.v1.connections.GetConnectionResponse
 */
export type GetConnectionResponse = Message<"scalekit.v1.connections.GetConnectionResponse"> & {
  /**
   * @generated from field: scalekit.v1.connections.Connection connection = 1;
   */
  connection?: Connection;
};

/**
 * Describes the message scalekit.v1.connections.GetConnectionResponse.
 * Use `create(GetConnectionResponseSchema)` to create a new message.
 */
export const GetConnectionResponseSchema: GenMessage<GetConnectionResponse> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 16);

/**
 * @generated from message scalekit.v1.connections.ListConnectionsRequest
 */
export type ListConnectionsRequest = Message<"scalekit.v1.connections.ListConnectionsRequest"> & {
  /**
   * @generated from field: optional string organization_id = 1;
   */
  organizationId?: string;

  /**
   * @generated from field: optional string domain = 3;
   */
  domain?: string;

  /**
   * @generated from field: optional string include = 4;
   */
  include?: string;
};

/**
 * Describes the message scalekit.v1.connections.ListConnectionsRequest.
 * Use `create(ListConnectionsRequestSchema)` to create a new message.
 */
export const ListConnectionsRequestSchema: GenMessage<ListConnectionsRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 17);

/**
 * @generated from message scalekit.v1.connections.ListConnectionsResponse
 */
export type ListConnectionsResponse = Message<"scalekit.v1.connections.ListConnectionsResponse"> & {
  /**
   * @generated from field: repeated scalekit.v1.connections.ListConnection connections = 1;
   */
  connections: ListConnection[];
};

/**
 * Describes the message scalekit.v1.connections.ListConnectionsResponse.
 * Use `create(ListConnectionsResponseSchema)` to create a new message.
 */
export const ListConnectionsResponseSchema: GenMessage<ListConnectionsResponse> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 18);

/**
 * @generated from message scalekit.v1.connections.ListConnection
 */
export type ListConnection = Message<"scalekit.v1.connections.ListConnection"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: scalekit.v1.connections.ConnectionProvider provider = 2;
   */
  provider: ConnectionProvider;

  /**
   * @generated from field: scalekit.v1.connections.ConnectionType type = 3;
   */
  type: ConnectionType;

  /**
   * @generated from field: scalekit.v1.connections.ConnectionStatus status = 4;
   */
  status: ConnectionStatus;

  /**
   * @generated from field: bool enabled = 5;
   */
  enabled: boolean;

  /**
   * @generated from field: string organization_id = 6;
   */
  organizationId: string;

  /**
   * @generated from field: string ui_button_title = 7;
   */
  uiButtonTitle: string;
};

/**
 * Describes the message scalekit.v1.connections.ListConnection.
 * Use `create(ListConnectionSchema)` to create a new message.
 */
export const ListConnectionSchema: GenMessage<ListConnection> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 19);

/**
 * @generated from message scalekit.v1.connections.ToggleEnvironmentConnectionRequest
 */
export type ToggleEnvironmentConnectionRequest = Message<"scalekit.v1.connections.ToggleEnvironmentConnectionRequest"> & {
  /**
   * @generated from field: string connection_id = 2;
   */
  connectionId: string;
};

/**
 * Describes the message scalekit.v1.connections.ToggleEnvironmentConnectionRequest.
 * Use `create(ToggleEnvironmentConnectionRequestSchema)` to create a new message.
 */
export const ToggleEnvironmentConnectionRequestSchema: GenMessage<ToggleEnvironmentConnectionRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 20);

/**
 * @generated from message scalekit.v1.connections.ToggleConnectionRequest
 */
export type ToggleConnectionRequest = Message<"scalekit.v1.connections.ToggleConnectionRequest"> & {
  /**
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * @generated from field: string id = 3;
   */
  id: string;
};

/**
 * Describes the message scalekit.v1.connections.ToggleConnectionRequest.
 * Use `create(ToggleConnectionRequestSchema)` to create a new message.
 */
export const ToggleConnectionRequestSchema: GenMessage<ToggleConnectionRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 21);

/**
 * @generated from message scalekit.v1.connections.ToggleConnectionResponse
 */
export type ToggleConnectionResponse = Message<"scalekit.v1.connections.ToggleConnectionResponse"> & {
  /**
   * @generated from field: bool enabled = 1;
   */
  enabled: boolean;

  /**
   * @generated from field: optional string error_message = 2;
   */
  errorMessage?: string;
};

/**
 * Describes the message scalekit.v1.connections.ToggleConnectionResponse.
 * Use `create(ToggleConnectionResponseSchema)` to create a new message.
 */
export const ToggleConnectionResponseSchema: GenMessage<ToggleConnectionResponse> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 22);

/**
 * @generated from message scalekit.v1.connections.OIDCConnectionConfig
 */
export type OIDCConnectionConfig = Message<"scalekit.v1.connections.OIDCConnectionConfig"> & {
  /**
   * @generated from field: google.protobuf.StringValue issuer = 1;
   */
  issuer?: string;

  /**
   * @generated from field: google.protobuf.StringValue discovery_endpoint = 2;
   */
  discoveryEndpoint?: string;

  /**
   * @generated from field: google.protobuf.StringValue authorize_uri = 3;
   */
  authorizeUri?: string;

  /**
   * @generated from field: google.protobuf.StringValue token_uri = 4;
   */
  tokenUri?: string;

  /**
   * @generated from field: google.protobuf.StringValue user_info_uri = 5;
   */
  userInfoUri?: string;

  /**
   * @generated from field: google.protobuf.StringValue jwks_uri = 6;
   */
  jwksUri?: string;

  /**
   * @generated from field: google.protobuf.StringValue client_id = 8;
   */
  clientId?: string;

  /**
   * @generated from field: google.protobuf.StringValue client_secret = 9;
   */
  clientSecret?: string;

  /**
   * @generated from field: repeated scalekit.v1.connections.OIDCScope scopes = 10;
   */
  scopes: OIDCScope[];

  /**
   * @generated from field: scalekit.v1.connections.TokenAuthType token_auth_type = 11;
   */
  tokenAuthType: TokenAuthType;

  /**
   * @generated from field: string redirect_uri = 12;
   */
  redirectUri: string;

  /**
   * @generated from field: google.protobuf.BoolValue pkce_enabled = 13;
   */
  pkceEnabled?: boolean;

  /**
   * @generated from field: google.protobuf.BoolValue idp_logout_required = 14;
   */
  idpLogoutRequired?: boolean;

  /**
   * @generated from field: google.protobuf.StringValue post_logout_redirect_uri = 15;
   */
  postLogoutRedirectUri?: string;

  /**
   * @generated from field: google.protobuf.StringValue backchannel_logout_redirect_uri = 16;
   */
  backchannelLogoutRedirectUri?: string;
};

/**
 * Describes the message scalekit.v1.connections.OIDCConnectionConfig.
 * Use `create(OIDCConnectionConfigSchema)` to create a new message.
 */
export const OIDCConnectionConfigSchema: GenMessage<OIDCConnectionConfig> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 23);

/**
 * @generated from message scalekit.v1.connections.OAuthConnectionConfig
 */
export type OAuthConnectionConfig = Message<"scalekit.v1.connections.OAuthConnectionConfig"> & {
  /**
   * @generated from field: google.protobuf.StringValue authorize_uri = 3;
   */
  authorizeUri?: string;

  /**
   * @generated from field: google.protobuf.StringValue token_uri = 4;
   */
  tokenUri?: string;

  /**
   * @generated from field: google.protobuf.StringValue user_info_uri = 5;
   */
  userInfoUri?: string;

  /**
   * @generated from field: google.protobuf.StringValue client_id = 8;
   */
  clientId?: string;

  /**
   * @generated from field: google.protobuf.StringValue client_secret = 9;
   */
  clientSecret?: string;

  /**
   * @generated from field: repeated string scopes = 10;
   */
  scopes: string[];

  /**
   * @generated from field: string redirect_uri = 12;
   */
  redirectUri: string;

  /**
   * @generated from field: google.protobuf.BoolValue pkce_enabled = 13;
   */
  pkceEnabled?: boolean;

  /**
   * @generated from field: google.protobuf.StringValue prompt = 14;
   */
  prompt?: string;

  /**
   * @generated from field: google.protobuf.BoolValue use_platform_creds = 15;
   */
  usePlatformCreds?: boolean;
};

/**
 * Describes the message scalekit.v1.connections.OAuthConnectionConfig.
 * Use `create(OAuthConnectionConfigSchema)` to create a new message.
 */
export const OAuthConnectionConfigSchema: GenMessage<OAuthConnectionConfig> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 24);

/**
 * @generated from message scalekit.v1.connections.PasswordLessConfig
 */
export type PasswordLessConfig = Message<"scalekit.v1.connections.PasswordLessConfig"> & {
  /**
   * @generated from field: scalekit.v1.connections.PasswordlessType type = 1;
   */
  type: PasswordlessType;

  /**
   * @generated from field: optional google.protobuf.UInt32Value frequency = 2;
   */
  frequency?: number;

  /**
   * @generated from field: optional google.protobuf.UInt32Value validity = 3;
   */
  validity?: number;

  /**
   * @generated from field: optional google.protobuf.BoolValue enforce_same_browser_origin = 4;
   */
  enforceSameBrowserOrigin?: boolean;

  /**
   * @generated from field: optional google.protobuf.UInt32Value code_challenge_length = 5;
   */
  codeChallengeLength?: number;

  /**
   * @generated from field: optional scalekit.v1.connections.CodeChallengeType code_challenge_type = 6;
   */
  codeChallengeType?: CodeChallengeType;
};

/**
 * Describes the message scalekit.v1.connections.PasswordLessConfig.
 * Use `create(PasswordLessConfigSchema)` to create a new message.
 */
export const PasswordLessConfigSchema: GenMessage<PasswordLessConfig> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 25);

/**
 * @generated from message scalekit.v1.connections.SAMLConnectionConfigRequest
 */
export type SAMLConnectionConfigRequest = Message<"scalekit.v1.connections.SAMLConnectionConfigRequest"> & {
  /**
   * @generated from field: google.protobuf.StringValue idp_metadata_url = 1;
   */
  idpMetadataUrl?: string;

  /**
   * @generated from field: google.protobuf.StringValue idp_entity_id = 2;
   */
  idpEntityId?: string;

  /**
   * @generated from field: google.protobuf.StringValue idp_sso_url = 3;
   */
  idpSsoUrl?: string;

  /**
   * @generated from field: google.protobuf.StringValue idp_certificate = 4;
   */
  idpCertificate?: string;

  /**
   * @generated from field: google.protobuf.StringValue idp_slo_url = 5;
   */
  idpSloUrl?: string;

  /**
   * @generated from field: google.protobuf.StringValue ui_button_title = 6;
   */
  uiButtonTitle?: string;

  /**
   * @generated from field: scalekit.v1.connections.NameIdFormat idp_name_id_format = 7;
   */
  idpNameIdFormat: NameIdFormat;

  /**
   * @generated from field: scalekit.v1.connections.RequestBinding idp_sso_request_binding = 8;
   */
  idpSsoRequestBinding: RequestBinding;

  /**
   * @generated from field: scalekit.v1.connections.RequestBinding idp_slo_request_binding = 9;
   */
  idpSloRequestBinding: RequestBinding;

  /**
   * @generated from field: scalekit.v1.connections.SAMLSigningOptions saml_signing_option = 10;
   */
  samlSigningOption: SAMLSigningOptions;

  /**
   * @generated from field: google.protobuf.BoolValue force_authn = 14;
   */
  forceAuthn?: boolean;

  /**
   * @generated from field: google.protobuf.StringValue default_redirect_uri = 15;
   */
  defaultRedirectUri?: string;

  /**
   * @generated from field: google.protobuf.BoolValue assertion_encrypted = 16;
   */
  assertionEncrypted?: boolean;

  /**
   * @generated from field: google.protobuf.BoolValue want_request_signed = 17;
   */
  wantRequestSigned?: boolean;

  /**
   * @generated from field: google.protobuf.StringValue certificate_id = 18;
   */
  certificateId?: string;

  /**
   * @generated from field: google.protobuf.BoolValue idp_slo_required = 19;
   */
  idpSloRequired?: boolean;
};

/**
 * Describes the message scalekit.v1.connections.SAMLConnectionConfigRequest.
 * Use `create(SAMLConnectionConfigRequestSchema)` to create a new message.
 */
export const SAMLConnectionConfigRequestSchema: GenMessage<SAMLConnectionConfigRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 26);

/**
 * @generated from message scalekit.v1.connections.SAMLConnectionConfigResponse
 */
export type SAMLConnectionConfigResponse = Message<"scalekit.v1.connections.SAMLConnectionConfigResponse"> & {
  /**
   * @generated from field: string sp_entity_id = 1;
   */
  spEntityId: string;

  /**
   * @generated from field: string sp_assertion_url = 2;
   */
  spAssertionUrl: string;

  /**
   * @generated from field: string sp_metadata_url = 3;
   */
  spMetadataUrl: string;

  /**
   * @generated from field: google.protobuf.StringValue idp_metadata_url = 4;
   */
  idpMetadataUrl?: string;

  /**
   * @generated from field: google.protobuf.StringValue idp_entity_id = 5;
   */
  idpEntityId?: string;

  /**
   * @generated from field: google.protobuf.StringValue idp_sso_url = 6;
   */
  idpSsoUrl?: string;

  /**
   * @generated from field: repeated scalekit.v1.connections.IDPCertificate idp_certificates = 7;
   */
  idpCertificates: IDPCertificate[];

  /**
   * @generated from field: google.protobuf.StringValue idp_slo_url = 8;
   */
  idpSloUrl?: string;

  /**
   * @generated from field: google.protobuf.StringValue ui_button_title = 9;
   */
  uiButtonTitle?: string;

  /**
   * @generated from field: scalekit.v1.connections.NameIdFormat idp_name_id_format = 10;
   */
  idpNameIdFormat: NameIdFormat;

  /**
   * @generated from field: scalekit.v1.connections.RequestBinding idp_sso_request_binding = 11;
   */
  idpSsoRequestBinding: RequestBinding;

  /**
   * @generated from field: scalekit.v1.connections.RequestBinding idp_slo_request_binding = 12;
   */
  idpSloRequestBinding: RequestBinding;

  /**
   * @generated from field: scalekit.v1.connections.SAMLSigningOptions saml_signing_option = 13;
   */
  samlSigningOption: SAMLSigningOptions;

  /**
   * @generated from field: google.protobuf.BoolValue allow_idp_initiated_login = 14;
   */
  allowIdpInitiatedLogin?: boolean;

  /**
   * @generated from field: google.protobuf.BoolValue force_authn = 15;
   */
  forceAuthn?: boolean;

  /**
   * @generated from field: google.protobuf.StringValue default_redirect_uri = 16;
   */
  defaultRedirectUri?: string;

  /**
   * @generated from field: google.protobuf.BoolValue assertion_encrypted = 17;
   */
  assertionEncrypted?: boolean;

  /**
   * @generated from field: google.protobuf.BoolValue want_request_signed = 18;
   */
  wantRequestSigned?: boolean;

  /**
   * @generated from field: google.protobuf.StringValue certificate_id = 19;
   */
  certificateId?: string;

  /**
   * @generated from field: google.protobuf.BoolValue idp_slo_required = 20;
   */
  idpSloRequired?: boolean;

  /**
   * @generated from field: google.protobuf.StringValue sp_slo_url = 21;
   */
  spSloUrl?: string;
};

/**
 * Describes the message scalekit.v1.connections.SAMLConnectionConfigResponse.
 * Use `create(SAMLConnectionConfigResponseSchema)` to create a new message.
 */
export const SAMLConnectionConfigResponseSchema: GenMessage<SAMLConnectionConfigResponse> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 27);

/**
 * @generated from message scalekit.v1.connections.IDPCertificate
 */
export type IDPCertificate = Message<"scalekit.v1.connections.IDPCertificate"> & {
  /**
   * @generated from field: string certificate = 1;
   */
  certificate: string;

  /**
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp expiry_time = 3;
   */
  expiryTime?: Timestamp;

  /**
   * @generated from field: string id = 4;
   */
  id: string;

  /**
   * @generated from field: string issuer = 5;
   */
  issuer: string;
};

/**
 * Describes the message scalekit.v1.connections.IDPCertificate.
 * Use `create(IDPCertificateSchema)` to create a new message.
 */
export const IDPCertificateSchema: GenMessage<IDPCertificate> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 28);

/**
 * @generated from message scalekit.v1.connections.GetOIDCMetadataRequest
 */
export type GetOIDCMetadataRequest = Message<"scalekit.v1.connections.GetOIDCMetadataRequest"> & {
  /**
   * @generated from field: scalekit.v1.connections.OIDCMetadataRequest metadata = 1;
   */
  metadata?: OIDCMetadataRequest;
};

/**
 * Describes the message scalekit.v1.connections.GetOIDCMetadataRequest.
 * Use `create(GetOIDCMetadataRequestSchema)` to create a new message.
 */
export const GetOIDCMetadataRequestSchema: GenMessage<GetOIDCMetadataRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 29);

/**
 * @generated from message scalekit.v1.connections.OIDCMetadataRequest
 */
export type OIDCMetadataRequest = Message<"scalekit.v1.connections.OIDCMetadataRequest"> & {
  /**
   * @generated from field: string issuer = 1;
   */
  issuer: string;
};

/**
 * Describes the message scalekit.v1.connections.OIDCMetadataRequest.
 * Use `create(OIDCMetadataRequestSchema)` to create a new message.
 */
export const OIDCMetadataRequestSchema: GenMessage<OIDCMetadataRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 30);

/**
 * @generated from message scalekit.v1.connections.GetOIDCMetadataResponse
 */
export type GetOIDCMetadataResponse = Message<"scalekit.v1.connections.GetOIDCMetadataResponse"> & {
  /**
   * @generated from field: string issuer = 1;
   */
  issuer: string;

  /**
   * @generated from field: string authorization_endpoint = 2;
   */
  authorizationEndpoint: string;

  /**
   * @generated from field: string token_endpoint = 3;
   */
  tokenEndpoint: string;

  /**
   * @generated from field: string userinfo_endpoint = 4;
   */
  userinfoEndpoint: string;

  /**
   * @generated from field: string jwks_uri = 5;
   */
  jwksUri: string;
};

/**
 * Describes the message scalekit.v1.connections.GetOIDCMetadataResponse.
 * Use `create(GetOIDCMetadataResponseSchema)` to create a new message.
 */
export const GetOIDCMetadataResponseSchema: GenMessage<GetOIDCMetadataResponse> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 31);

/**
 * @generated from message scalekit.v1.connections.GetSAMLMetadataRequest
 */
export type GetSAMLMetadataRequest = Message<"scalekit.v1.connections.GetSAMLMetadataRequest"> & {
  /**
   * @generated from field: scalekit.v1.connections.SAMLMetadataRequest metadata = 1;
   */
  metadata?: SAMLMetadataRequest;
};

/**
 * Describes the message scalekit.v1.connections.GetSAMLMetadataRequest.
 * Use `create(GetSAMLMetadataRequestSchema)` to create a new message.
 */
export const GetSAMLMetadataRequestSchema: GenMessage<GetSAMLMetadataRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 32);

/**
 * @generated from message scalekit.v1.connections.SAMLMetadataRequest
 */
export type SAMLMetadataRequest = Message<"scalekit.v1.connections.SAMLMetadataRequest"> & {
  /**
   * @generated from field: string metadata_url = 1;
   */
  metadataUrl: string;
};

/**
 * Describes the message scalekit.v1.connections.SAMLMetadataRequest.
 * Use `create(SAMLMetadataRequestSchema)` to create a new message.
 */
export const SAMLMetadataRequestSchema: GenMessage<SAMLMetadataRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 33);

/**
 * @generated from message scalekit.v1.connections.GetSAMLMetadataResponse
 */
export type GetSAMLMetadataResponse = Message<"scalekit.v1.connections.GetSAMLMetadataResponse"> & {
  /**
   * @generated from field: string idp_entity_id = 1;
   */
  idpEntityId: string;

  /**
   * @generated from field: string idp_sso_url = 2;
   */
  idpSsoUrl: string;

  /**
   * @generated from field: string idp_slo_url = 3;
   */
  idpSloUrl: string;

  /**
   * @generated from field: repeated string idp_certificates = 4;
   */
  idpCertificates: string[];

  /**
   * @generated from field: string idp_name_id_format = 5;
   */
  idpNameIdFormat: string;

  /**
   * @generated from field: string request_binding = 6;
   */
  requestBinding: string;

  /**
   * @generated from field: bool want_assertions_signed = 7;
   */
  wantAssertionsSigned: boolean;
};

/**
 * Describes the message scalekit.v1.connections.GetSAMLMetadataResponse.
 * Use `create(GetSAMLMetadataResponseSchema)` to create a new message.
 */
export const GetSAMLMetadataResponseSchema: GenMessage<GetSAMLMetadataResponse> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 34);

/**
 * @generated from message scalekit.v1.connections.GetSAMLCertificateDetailsRequest
 */
export type GetSAMLCertificateDetailsRequest = Message<"scalekit.v1.connections.GetSAMLCertificateDetailsRequest"> & {
  /**
   * @generated from field: scalekit.v1.connections.SAMLCertificateRequest certificate = 1;
   */
  certificate?: SAMLCertificateRequest;
};

/**
 * Describes the message scalekit.v1.connections.GetSAMLCertificateDetailsRequest.
 * Use `create(GetSAMLCertificateDetailsRequestSchema)` to create a new message.
 */
export const GetSAMLCertificateDetailsRequestSchema: GenMessage<GetSAMLCertificateDetailsRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 35);

/**
 * @generated from message scalekit.v1.connections.SAMLCertificateRequest
 */
export type SAMLCertificateRequest = Message<"scalekit.v1.connections.SAMLCertificateRequest"> & {
  /**
   * @generated from field: string text = 1;
   */
  text: string;
};

/**
 * Describes the message scalekit.v1.connections.SAMLCertificateRequest.
 * Use `create(SAMLCertificateRequestSchema)` to create a new message.
 */
export const SAMLCertificateRequestSchema: GenMessage<SAMLCertificateRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 36);

/**
 * @generated from message scalekit.v1.connections.GetSAMLCertificateDetailsResponse
 */
export type GetSAMLCertificateDetailsResponse = Message<"scalekit.v1.connections.GetSAMLCertificateDetailsResponse"> & {
  /**
   * @generated from field: string text = 1;
   */
  text: string;

  /**
   * @generated from field: int64 not_after = 2;
   */
  notAfter: bigint;

  /**
   * @generated from field: int64 not_before = 3;
   */
  notBefore: bigint;

  /**
   * @generated from field: string subject = 4;
   */
  subject: string;

  /**
   * @generated from field: string issuer = 5;
   */
  issuer: string;
};

/**
 * Describes the message scalekit.v1.connections.GetSAMLCertificateDetailsResponse.
 * Use `create(GetSAMLCertificateDetailsResponseSchema)` to create a new message.
 */
export const GetSAMLCertificateDetailsResponseSchema: GenMessage<GetSAMLCertificateDetailsResponse> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 37);

/**
 * @generated from message scalekit.v1.connections.GetConnectionTestResultRequest
 */
export type GetConnectionTestResultRequest = Message<"scalekit.v1.connections.GetConnectionTestResultRequest"> & {
  /**
   * @generated from field: string connection_id = 1;
   */
  connectionId: string;

  /**
   * @generated from field: string test_request_id = 2;
   */
  testRequestId: string;
};

/**
 * Describes the message scalekit.v1.connections.GetConnectionTestResultRequest.
 * Use `create(GetConnectionTestResultRequestSchema)` to create a new message.
 */
export const GetConnectionTestResultRequestSchema: GenMessage<GetConnectionTestResultRequest> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 38);

/**
 * @generated from message scalekit.v1.connections.GetConnectionTestResultResponse
 */
export type GetConnectionTestResultResponse = Message<"scalekit.v1.connections.GetConnectionTestResultResponse"> & {
  /**
   * @generated from field: scalekit.v1.connections.TestResultStatus status = 1;
   */
  status: TestResultStatus;

  /**
   * @generated from field: optional string user_info = 2;
   */
  userInfo?: string;

  /**
   * @generated from field: optional string error = 3;
   */
  error?: string;

  /**
   * @generated from field: optional string error_description = 4;
   */
  errorDescription?: string;

  /**
   * @generated from field: optional string error_details = 5;
   */
  errorDetails?: string;
};

/**
 * Describes the message scalekit.v1.connections.GetConnectionTestResultResponse.
 * Use `create(GetConnectionTestResultResponseSchema)` to create a new message.
 */
export const GetConnectionTestResultResponseSchema: GenMessage<GetConnectionTestResultResponse> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 39);

/**
 * @generated from message scalekit.v1.connections.PasswordConnectionConfig
 */
export type PasswordConnectionConfig = Message<"scalekit.v1.connections.PasswordConnectionConfig"> & {
};

/**
 * Describes the message scalekit.v1.connections.PasswordConnectionConfig.
 * Use `create(PasswordConnectionConfigSchema)` to create a new message.
 */
export const PasswordConnectionConfigSchema: GenMessage<PasswordConnectionConfig> = /*@__PURE__*/
  messageDesc(file_scalekit_v1_connections_connections, 40);

/**
 * @generated from enum scalekit.v1.connections.CodeChallengeType
 */
export enum CodeChallengeType {
  /**
   * @generated from enum value: CODE_CHALLENGE_TYPE_UNSPECIFIED = 0;
   */
  CODE_CHALLENGE_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: NUMERIC = 1;
   */
  NUMERIC = 1,

  /**
   * @generated from enum value: ALPHANUMERIC = 2;
   */
  ALPHANUMERIC = 2,
}

/**
 * Describes the enum scalekit.v1.connections.CodeChallengeType.
 */
export const CodeChallengeTypeSchema: GenEnum<CodeChallengeType> = /*@__PURE__*/
  enumDesc(file_scalekit_v1_connections_connections, 0);

/**
 * @generated from enum scalekit.v1.connections.ConfigurationType
 */
export enum ConfigurationType {
  /**
   * @generated from enum value: CONFIGURATION_TYPE_UNSPECIFIED = 0;
   */
  CONFIGURATION_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: DISCOVERY = 1;
   */
  DISCOVERY = 1,

  /**
   * @generated from enum value: MANUAL = 2;
   */
  MANUAL = 2,
}

/**
 * Describes the enum scalekit.v1.connections.ConfigurationType.
 */
export const ConfigurationTypeSchema: GenEnum<ConfigurationType> = /*@__PURE__*/
  enumDesc(file_scalekit_v1_connections_connections, 1);

/**
 * @generated from enum scalekit.v1.connections.NameIdFormat
 */
export enum NameIdFormat {
  /**
   * @generated from enum value: NAME_ID_FORMAT_NIL = 0;
   */
  NAME_ID_FORMAT_NIL = 0,

  /**
   * @generated from enum value: UNSPECIFIED = 1;
   */
  UNSPECIFIED = 1,

  /**
   * @generated from enum value: EMAIL = 2;
   */
  EMAIL = 2,

  /**
   * @generated from enum value: TRANSIENT = 3;
   */
  TRANSIENT = 3,

  /**
   * @generated from enum value: PERSISTENT = 4;
   */
  PERSISTENT = 4,
}

/**
 * Describes the enum scalekit.v1.connections.NameIdFormat.
 */
export const NameIdFormatSchema: GenEnum<NameIdFormat> = /*@__PURE__*/
  enumDesc(file_scalekit_v1_connections_connections, 2);

/**
 * @generated from enum scalekit.v1.connections.PasswordlessType
 */
export enum PasswordlessType {
  /**
   * @generated from enum value: PasswordlessType_UNSPECIFIED = 0;
   */
  PasswordlessType_UNSPECIFIED = 0,

  /**
   * @generated from enum value: LINK = 1;
   */
  LINK = 1,

  /**
   * @generated from enum value: OTP = 2;
   */
  OTP = 2,

  /**
   * @generated from enum value: LINK_OTP = 3;
   */
  LINK_OTP = 3,
}

/**
 * Describes the enum scalekit.v1.connections.PasswordlessType.
 */
export const PasswordlessTypeSchema: GenEnum<PasswordlessType> = /*@__PURE__*/
  enumDesc(file_scalekit_v1_connections_connections, 3);

/**
 * @generated from enum scalekit.v1.connections.TestResultStatus
 */
export enum TestResultStatus {
  /**
   * @generated from enum value: PENDING = 0;
   */
  PENDING = 0,

  /**
   * @generated from enum value: SUCCESS = 1;
   */
  SUCCESS = 1,

  /**
   * @generated from enum value: FAILURE = 2;
   */
  FAILURE = 2,
}

/**
 * Describes the enum scalekit.v1.connections.TestResultStatus.
 */
export const TestResultStatusSchema: GenEnum<TestResultStatus> = /*@__PURE__*/
  enumDesc(file_scalekit_v1_connections_connections, 4);

/**
 * enums all
 *
 * @generated from enum scalekit.v1.connections.SAMLSigningOptions
 */
export enum SAMLSigningOptions {
  /**
   * @generated from enum value: SAML_SIGNING_OPTIONS_UNSPECIFIED = 0;
   */
  SAML_SIGNING_OPTIONS_UNSPECIFIED = 0,

  /**
   * @generated from enum value: NO_SIGNING = 1;
   */
  NO_SIGNING = 1,

  /**
   * @generated from enum value: SAML_ONLY_RESPONSE_SIGNING = 2;
   */
  SAML_ONLY_RESPONSE_SIGNING = 2,

  /**
   * @generated from enum value: SAML_ONLY_ASSERTION_SIGNING = 3;
   */
  SAML_ONLY_ASSERTION_SIGNING = 3,

  /**
   * @generated from enum value: SAML_RESPONSE_ASSERTION_SIGNING = 4;
   */
  SAML_RESPONSE_ASSERTION_SIGNING = 4,

  /**
   * @generated from enum value: SAML_RESPONSE_OR_ASSERTION_SIGNING = 5;
   */
  SAML_RESPONSE_OR_ASSERTION_SIGNING = 5,
}

/**
 * Describes the enum scalekit.v1.connections.SAMLSigningOptions.
 */
export const SAMLSigningOptionsSchema: GenEnum<SAMLSigningOptions> = /*@__PURE__*/
  enumDesc(file_scalekit_v1_connections_connections, 5);

/**
 * @generated from enum scalekit.v1.connections.RequestBinding
 */
export enum RequestBinding {
  /**
   * @generated from enum value: REQUEST_BINDING_UNSPECIFIED = 0;
   */
  REQUEST_BINDING_UNSPECIFIED = 0,

  /**
   * @generated from enum value: HTTP_POST = 1;
   */
  HTTP_POST = 1,

  /**
   * @generated from enum value: HTTP_REDIRECT = 2;
   */
  HTTP_REDIRECT = 2,
}

/**
 * Describes the enum scalekit.v1.connections.RequestBinding.
 */
export const RequestBindingSchema: GenEnum<RequestBinding> = /*@__PURE__*/
  enumDesc(file_scalekit_v1_connections_connections, 6);

/**
 * @generated from enum scalekit.v1.connections.TokenAuthType
 */
export enum TokenAuthType {
  /**
   * @generated from enum value: TOKEN_AUTH_TYPE_UNSPECIFIED = 0;
   */
  TOKEN_AUTH_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: URL_PARAMS = 1;
   */
  URL_PARAMS = 1,

  /**
   * @generated from enum value: BASIC_AUTH = 2;
   */
  BASIC_AUTH = 2,
}

/**
 * Describes the enum scalekit.v1.connections.TokenAuthType.
 */
export const TokenAuthTypeSchema: GenEnum<TokenAuthType> = /*@__PURE__*/
  enumDesc(file_scalekit_v1_connections_connections, 7);

/**
 * @generated from enum scalekit.v1.connections.OIDCScope
 */
export enum OIDCScope {
  /**
   * @generated from enum value: OIDC_SCOPE_UNSPECIFIED = 0;
   */
  OIDC_SCOPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: openid = 1;
   */
  openid = 1,

  /**
   * @generated from enum value: profile = 2;
   */
  profile = 2,

  /**
   * @generated from enum value: email = 3;
   */
  email = 3,

  /**
   * @generated from enum value: address = 4;
   */
  address = 4,

  /**
   * @generated from enum value: phone = 5;
   */
  phone = 5,
}

/**
 * Describes the enum scalekit.v1.connections.OIDCScope.
 */
export const OIDCScopeSchema: GenEnum<OIDCScope> = /*@__PURE__*/
  enumDesc(file_scalekit_v1_connections_connections, 8);

/**
 * @generated from enum scalekit.v1.connections.ConnectionType
 */
export enum ConnectionType {
  /**
   * @generated from enum value: INVALID = 0;
   */
  INVALID = 0,

  /**
   * @generated from enum value: OIDC = 1;
   */
  OIDC = 1,

  /**
   * @generated from enum value: SAML = 2;
   */
  SAML = 2,

  /**
   * @generated from enum value: PASSWORD = 3;
   */
  PASSWORD = 3,

  /**
   * @generated from enum value: OAUTH = 4;
   */
  OAUTH = 4,

  /**
   * @generated from enum value: PASSWORDLESS = 5;
   */
  PASSWORDLESS = 5,
}

/**
 * Describes the enum scalekit.v1.connections.ConnectionType.
 */
export const ConnectionTypeSchema: GenEnum<ConnectionType> = /*@__PURE__*/
  enumDesc(file_scalekit_v1_connections_connections, 9);

/**
 * @generated from enum scalekit.v1.connections.ConnectionStatus
 */
export enum ConnectionStatus {
  /**
   * @generated from enum value: CONNECTION_STATUS_UNSPECIFIED = 0;
   */
  CONNECTION_STATUS_UNSPECIFIED = 0,

  /**
   * @generated from enum value: DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * @generated from enum value: IN_PROGRESS = 2;
   */
  IN_PROGRESS = 2,

  /**
   * @generated from enum value: COMPLETED = 3;
   */
  COMPLETED = 3,
}

/**
 * Describes the enum scalekit.v1.connections.ConnectionStatus.
 */
export const ConnectionStatusSchema: GenEnum<ConnectionStatus> = /*@__PURE__*/
  enumDesc(file_scalekit_v1_connections_connections, 10);

/**
 * @generated from enum scalekit.v1.connections.ConnectionProvider
 */
export enum ConnectionProvider {
  /**
   * @generated from enum value: CONNECTION_PROVIDER_UNSPECIFIED = 0;
   */
  CONNECTION_PROVIDER_UNSPECIFIED = 0,

  /**
   * @generated from enum value: OKTA = 1;
   */
  OKTA = 1,

  /**
   * @generated from enum value: GOOGLE = 2;
   */
  GOOGLE = 2,

  /**
   * @generated from enum value: MICROSOFT_AD = 3;
   */
  MICROSOFT_AD = 3,

  /**
   * @generated from enum value: AUTH0 = 4;
   */
  AUTH0 = 4,

  /**
   * @generated from enum value: ONELOGIN = 5;
   */
  ONELOGIN = 5,

  /**
   * @generated from enum value: PING_IDENTITY = 6;
   */
  PING_IDENTITY = 6,

  /**
   * @generated from enum value: JUMPCLOUD = 7;
   */
  JUMPCLOUD = 7,

  /**
   * @generated from enum value: CUSTOM = 8;
   */
  CUSTOM = 8,

  /**
   * @generated from enum value: GITHUB = 9;
   */
  GITHUB = 9,

  /**
   * @generated from enum value: GITLAB = 10;
   */
  GITLAB = 10,

  /**
   * @generated from enum value: LINKEDIN = 11;
   */
  LINKEDIN = 11,

  /**
   * @generated from enum value: SALESFORCE = 12;
   */
  SALESFORCE = 12,

  /**
   * @generated from enum value: MICROSOFT = 13;
   */
  MICROSOFT = 13,

  /**
   * @generated from enum value: IDP_SIMULATOR = 14;
   */
  IDP_SIMULATOR = 14,

  /**
   * @generated from enum value: SCALEKIT = 15;
   */
  SCALEKIT = 15,

  /**
   * @generated from enum value: ADFS = 16;
   */
  ADFS = 16,
}

/**
 * Describes the enum scalekit.v1.connections.ConnectionProvider.
 */
export const ConnectionProviderSchema: GenEnum<ConnectionProvider> = /*@__PURE__*/
  enumDesc(file_scalekit_v1_connections_connections, 11);

/**
 * @generated from service scalekit.v1.connections.ConnectionService
 */
export const ConnectionService: GenService<{
  /**
   * @generated from rpc scalekit.v1.connections.ConnectionService.GetProviders
   */
  getProviders: {
    methodKind: "unary";
    input: typeof GetProvidersRequestSchema;
    output: typeof GetProvidersResponseSchema;
  },
  /**
   * @generated from rpc scalekit.v1.connections.ConnectionService.CreateEnvironmentConnection
   */
  createEnvironmentConnection: {
    methodKind: "unary";
    input: typeof CreateEnvironmentConnectionRequestSchema;
    output: typeof CreateConnectionResponseSchema;
  },
  /**
   * @generated from rpc scalekit.v1.connections.ConnectionService.CreateConnection
   */
  createConnection: {
    methodKind: "unary";
    input: typeof CreateConnectionRequestSchema;
    output: typeof CreateConnectionResponseSchema;
  },
  /**
   * @generated from rpc scalekit.v1.connections.ConnectionService.GetEnvironmentConnection
   */
  getEnvironmentConnection: {
    methodKind: "unary";
    input: typeof GetEnvironmentConnectionRequestSchema;
    output: typeof GetConnectionResponseSchema;
  },
  /**
   * @generated from rpc scalekit.v1.connections.ConnectionService.GetConnection
   */
  getConnection: {
    methodKind: "unary";
    input: typeof GetConnectionRequestSchema;
    output: typeof GetConnectionResponseSchema;
  },
  /**
   * @generated from rpc scalekit.v1.connections.ConnectionService.ListConnections
   */
  listConnections: {
    methodKind: "unary";
    input: typeof ListConnectionsRequestSchema;
    output: typeof ListConnectionsResponseSchema;
  },
  /**
   * @generated from rpc scalekit.v1.connections.ConnectionService.UpdateEnvironmentConnection
   */
  updateEnvironmentConnection: {
    methodKind: "unary";
    input: typeof UpdateEnvironmentConnectionRequestSchema;
    output: typeof UpdateConnectionResponseSchema;
  },
  /**
   * @generated from rpc scalekit.v1.connections.ConnectionService.UpdateConnection
   */
  updateConnection: {
    methodKind: "unary";
    input: typeof UpdateConnectionRequestSchema;
    output: typeof UpdateConnectionResponseSchema;
  },
  /**
   * @generated from rpc scalekit.v1.connections.ConnectionService.DeleteEnvironmentConnection
   */
  deleteEnvironmentConnection: {
    methodKind: "unary";
    input: typeof DeleteEnvironmentConnectionRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc scalekit.v1.connections.ConnectionService.DeleteConnection
   */
  deleteConnection: {
    methodKind: "unary";
    input: typeof DeleteConnectionRequestSchema;
    output: typeof EmptySchema;
  },
  /**
   * @generated from rpc scalekit.v1.connections.ConnectionService.EnableEnvironmentConnection
   */
  enableEnvironmentConnection: {
    methodKind: "unary";
    input: typeof ToggleEnvironmentConnectionRequestSchema;
    output: typeof ToggleConnectionResponseSchema;
  },
  /**
   * @generated from rpc scalekit.v1.connections.ConnectionService.EnableConnection
   */
  enableConnection: {
    methodKind: "unary";
    input: typeof ToggleConnectionRequestSchema;
    output: typeof ToggleConnectionResponseSchema;
  },
  /**
   * @generated from rpc scalekit.v1.connections.ConnectionService.DisableEnvironmentConnection
   */
  disableEnvironmentConnection: {
    methodKind: "unary";
    input: typeof ToggleEnvironmentConnectionRequestSchema;
    output: typeof ToggleConnectionResponseSchema;
  },
  /**
   * @generated from rpc scalekit.v1.connections.ConnectionService.DisableConnection
   */
  disableConnection: {
    methodKind: "unary";
    input: typeof ToggleConnectionRequestSchema;
    output: typeof ToggleConnectionResponseSchema;
  },
  /**
   * @generated from rpc scalekit.v1.connections.ConnectionService.GetConnectionTestResult
   */
  getConnectionTestResult: {
    methodKind: "unary";
    input: typeof GetConnectionTestResultRequestSchema;
    output: typeof GetConnectionTestResultResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_scalekit_v1_connections_connections, 0);

