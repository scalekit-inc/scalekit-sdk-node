"use strict";
// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file scalekit/v1/errdetails/errdetails.proto (package scalekit.v1.errdetails, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocalizedMessageInfo = exports.HelpInfo_Link = exports.HelpInfo = exports.ResourceInfo = exports.RequestInfo = exports.ValidationErrorInfo_FieldViolation = exports.ValidationErrorInfo = exports.DebugInfo = exports.ErrorInfo = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from message scalekit.v1.errdetails.ErrorInfo
 */
class ErrorInfo extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string error_code = 1;
         */
        this.errorCode = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ErrorInfo().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ErrorInfo().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ErrorInfo().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ErrorInfo, a, b);
    }
}
exports.ErrorInfo = ErrorInfo;
ErrorInfo.runtime = protobuf_1.proto3;
ErrorInfo.typeName = "scalekit.v1.errdetails.ErrorInfo";
ErrorInfo.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "error_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "debug_info", kind: "message", T: DebugInfo, opt: true },
    { no: 3, name: "help_info", kind: "message", T: HelpInfo, opt: true },
    { no: 4, name: "localized_message_info", kind: "message", T: LocalizedMessageInfo, opt: true },
    { no: 5, name: "resource_info", kind: "message", T: ResourceInfo, opt: true },
    { no: 6, name: "request_info", kind: "message", T: RequestInfo, opt: true },
    { no: 8, name: "validation_error_info", kind: "message", T: ValidationErrorInfo, opt: true },
]);
/**
 * Describes additional debugging info.
 *
 * @generated from message scalekit.v1.errdetails.DebugInfo
 */
class DebugInfo extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * The stack trace entries indicating where the error occurred.
         *
         * @generated from field: repeated string stack_entries = 1;
         */
        this.stackEntries = [];
        /**
         * Additional debugging information provided by the server.
         *
         * @generated from field: string detail = 2;
         */
        this.detail = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new DebugInfo().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new DebugInfo().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new DebugInfo().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(DebugInfo, a, b);
    }
}
exports.DebugInfo = DebugInfo;
DebugInfo.runtime = protobuf_1.proto3;
DebugInfo.typeName = "scalekit.v1.errdetails.DebugInfo";
DebugInfo.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "stack_entries", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "detail", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * Describes violations in a client request. This error type focuses on the
 * syntactic aspects of the request.
 *
 * @generated from message scalekit.v1.errdetails.ValidationErrorInfo
 */
class ValidationErrorInfo extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * Describes all violations in a client request.
         *
         * @generated from field: repeated scalekit.v1.errdetails.ValidationErrorInfo.FieldViolation field_violations = 1;
         */
        this.fieldViolations = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ValidationErrorInfo().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ValidationErrorInfo().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ValidationErrorInfo().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ValidationErrorInfo, a, b);
    }
}
exports.ValidationErrorInfo = ValidationErrorInfo;
ValidationErrorInfo.runtime = protobuf_1.proto3;
ValidationErrorInfo.typeName = "scalekit.v1.errdetails.ValidationErrorInfo";
ValidationErrorInfo.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "field_violations", kind: "message", T: ValidationErrorInfo_FieldViolation, repeated: true },
]);
/**
 * A message type used to describe a single bad request field.
 *
 * @generated from message scalekit.v1.errdetails.ValidationErrorInfo.FieldViolation
 */
class ValidationErrorInfo_FieldViolation extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string field = 1;
         */
        this.field = "";
        /**
         * A description of why the request element is bad.
         *
         * @generated from field: string description = 2;
         */
        this.description = "";
        /**
         * @generated from field: string constraint = 3;
         */
        this.constraint = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ValidationErrorInfo_FieldViolation().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ValidationErrorInfo_FieldViolation().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ValidationErrorInfo_FieldViolation().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ValidationErrorInfo_FieldViolation, a, b);
    }
}
exports.ValidationErrorInfo_FieldViolation = ValidationErrorInfo_FieldViolation;
ValidationErrorInfo_FieldViolation.runtime = protobuf_1.proto3;
ValidationErrorInfo_FieldViolation.typeName = "scalekit.v1.errdetails.ValidationErrorInfo.FieldViolation";
ValidationErrorInfo_FieldViolation.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "constraint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * Contains metadata about the request that clients can attach when filing a bug
 * or providing other forms of feedback.
 *
 * @generated from message scalekit.v1.errdetails.RequestInfo
 */
class RequestInfo extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * An opaque string that should only be interpreted by the service generating
         * it. For example, it can be used to identify requests in the service's logs.
         *
         * @generated from field: string request_id = 1;
         */
        this.requestId = "";
        /**
         * Any data that was used to serve this request. For example, an encrypted
         * stack trace that can be sent back to the service provider for debugging.
         *
         * @generated from field: string serving_data = 2;
         */
        this.servingData = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new RequestInfo().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new RequestInfo().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new RequestInfo().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(RequestInfo, a, b);
    }
}
exports.RequestInfo = RequestInfo;
RequestInfo.runtime = protobuf_1.proto3;
RequestInfo.typeName = "scalekit.v1.errdetails.RequestInfo";
RequestInfo.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "request_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "serving_data", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * Describes the resource that is being accessed.
 *
 * @generated from message scalekit.v1.errdetails.ResourceInfo
 */
class ResourceInfo extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string resource_type = 1;
         */
        this.resourceType = "";
        /**
         * @generated from field: string resource_name = 2;
         */
        this.resourceName = "";
        /**
         * @generated from field: string owner = 3;
         */
        this.owner = "";
        /**
         * Describes what error is encountered when accessing this resource.
         * For example, updating a cloud project may require the `writer` permission
         * on the developer console project.
         *
         * @generated from field: string description = 4;
         */
        this.description = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ResourceInfo().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ResourceInfo().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ResourceInfo().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ResourceInfo, a, b);
    }
}
exports.ResourceInfo = ResourceInfo;
ResourceInfo.runtime = protobuf_1.proto3;
ResourceInfo.typeName = "scalekit.v1.errdetails.ResourceInfo";
ResourceInfo.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "resource_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "resource_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "owner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message scalekit.v1.errdetails.HelpInfo
 */
class HelpInfo extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: repeated scalekit.v1.errdetails.HelpInfo.Link links = 1;
         */
        this.links = [];
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new HelpInfo().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new HelpInfo().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new HelpInfo().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(HelpInfo, a, b);
    }
}
exports.HelpInfo = HelpInfo;
HelpInfo.runtime = protobuf_1.proto3;
HelpInfo.typeName = "scalekit.v1.errdetails.HelpInfo";
HelpInfo.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "links", kind: "message", T: HelpInfo_Link, repeated: true },
]);
/**
 * @generated from message scalekit.v1.errdetails.HelpInfo.Link
 */
class HelpInfo_Link extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string description = 1;
         */
        this.description = "";
        /**
         * @generated from field: string url = 2;
         */
        this.url = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new HelpInfo_Link().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new HelpInfo_Link().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new HelpInfo_Link().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(HelpInfo_Link, a, b);
    }
}
exports.HelpInfo_Link = HelpInfo_Link;
HelpInfo_Link.runtime = protobuf_1.proto3;
HelpInfo_Link.typeName = "scalekit.v1.errdetails.HelpInfo.Link";
HelpInfo_Link.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message scalekit.v1.errdetails.LocalizedMessageInfo
 */
class LocalizedMessageInfo extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string locale = 1;
         */
        this.locale = "";
        /**
         * @generated from field: string message = 2;
         */
        this.message = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new LocalizedMessageInfo().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new LocalizedMessageInfo().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new LocalizedMessageInfo().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(LocalizedMessageInfo, a, b);
    }
}
exports.LocalizedMessageInfo = LocalizedMessageInfo;
LocalizedMessageInfo.runtime = protobuf_1.proto3;
LocalizedMessageInfo.typeName = "scalekit.v1.errdetails.LocalizedMessageInfo";
LocalizedMessageInfo.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "locale", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
//# sourceMappingURL=errdetails_pb.js.map