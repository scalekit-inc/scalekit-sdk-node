"use strict";
// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file scalekit/v1/options/options.proto (package scalekit.v1.options, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.auth_option = exports.AuthOption = exports.AuthenticationType = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from enum scalekit.v1.options.AuthenticationType
 */
var AuthenticationType;
(function (AuthenticationType) {
    /**
     * API is blocked / private  and default
     *
     * @generated from enum value: BLOCKED = 0;
     */
    AuthenticationType[AuthenticationType["BLOCKED"] = 0] = "BLOCKED";
    /**
     * API is open
     *
     * @generated from enum value: NONE = 1;
     */
    AuthenticationType[AuthenticationType["NONE"] = 1] = "NONE";
    /**
     * workspace_id is in claims
     *
     * @generated from enum value: WORKSPACE = 64;
     */
    AuthenticationType[AuthenticationType["WORKSPACE"] = 64] = "WORKSPACE";
    /**
     * claims has organisation ID
     *
     * @generated from enum value: CUSTOMER_PORTAL = 32;
     */
    AuthenticationType[AuthenticationType["CUSTOMER_PORTAL"] = 32] = "CUSTOMER_PORTAL";
    /**
     * claims has UI in audience
     *
     * @generated from enum value: SESSION = 16;
     */
    AuthenticationType[AuthenticationType["SESSION"] = 16] = "SESSION";
    /**
     * workspace_id is in claims and UI in audience
     *
     * @generated from enum value: WORKSPACE_SESSION = 80;
     */
    AuthenticationType[AuthenticationType["WORKSPACE_SESSION"] = 80] = "WORKSPACE_SESSION";
    /**
     * @generated from enum value: WORKSPACE_SESSION_CUSTOMER_PORTAL = 112;
     */
    AuthenticationType[AuthenticationType["WORKSPACE_SESSION_CUSTOMER_PORTAL"] = 112] = "WORKSPACE_SESSION_CUSTOMER_PORTAL";
    /**
     * workspace_id,organization_id is in claims and UI in audience
     *
     * @generated from enum value: WORKSPACE_SESSION_CUSTOMER_PORTAL_CLIENT = 116;
     */
    AuthenticationType[AuthenticationType["WORKSPACE_SESSION_CUSTOMER_PORTAL_CLIENT"] = 116] = "WORKSPACE_SESSION_CUSTOMER_PORTAL_CLIENT";
    /**
     * user_id is in claims
     *
     * @generated from enum value: USER = 8;
     */
    AuthenticationType[AuthenticationType["USER"] = 8] = "USER";
    /**
     * client Id is in subject
     *
     * @generated from enum value: CLIENT = 4;
     */
    AuthenticationType[AuthenticationType["CLIENT"] = 4] = "CLIENT";
    /**
     * UI in audience or client Id is in subject
     *
     * @generated from enum value: SESSION_CLIENT = 20;
     */
    AuthenticationType[AuthenticationType["SESSION_CLIENT"] = 20] = "SESSION_CLIENT";
    /**
     * workspace_id is in claims, UI in audience and client Id is in subject
     *
     * @generated from enum value: WORKSPACE_SESSION_CLIENT = 84;
     */
    AuthenticationType[AuthenticationType["WORKSPACE_SESSION_CLIENT"] = 84] = "WORKSPACE_SESSION_CLIENT";
    /**
     * claims has organisation ID, UI in audience and client Id is in subject
     *
     * @generated from enum value: CUSTOMER_PORTAL_SESSION_CLIENT = 52;
     */
    AuthenticationType[AuthenticationType["CUSTOMER_PORTAL_SESSION_CLIENT"] = 52] = "CUSTOMER_PORTAL_SESSION_CLIENT";
})(AuthenticationType || (exports.AuthenticationType = AuthenticationType = {}));
// Retrieve enum metadata with: proto3.getEnumType(AuthenticationType)
protobuf_1.proto3.util.setEnumType(AuthenticationType, "scalekit.v1.options.AuthenticationType", [
    { no: 0, name: "BLOCKED" },
    { no: 1, name: "NONE" },
    { no: 64, name: "WORKSPACE" },
    { no: 32, name: "CUSTOMER_PORTAL" },
    { no: 16, name: "SESSION" },
    { no: 80, name: "WORKSPACE_SESSION" },
    { no: 112, name: "WORKSPACE_SESSION_CUSTOMER_PORTAL" },
    { no: 116, name: "WORKSPACE_SESSION_CUSTOMER_PORTAL_CLIENT" },
    { no: 8, name: "USER" },
    { no: 4, name: "CLIENT" },
    { no: 20, name: "SESSION_CLIENT" },
    { no: 84, name: "WORKSPACE_SESSION_CLIENT" },
    { no: 52, name: "CUSTOMER_PORTAL_SESSION_CLIENT" },
]);
/**
 * @generated from message scalekit.v1.options.AuthOption
 */
class AuthOption extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: scalekit.v1.options.AuthenticationType authentication_type = 3;
         */
        this.authenticationType = AuthenticationType.BLOCKED;
        /**
         * @generated from field: string permission = 1;
         */
        this.permission = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new AuthOption().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new AuthOption().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new AuthOption().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(AuthOption, a, b);
    }
}
exports.AuthOption = AuthOption;
AuthOption.runtime = protobuf_1.proto3;
AuthOption.typeName = "scalekit.v1.options.AuthOption";
AuthOption.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 3, name: "authentication_type", kind: "enum", T: protobuf_1.proto3.getEnumType(AuthenticationType) },
    { no: 1, name: "permission", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from extension: scalekit.v1.options.AuthOption auth_option = 50000;
 */
exports.auth_option = protobuf_1.proto3.makeExtension("scalekit.v1.options.auth_option", protobuf_1.MethodOptions, () => ({ no: 50000, kind: "message", T: AuthOption }));
//# sourceMappingURL=options_pb.js.map