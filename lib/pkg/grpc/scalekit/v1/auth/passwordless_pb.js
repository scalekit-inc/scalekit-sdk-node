"use strict";
// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file scalekit/v1/auth/passwordless.proto (package scalekit.v1.auth.passwordless, syntax proto3)
/* eslint-disable */
// @ts-nocheck
Object.defineProperty(exports, "__esModule", { value: true });
exports.VerifyPasswordLessResponse = exports.ResendPasswordlessRequest = exports.VerifyPasswordLessRequest = exports.SendPasswordlessResponse = exports.SendPasswordlessRequest = exports.PasswordlessType = exports.TemplateType = void 0;
const protobuf_1 = require("@bufbuild/protobuf");
/**
 * @generated from enum scalekit.v1.auth.passwordless.TemplateType
 */
var TemplateType;
(function (TemplateType) {
    /**
     * @generated from enum value: UNSPECIFIED = 0;
     */
    TemplateType[TemplateType["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from enum value: SIGNIN = 1;
     */
    TemplateType[TemplateType["SIGNIN"] = 1] = "SIGNIN";
    /**
     * @generated from enum value: SIGNUP = 2;
     */
    TemplateType[TemplateType["SIGNUP"] = 2] = "SIGNUP";
})(TemplateType || (exports.TemplateType = TemplateType = {}));
// Retrieve enum metadata with: proto3.getEnumType(TemplateType)
protobuf_1.proto3.util.setEnumType(TemplateType, "scalekit.v1.auth.passwordless.TemplateType", [
    { no: 0, name: "UNSPECIFIED" },
    { no: 1, name: "SIGNIN" },
    { no: 2, name: "SIGNUP" },
]);
/**
 * @generated from enum scalekit.v1.auth.passwordless.PasswordlessType
 */
var PasswordlessType;
(function (PasswordlessType) {
    /**
     * @generated from enum value: PASSWORDLESS_TYPE_UNSPECIFIED = 0;
     */
    PasswordlessType[PasswordlessType["PASSWORDLESS_TYPE_UNSPECIFIED"] = 0] = "PASSWORDLESS_TYPE_UNSPECIFIED";
    /**
     * @generated from enum value: OTP = 1;
     */
    PasswordlessType[PasswordlessType["OTP"] = 1] = "OTP";
    /**
     * @generated from enum value: LINK = 2;
     */
    PasswordlessType[PasswordlessType["LINK"] = 2] = "LINK";
    /**
     * @generated from enum value: LINK_OTP = 3;
     */
    PasswordlessType[PasswordlessType["LINK_OTP"] = 3] = "LINK_OTP";
})(PasswordlessType || (exports.PasswordlessType = PasswordlessType = {}));
// Retrieve enum metadata with: proto3.getEnumType(PasswordlessType)
protobuf_1.proto3.util.setEnumType(PasswordlessType, "scalekit.v1.auth.passwordless.PasswordlessType", [
    { no: 0, name: "PASSWORDLESS_TYPE_UNSPECIFIED" },
    { no: 1, name: "OTP" },
    { no: 2, name: "LINK" },
    { no: 3, name: "LINK_OTP" },
]);
/**
 * @generated from message scalekit.v1.auth.passwordless.SendPasswordlessRequest
 */
class SendPasswordlessRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string email = 1;
         */
        this.email = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SendPasswordlessRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SendPasswordlessRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SendPasswordlessRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SendPasswordlessRequest, a, b);
    }
}
exports.SendPasswordlessRequest = SendPasswordlessRequest;
SendPasswordlessRequest.runtime = protobuf_1.proto3;
SendPasswordlessRequest.typeName = "scalekit.v1.auth.passwordless.SendPasswordlessRequest";
SendPasswordlessRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "template", kind: "enum", T: protobuf_1.proto3.getEnumType(TemplateType), opt: true },
    { no: 3, name: "magiclink_redirect_uri", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "state", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "expires_in", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
]);
/**
 * @generated from message scalekit.v1.auth.passwordless.SendPasswordlessResponse
 */
class SendPasswordlessResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string auth_request_id = 1;
         */
        this.authRequestId = "";
        /**
         * @generated from field: int64 expires_at = 2;
         */
        this.expiresAt = protobuf_1.protoInt64.zero;
        /**
         * @generated from field: uint32 expires_in = 3;
         */
        this.expiresIn = 0;
        /**
         * @generated from field: scalekit.v1.auth.passwordless.PasswordlessType passwordless_type = 4;
         */
        this.passwordlessType = PasswordlessType.PASSWORDLESS_TYPE_UNSPECIFIED;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new SendPasswordlessResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new SendPasswordlessResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new SendPasswordlessResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(SendPasswordlessResponse, a, b);
    }
}
exports.SendPasswordlessResponse = SendPasswordlessResponse;
SendPasswordlessResponse.runtime = protobuf_1.proto3;
SendPasswordlessResponse.typeName = "scalekit.v1.auth.passwordless.SendPasswordlessResponse";
SendPasswordlessResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "auth_request_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "expires_at", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "expires_in", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "passwordless_type", kind: "enum", T: protobuf_1.proto3.getEnumType(PasswordlessType) },
]);
/**
 * @generated from message scalekit.v1.auth.passwordless.VerifyPasswordLessRequest
 */
class VerifyPasswordLessRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from oneof scalekit.v1.auth.passwordless.VerifyPasswordLessRequest.auth_credential
         */
        this.authCredential = { case: undefined };
        /**
         * @generated from field: string auth_request_id = 3;
         */
        this.authRequestId = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new VerifyPasswordLessRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new VerifyPasswordLessRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new VerifyPasswordLessRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(VerifyPasswordLessRequest, a, b);
    }
}
exports.VerifyPasswordLessRequest = VerifyPasswordLessRequest;
VerifyPasswordLessRequest.runtime = protobuf_1.proto3;
VerifyPasswordLessRequest.typeName = "scalekit.v1.auth.passwordless.VerifyPasswordLessRequest";
VerifyPasswordLessRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "auth_credential" },
    { no: 2, name: "link_token", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "auth_credential" },
    { no: 3, name: "auth_request_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message scalekit.v1.auth.passwordless.ResendPasswordlessRequest
 */
class ResendPasswordlessRequest extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string auth_request_id = 1;
         */
        this.authRequestId = "";
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new ResendPasswordlessRequest().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new ResendPasswordlessRequest().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new ResendPasswordlessRequest().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(ResendPasswordlessRequest, a, b);
    }
}
exports.ResendPasswordlessRequest = ResendPasswordlessRequest;
ResendPasswordlessRequest.runtime = protobuf_1.proto3;
ResendPasswordlessRequest.typeName = "scalekit.v1.auth.passwordless.ResendPasswordlessRequest";
ResendPasswordlessRequest.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "auth_request_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
]);
/**
 * @generated from message scalekit.v1.auth.passwordless.VerifyPasswordLessResponse
 */
class VerifyPasswordLessResponse extends protobuf_1.Message {
    constructor(data) {
        super();
        /**
         * @generated from field: string email = 1;
         */
        this.email = "";
        /**
         * @generated from field: scalekit.v1.auth.passwordless.PasswordlessType passwordless_type = 4;
         */
        this.passwordlessType = PasswordlessType.PASSWORDLESS_TYPE_UNSPECIFIED;
        protobuf_1.proto3.util.initPartial(data, this);
    }
    static fromBinary(bytes, options) {
        return new VerifyPasswordLessResponse().fromBinary(bytes, options);
    }
    static fromJson(jsonValue, options) {
        return new VerifyPasswordLessResponse().fromJson(jsonValue, options);
    }
    static fromJsonString(jsonString, options) {
        return new VerifyPasswordLessResponse().fromJsonString(jsonString, options);
    }
    static equals(a, b) {
        return protobuf_1.proto3.util.equals(VerifyPasswordLessResponse, a, b);
    }
}
exports.VerifyPasswordLessResponse = VerifyPasswordLessResponse;
VerifyPasswordLessResponse.runtime = protobuf_1.proto3;
VerifyPasswordLessResponse.typeName = "scalekit.v1.auth.passwordless.VerifyPasswordLessResponse";
VerifyPasswordLessResponse.fields = protobuf_1.proto3.util.newFieldList(() => [
    { no: 1, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "state", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "template", kind: "enum", T: protobuf_1.proto3.getEnumType(TemplateType), opt: true },
    { no: 4, name: "passwordless_type", kind: "enum", T: protobuf_1.proto3.getEnumType(PasswordlessType) },
]);
//# sourceMappingURL=passwordless_pb.js.map